{"version":3,"names":[],"mappings":"","sources":["inventory-groupings-management.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n},{\"core-js/library/fn/json/stringify\":3}],2:[function(require,module,exports){\nmodule.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n},{\"core-js/library/fn/object/assign\":4}],3:[function(require,module,exports){\nvar core  = require('../../modules/_core')\n  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n},{\"../../modules/_core\":9}],4:[function(require,module,exports){\nrequire('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n},{\"../../modules/_core\":9,\"../../modules/es6.object.assign\":39}],5:[function(require,module,exports){\nmodule.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n},{}],6:[function(require,module,exports){\nvar isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n},{\"./_is-object\":22}],7:[function(require,module,exports){\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n},{\"./_to-index\":32,\"./_to-iobject\":34,\"./_to-length\":35}],8:[function(require,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n},{}],9:[function(require,module,exports){\nvar core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n},{}],10:[function(require,module,exports){\n// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n},{\"./_a-function\":5}],11:[function(require,module,exports){\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n},{}],12:[function(require,module,exports){\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n},{\"./_fails\":16}],13:[function(require,module,exports){\nvar isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n},{\"./_global\":17,\"./_is-object\":22}],14:[function(require,module,exports){\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n},{}],15:[function(require,module,exports){\nvar global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n},{\"./_core\":9,\"./_ctx\":10,\"./_global\":17,\"./_hide\":19}],16:[function(require,module,exports){\nmodule.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n},{}],17:[function(require,module,exports){\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n},{}],18:[function(require,module,exports){\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n},{}],19:[function(require,module,exports){\nvar dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n},{\"./_descriptors\":12,\"./_object-dp\":24,\"./_property-desc\":29}],20:[function(require,module,exports){\nmodule.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n},{\"./_descriptors\":12,\"./_dom-create\":13,\"./_fails\":16}],21:[function(require,module,exports){\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n},{\"./_cof\":8}],22:[function(require,module,exports){\nmodule.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n},{}],23:[function(require,module,exports){\n'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = require('./_object-keys')\n  , gOPS     = require('./_object-gops')\n  , pIE      = require('./_object-pie')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject')\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n},{\"./_fails\":16,\"./_iobject\":21,\"./_object-gops\":25,\"./_object-keys\":27,\"./_object-pie\":28,\"./_to-object\":36}],24:[function(require,module,exports){\nvar anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n},{\"./_an-object\":6,\"./_descriptors\":12,\"./_ie8-dom-define\":20,\"./_to-primitive\":37}],25:[function(require,module,exports){\nexports.f = Object.getOwnPropertySymbols;\n},{}],26:[function(require,module,exports){\nvar has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n},{\"./_array-includes\":7,\"./_has\":18,\"./_shared-key\":30,\"./_to-iobject\":34}],27:[function(require,module,exports){\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n},{\"./_enum-bug-keys\":14,\"./_object-keys-internal\":26}],28:[function(require,module,exports){\nexports.f = {}.propertyIsEnumerable;\n},{}],29:[function(require,module,exports){\nmodule.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n},{}],30:[function(require,module,exports){\nvar shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n},{\"./_shared\":31,\"./_uid\":38}],31:[function(require,module,exports){\nvar global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n},{\"./_global\":17}],32:[function(require,module,exports){\nvar toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n},{\"./_to-integer\":33}],33:[function(require,module,exports){\n// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n},{}],34:[function(require,module,exports){\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n},{\"./_defined\":11,\"./_iobject\":21}],35:[function(require,module,exports){\n// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n},{\"./_to-integer\":33}],36:[function(require,module,exports){\n// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n},{\"./_defined\":11}],37:[function(require,module,exports){\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n},{\"./_is-object\":22}],38:[function(require,module,exports){\nvar id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n},{}],39:[function(require,module,exports){\n// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});\n},{\"./_export\":15,\"./_object-assign\":23}],40:[function(require,module,exports){\n/**\n * Intro.js v2.4.0\n * https://github.com/usablica/intro.js\n *\n * Copyright (C) 2016 Afshin Mehrabani (@afshinmeh)\n */\n\n(function (root, factory) {\n  if (typeof exports === 'object') {\n    // CommonJS\n    factory(exports);\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['exports'], factory);\n  } else {\n    // Browser globals\n    factory(root);\n  }\n} (this, function (exports) {\n  //Default config/variables\n  var VERSION = '2.4.0';\n\n  /**\n   * IntroJs main class\n   *\n   * @class IntroJs\n   */\n  function IntroJs(obj) {\n    this._targetElement = obj;\n    this._introItems = [];\n\n    this._options = {\n      /* Next button label in tooltip box */\n      nextLabel: 'Next &rarr;',\n      /* Previous button label in tooltip box */\n      prevLabel: '&larr; Back',\n      /* Skip button label in tooltip box */\n      skipLabel: 'Skip',\n      /* Done button label in tooltip box */\n      doneLabel: 'Done',\n      /* Hide previous button in the first step? Otherwise, it will be disabled button. */\n      hidePrev: false,\n      /* Hide next button in the last step? Otherwise, it will be disabled button. */\n      hideNext: false,\n      /* Default tooltip box position */\n      tooltipPosition: 'bottom',\n      /* Next CSS class for tooltip boxes */\n      tooltipClass: '',\n      /* CSS class that is added to the helperLayer */\n      highlightClass: '',\n      /* Close introduction when pressing Escape button? */\n      exitOnEsc: true,\n      /* Close introduction when clicking on overlay layer? */\n      exitOnOverlayClick: true,\n      /* Show step numbers in introduction? */\n      showStepNumbers: true,\n      /* Let user use keyboard to navigate the tour? */\n      keyboardNavigation: true,\n      /* Show tour control buttons? */\n      showButtons: true,\n      /* Show tour bullets? */\n      showBullets: true,\n      /* Show tour progress? */\n      showProgress: false,\n      /* Scroll to highlighted element? */\n      scrollToElement: true,\n      /* Set the overlay opacity */\n      overlayOpacity: 0.8,\n      /* Padding to add after scrolling when element is not in the viewport (in pixels) */\n      scrollPadding: 30,\n      /* Precedence of positions, when auto is enabled */\n      positionPrecedence: [\"bottom\", \"top\", \"right\", \"left\"],\n      /* Disable an interaction with element? */\n      disableInteraction: false,\n      /* Default hint position */\n      hintPosition: 'top-middle',\n      /* Hint button label */\n      hintButtonLabel: 'Got it',\n      /* Adding animation to hints? */\n      hintAnimation: true\n    };\n  }\n\n  /**\n   * Initiate a new introduction/guide from an element in the page\n   *\n   * @api private\n   * @method _introForElement\n   * @param {Object} targetElm\n   * @returns {Boolean} Success or not?\n   */\n  function _introForElement(targetElm) {\n    var introItems = [],\n        self = this;\n\n    if (this._options.steps) {\n      //use steps passed programmatically\n      for (var i = 0, stepsLength = this._options.steps.length; i < stepsLength; i++) {\n        var currentItem = _cloneObject(this._options.steps[i]);\n        //set the step\n        currentItem.step = introItems.length + 1;\n        //use querySelector function only when developer used CSS selector\n        if (typeof(currentItem.element) === 'string') {\n          //grab the element with given selector from the page\n          currentItem.element = document.querySelector(currentItem.element);\n        }\n\n        //intro without element\n        if (typeof(currentItem.element) === 'undefined' || currentItem.element == null) {\n          var floatingElementQuery = document.querySelector(\".introjsFloatingElement\");\n\n          if (floatingElementQuery == null) {\n            floatingElementQuery = document.createElement('div');\n            floatingElementQuery.className = 'introjsFloatingElement';\n\n            document.body.appendChild(floatingElementQuery);\n          }\n\n          currentItem.element  = floatingElementQuery;\n          currentItem.position = 'floating';\n        }\n\n        if (currentItem.element != null) {\n          introItems.push(currentItem);\n        }\n      }\n\n    } else {\n      //use steps from data-* annotations\n      var allIntroSteps = targetElm.querySelectorAll('*[data-intro]');\n      //if there's no element to intro\n      if (allIntroSteps.length < 1) {\n        return false;\n      }\n\n      //first add intro items with data-step\n      for (var i = 0, elmsLength = allIntroSteps.length; i < elmsLength; i++) {\n        var currentElement = allIntroSteps[i];\n\n        // skip hidden elements\n        if (currentElement.style.display == 'none') {\n          continue;\n        }\n\n        var step = parseInt(currentElement.getAttribute('data-step'), 10);\n\n        if (step > 0) {\n          introItems[step - 1] = {\n            element: currentElement,\n            intro: currentElement.getAttribute('data-intro'),\n            step: parseInt(currentElement.getAttribute('data-step'), 10),\n            tooltipClass: currentElement.getAttribute('data-tooltipClass'),\n            highlightClass: currentElement.getAttribute('data-highlightClass'),\n            position: currentElement.getAttribute('data-position') || this._options.tooltipPosition\n          };\n        }\n      }\n\n      //next add intro items without data-step\n      //todo: we need a cleanup here, two loops are redundant\n      var nextStep = 0;\n      for (var i = 0, elmsLength = allIntroSteps.length; i < elmsLength; i++) {\n        var currentElement = allIntroSteps[i];\n\n        if (currentElement.getAttribute('data-step') == null) {\n\n          while (true) {\n            if (typeof introItems[nextStep] == 'undefined') {\n              break;\n            } else {\n              nextStep++;\n            }\n          }\n\n          introItems[nextStep] = {\n            element: currentElement,\n            intro: currentElement.getAttribute('data-intro'),\n            step: nextStep + 1,\n            tooltipClass: currentElement.getAttribute('data-tooltipClass'),\n            highlightClass: currentElement.getAttribute('data-highlightClass'),\n            position: currentElement.getAttribute('data-position') || this._options.tooltipPosition\n          };\n        }\n      }\n    }\n\n    //removing undefined/null elements\n    var tempIntroItems = [];\n    for (var z = 0; z < introItems.length; z++) {\n      introItems[z] && tempIntroItems.push(introItems[z]);  // copy non-empty values to the end of the array\n    }\n\n    introItems = tempIntroItems;\n\n    //Ok, sort all items with given steps\n    introItems.sort(function (a, b) {\n      return a.step - b.step;\n    });\n\n    //set it to the introJs object\n    self._introItems = introItems;\n\n    //add overlay layer to the page\n    if(_addOverlayLayer.call(self, targetElm)) {\n      //then, start the show\n      _nextStep.call(self);\n\n      var skipButton     = targetElm.querySelector('.introjs-skipbutton'),\n          nextStepButton = targetElm.querySelector('.introjs-nextbutton');\n\n      self._onKeyDown = function(e) {\n        if (e.keyCode === 27 && self._options.exitOnEsc == true) {\n          //escape key pressed, exit the intro\n          //check if exit callback is defined\n          if (self._introExitCallback != undefined) {\n            self._introExitCallback.call(self);\n          }\n          _exitIntro.call(self, targetElm);\n        } else if(e.keyCode === 37) {\n          //left arrow\n          _previousStep.call(self);\n        } else if (e.keyCode === 39) {\n          //right arrow\n          _nextStep.call(self);\n        } else if (e.keyCode === 13) {\n          //srcElement === ie\n          var target = e.target || e.srcElement;\n          if (target && target.className.indexOf('introjs-prevbutton') > 0) {\n            //user hit enter while focusing on previous button\n            _previousStep.call(self);\n          } else if (target && target.className.indexOf('introjs-skipbutton') > 0) {\n            //user hit enter while focusing on skip button\n            if (self._introItems.length - 1 == self._currentStep && typeof (self._introCompleteCallback) === 'function') {\n                self._introCompleteCallback.call(self);\n            }\n            //check if any callback is defined\n            if (self._introExitCallback != undefined) {\n              self._introExitCallback.call(self);\n            }\n            _exitIntro.call(self, targetElm);\n          } else {\n            //default behavior for responding to enter\n            _nextStep.call(self);\n          }\n\n          //prevent default behaviour on hitting Enter, to prevent steps being skipped in some browsers\n          if(e.preventDefault) {\n            e.preventDefault();\n          } else {\n            e.returnValue = false;\n          }\n        }\n      };\n\n      self._onResize = function(e) {\n        _setHelperLayerPosition.call(self, document.querySelector('.introjs-helperLayer'));\n        _setHelperLayerPosition.call(self, document.querySelector('.introjs-tooltipReferenceLayer'));\n      };\n\n      if (window.addEventListener) {\n        if (this._options.keyboardNavigation) {\n          window.addEventListener('keydown', self._onKeyDown, true);\n        }\n        //for window resize\n        window.addEventListener('resize', self._onResize, true);\n      } else if (document.attachEvent) { //IE\n        if (this._options.keyboardNavigation) {\n          document.attachEvent('onkeydown', self._onKeyDown);\n        }\n        //for window resize\n        document.attachEvent('onresize', self._onResize);\n      }\n    }\n    return false;\n  }\n\n /*\n   * makes a copy of the object\n   * @api private\n   * @method _cloneObject\n  */\n  function _cloneObject(object) {\n      if (object == null || typeof (object) != 'object' || typeof (object.nodeType) != 'undefined') {\n        return object;\n      }\n      var temp = {};\n      for (var key in object) {\n        if (typeof (jQuery) != 'undefined' && object[key] instanceof jQuery) {\n          temp[key] = object[key];\n        } else {\n          temp[key] = _cloneObject(object[key]);\n        }\n      }\n      return temp;\n  }\n  /**\n   * Go to specific step of introduction\n   *\n   * @api private\n   * @method _goToStep\n   */\n  function _goToStep(step) {\n    //because steps starts with zero\n    this._currentStep = step - 2;\n    if (typeof (this._introItems) !== 'undefined') {\n      _nextStep.call(this);\n    }\n  }\n\n  /**\n   * Go to next step on intro\n   *\n   * @api private\n   * @method _nextStep\n   */\n  function _nextStep() {\n    this._direction = 'forward';\n\n    if (typeof (this._currentStep) === 'undefined') {\n      this._currentStep = 0;\n    } else {\n      ++this._currentStep;\n    }\n\n    if ((this._introItems.length) <= this._currentStep) {\n      //end of the intro\n      //check if any callback is defined\n      if (typeof (this._introCompleteCallback) === 'function') {\n        this._introCompleteCallback.call(this);\n      }\n      _exitIntro.call(this, this._targetElement);\n      return;\n    }\n\n    var nextStep = this._introItems[this._currentStep];\n    if (typeof (this._introBeforeChangeCallback) !== 'undefined') {\n      this._introBeforeChangeCallback.call(this, nextStep.element);\n    }\n\n    _showElement.call(this, nextStep);\n  }\n\n  /**\n   * Go to previous step on intro\n   *\n   * @api private\n   * @method _nextStep\n   */\n  function _previousStep() {\n    this._direction = 'backward';\n\n    if (this._currentStep === 0) {\n      return false;\n    }\n\n    var nextStep = this._introItems[--this._currentStep];\n    if (typeof (this._introBeforeChangeCallback) !== 'undefined') {\n      this._introBeforeChangeCallback.call(this, nextStep.element);\n    }\n\n    _showElement.call(this, nextStep);\n  }\n\n  /**\n   * Exit from intro\n   *\n   * @api private\n   * @method _exitIntro\n   * @param {Object} targetElement\n   */\n  function _exitIntro(targetElement) {\n    //remove overlay layers from the page\n    var overlayLayers = targetElement.querySelectorAll('.introjs-overlay');\n\n    if (overlayLayers && overlayLayers.length > 0) {\n      for (var i = overlayLayers.length - 1; i >= 0; i--) {\n        //for fade-out animation\n        var overlayLayer = overlayLayers[i];\n        overlayLayer.style.opacity = 0;\n        setTimeout(function () {\n          if (this.parentNode) {\n            this.parentNode.removeChild(this);\n          }\n        }.bind(overlayLayer), 500);\n      };\n    }\n\n    //remove all helper layers\n    var helperLayer = targetElement.querySelector('.introjs-helperLayer');\n    if (helperLayer) {\n      helperLayer.parentNode.removeChild(helperLayer);\n    }\n\n    var referenceLayer = targetElement.querySelector('.introjs-tooltipReferenceLayer');\n    if (referenceLayer) {\n      referenceLayer.parentNode.removeChild(referenceLayer);\n    }\n    //remove disableInteractionLayer\n    var disableInteractionLayer = targetElement.querySelector('.introjs-disableInteraction');\n    if (disableInteractionLayer) {\n      disableInteractionLayer.parentNode.removeChild(disableInteractionLayer);\n    }\n\n    //remove intro floating element\n    var floatingElement = document.querySelector('.introjsFloatingElement');\n    if (floatingElement) {\n      floatingElement.parentNode.removeChild(floatingElement);\n    }\n\n    //remove `introjs-showElement` class from the element\n    var showElement = document.querySelector('.introjs-showElement');\n    if (showElement) {\n      showElement.className = showElement.className.replace(/introjs-[a-zA-Z]+/g, '').replace(/^\\s+|\\s+$/g, ''); // This is a manual trim.\n    }\n\n    //remove `introjs-fixParent` class from the elements\n    var fixParents = document.querySelectorAll('.introjs-fixParent');\n    if (fixParents && fixParents.length > 0) {\n      for (var i = fixParents.length - 1; i >= 0; i--) {\n        fixParents[i].className = fixParents[i].className.replace(/introjs-fixParent/g, '').replace(/^\\s+|\\s+$/g, '');\n      }\n    }\n\n    //clean listeners\n    if (window.removeEventListener) {\n      window.removeEventListener('keydown', this._onKeyDown, true);\n    } else if (document.detachEvent) { //IE\n      document.detachEvent('onkeydown', this._onKeyDown);\n    }\n\n    //set the step to zero\n    this._currentStep = undefined;\n  }\n\n  /**\n   * Render tooltip box in the page\n   *\n   * @api private\n   * @method _placeTooltip\n   * @param {HTMLElement} targetElement\n   * @param {HTMLElement} tooltipLayer\n   * @param {HTMLElement} arrowLayer\n   * @param {HTMLElement} helperNumberLayer\n   * @param {Boolean} hintMode\n   */\n  function _placeTooltip(targetElement, tooltipLayer, arrowLayer, helperNumberLayer, hintMode) {\n    var tooltipCssClass = '',\n        currentStepObj,\n        tooltipOffset,\n        targetOffset,\n        windowSize,\n        currentTooltipPosition;\n\n    hintMode = hintMode || false;\n\n    //reset the old style\n    tooltipLayer.style.top        = null;\n    tooltipLayer.style.right      = null;\n    tooltipLayer.style.bottom     = null;\n    tooltipLayer.style.left       = null;\n    tooltipLayer.style.marginLeft = null;\n    tooltipLayer.style.marginTop  = null;\n\n    arrowLayer.style.display = 'inherit';\n\n    if (typeof(helperNumberLayer) != 'undefined' && helperNumberLayer != null) {\n      helperNumberLayer.style.top  = null;\n      helperNumberLayer.style.left = null;\n    }\n\n    //prevent error when `this._currentStep` is undefined\n    if (!this._introItems[this._currentStep]) return;\n\n    //if we have a custom css class for each step\n    currentStepObj = this._introItems[this._currentStep];\n    if (typeof (currentStepObj.tooltipClass) === 'string') {\n      tooltipCssClass = currentStepObj.tooltipClass;\n    } else {\n      tooltipCssClass = this._options.tooltipClass;\n    }\n\n    tooltipLayer.className = ('introjs-tooltip ' + tooltipCssClass).replace(/^\\s+|\\s+$/g, '');\n\n    currentTooltipPosition = this._introItems[this._currentStep].position;\n    if ((currentTooltipPosition == \"auto\" || this._options.tooltipPosition == \"auto\")) {\n      if (currentTooltipPosition != \"floating\") { // Floating is always valid, no point in calculating\n        currentTooltipPosition = _determineAutoPosition.call(this, targetElement, tooltipLayer, currentTooltipPosition);\n      }\n    }\n    targetOffset  = _getOffset(targetElement);\n    tooltipOffset = _getOffset(tooltipLayer);\n    windowSize    = _getWinSize();\n\n    switch (currentTooltipPosition) {\n      case 'top':\n        arrowLayer.className = 'introjs-arrow bottom';\n\n        if (hintMode) {\n          var tooltipLayerStyleLeft = 0;\n        } else {\n          var tooltipLayerStyleLeft = 15;\n        }\n\n        _checkRight(targetOffset, tooltipLayerStyleLeft, tooltipOffset, windowSize, tooltipLayer);\n        tooltipLayer.style.bottom = (targetOffset.height +  20) + 'px';\n        break;\n      case 'right':\n        tooltipLayer.style.left = (targetOffset.width + 20) + 'px';\n        if (targetOffset.top + tooltipOffset.height > windowSize.height) {\n          // In this case, right would have fallen below the bottom of the screen.\n          // Modify so that the bottom of the tooltip connects with the target\n          arrowLayer.className = \"introjs-arrow left-bottom\";\n          tooltipLayer.style.top = \"-\" + (tooltipOffset.height - targetOffset.height - 20) + \"px\";\n        } else {\n          arrowLayer.className = 'introjs-arrow left';\n        }\n        break;\n      case 'left':\n        if (!hintMode && this._options.showStepNumbers == true) {\n          tooltipLayer.style.top = '15px';\n        }\n\n        if (targetOffset.top + tooltipOffset.height > windowSize.height) {\n          // In this case, left would have fallen below the bottom of the screen.\n          // Modify so that the bottom of the tooltip connects with the target\n          tooltipLayer.style.top = \"-\" + (tooltipOffset.height - targetOffset.height - 20) + \"px\";\n          arrowLayer.className = 'introjs-arrow right-bottom';\n        } else {\n          arrowLayer.className = 'introjs-arrow right';\n        }\n        tooltipLayer.style.right = (targetOffset.width + 20) + 'px';\n\n        break;\n      case 'floating':\n        arrowLayer.style.display = 'none';\n\n        //we have to adjust the top and left of layer manually for intro items without element\n        tooltipLayer.style.left   = '50%';\n        tooltipLayer.style.top    = '50%';\n        tooltipLayer.style.marginLeft = '-' + (tooltipOffset.width / 2)  + 'px';\n        tooltipLayer.style.marginTop  = '-' + (tooltipOffset.height / 2) + 'px';\n\n        if (typeof(helperNumberLayer) != 'undefined' && helperNumberLayer != null) {\n          helperNumberLayer.style.left = '-' + ((tooltipOffset.width / 2) + 18) + 'px';\n          helperNumberLayer.style.top  = '-' + ((tooltipOffset.height / 2) + 18) + 'px';\n        }\n\n        break;\n      case 'bottom-right-aligned':\n        arrowLayer.className      = 'introjs-arrow top-right';\n\n        var tooltipLayerStyleRight = 0;\n        _checkLeft(targetOffset, tooltipLayerStyleRight, tooltipOffset, tooltipLayer);\n        tooltipLayer.style.top    = (targetOffset.height +  20) + 'px';\n        break;\n\n      case 'bottom-middle-aligned':\n        arrowLayer.className      = 'introjs-arrow top-middle';\n\n        var tooltipLayerStyleLeftRight = targetOffset.width / 2 - tooltipOffset.width / 2;\n\n        // a fix for middle aligned hints\n        if (hintMode) {\n          tooltipLayerStyleLeftRight += 5;\n        }\n\n        if (_checkLeft(targetOffset, tooltipLayerStyleLeftRight, tooltipOffset, tooltipLayer)) {\n          tooltipLayer.style.right = null;\n          _checkRight(targetOffset, tooltipLayerStyleLeftRight, tooltipOffset, windowSize, tooltipLayer);\n        }\n        tooltipLayer.style.top = (targetOffset.height + 20) + 'px';\n        break;\n\n      case 'bottom-left-aligned':\n      // Bottom-left-aligned is the same as the default bottom\n      case 'bottom':\n      // Bottom going to follow the default behavior\n      default:\n        arrowLayer.className = 'introjs-arrow top';\n\n        var tooltipLayerStyleLeft = 0;\n        _checkRight(targetOffset, tooltipLayerStyleLeft, tooltipOffset, windowSize, tooltipLayer);\n        tooltipLayer.style.top    = (targetOffset.height +  20) + 'px';\n        break;\n    }\n  }\n\n  /**\n   * Set tooltip left so it doesn't go off the right side of the window\n   *\n   * @return boolean true, if tooltipLayerStyleLeft is ok.  false, otherwise.\n   */\n  function _checkRight(targetOffset, tooltipLayerStyleLeft, tooltipOffset, windowSize, tooltipLayer) {\n    if (targetOffset.left + tooltipLayerStyleLeft + tooltipOffset.width > windowSize.width) {\n      // off the right side of the window\n      tooltipLayer.style.left = (windowSize.width - tooltipOffset.width - targetOffset.left) + 'px';\n      return false;\n    }\n    tooltipLayer.style.left = tooltipLayerStyleLeft + 'px';\n    return true;\n  }\n\n  /**\n   * Set tooltip right so it doesn't go off the left side of the window\n   *\n   * @return boolean true, if tooltipLayerStyleRight is ok.  false, otherwise.\n   */\n  function _checkLeft(targetOffset, tooltipLayerStyleRight, tooltipOffset, tooltipLayer) {\n    if (targetOffset.left + targetOffset.width - tooltipLayerStyleRight - tooltipOffset.width < 0) {\n      // off the left side of the window\n      tooltipLayer.style.left = (-targetOffset.left) + 'px';\n      return false;\n    }\n    tooltipLayer.style.right = tooltipLayerStyleRight + 'px';\n    return true;\n  }\n\n  /**\n   * Determines the position of the tooltip based on the position precedence and availability\n   * of screen space.\n   *\n   * @param {Object} targetElement\n   * @param {Object} tooltipLayer\n   * @param {Object} desiredTooltipPosition\n   *\n   */\n  function _determineAutoPosition(targetElement, tooltipLayer, desiredTooltipPosition) {\n\n    // Take a clone of position precedence. These will be the available\n    var possiblePositions = this._options.positionPrecedence.slice();\n\n    var windowSize = _getWinSize();\n    var tooltipHeight = _getOffset(tooltipLayer).height + 10;\n    var tooltipWidth = _getOffset(tooltipLayer).width + 20;\n    var targetOffset = _getOffset(targetElement);\n\n    // If we check all the possible areas, and there are no valid places for the tooltip, the element\n    // must take up most of the screen real estate. Show the tooltip floating in the middle of the screen.\n    var calculatedPosition = \"floating\";\n\n    // Check if the width of the tooltip + the starting point would spill off the right side of the screen\n    // If no, neither bottom or top are valid\n    if (targetOffset.left + tooltipWidth > windowSize.width || ((targetOffset.left + (targetOffset.width / 2)) - tooltipWidth) < 0) {\n      _removeEntry(possiblePositions, \"bottom\");\n      _removeEntry(possiblePositions, \"top\");\n    } else {\n      // Check for space below\n      if ((targetOffset.height + targetOffset.top + tooltipHeight) > windowSize.height) {\n        _removeEntry(possiblePositions, \"bottom\");\n      }\n\n      // Check for space above\n      if (targetOffset.top - tooltipHeight < 0) {\n        _removeEntry(possiblePositions, \"top\");\n      }\n    }\n\n    // Check for space to the right\n    if (targetOffset.width + targetOffset.left + tooltipWidth > windowSize.width) {\n      _removeEntry(possiblePositions, \"right\");\n    }\n\n    // Check for space to the left\n    if (targetOffset.left - tooltipWidth < 0) {\n      _removeEntry(possiblePositions, \"left\");\n    }\n\n    // At this point, our array only has positions that are valid. Pick the first one, as it remains in order\n    if (possiblePositions.length > 0) {\n      calculatedPosition = possiblePositions[0];\n    }\n\n    // If the requested position is in the list, replace our calculated choice with that\n    if (desiredTooltipPosition && desiredTooltipPosition != \"auto\") {\n      if (possiblePositions.indexOf(desiredTooltipPosition) > -1) {\n        calculatedPosition = desiredTooltipPosition;\n      }\n    }\n\n    return calculatedPosition;\n  }\n\n  /**\n   * Remove an entry from a string array if it's there, does nothing if it isn't there.\n   *\n   * @param {Array} stringArray\n   * @param {String} stringToRemove\n   */\n  function _removeEntry(stringArray, stringToRemove) {\n    if (stringArray.indexOf(stringToRemove) > -1) {\n      stringArray.splice(stringArray.indexOf(stringToRemove), 1);\n    }\n  }\n\n  /**\n   * Update the position of the helper layer on the screen\n   *\n   * @api private\n   * @method _setHelperLayerPosition\n   * @param {Object} helperLayer\n   */\n  function _setHelperLayerPosition(helperLayer) {\n    if (helperLayer) {\n      //prevent error when `this._currentStep` in undefined\n      if (!this._introItems[this._currentStep]) return;\n\n      var currentElement  = this._introItems[this._currentStep],\n          elementPosition = _getOffset(currentElement.element),\n          widthHeightPadding = 10;\n\n      // If the target element is fixed, the tooltip should be fixed as well.\n      // Otherwise, remove a fixed class that may be left over from the previous\n      // step.\n      if (_isFixed(currentElement.element)) {\n        helperLayer.className += ' introjs-fixedTooltip';\n      } else {\n        helperLayer.className = helperLayer.className.replace(' introjs-fixedTooltip', '');\n      }\n\n      if (currentElement.position == 'floating') {\n        widthHeightPadding = 0;\n      }\n\n      //set new position to helper layer\n      helperLayer.setAttribute('style', 'width: ' + (elementPosition.width  + widthHeightPadding)  + 'px; ' +\n                                        'height:' + (elementPosition.height + widthHeightPadding)  + 'px; ' +\n                                        'top:'    + (elementPosition.top    - 5)   + 'px;' +\n                                        'left: '  + (elementPosition.left   - 5)   + 'px;');\n\n    }\n  }\n\n  /**\n   * Add disableinteraction layer and adjust the size and position of the layer\n   *\n   * @api private\n   * @method _disableInteraction\n   */\n  function _disableInteraction() {\n    var disableInteractionLayer = document.querySelector('.introjs-disableInteraction');\n    if (disableInteractionLayer === null) {\n      disableInteractionLayer = document.createElement('div');\n      disableInteractionLayer.className = 'introjs-disableInteraction';\n      this._targetElement.appendChild(disableInteractionLayer);\n    }\n\n    _setHelperLayerPosition.call(this, disableInteractionLayer);\n  }\n\n  /**\n   * Setting anchors to behave like buttons\n   *\n   * @api private\n   * @method _setAnchorAsButton\n   */\n  function _setAnchorAsButton(anchor){\n    anchor.setAttribute('role', 'button');\n    anchor.tabIndex = 0;\n  }\n\n  /**\n   * Show an element on the page\n   *\n   * @api private\n   * @method _showElement\n   * @param {Object} targetElement\n   */\n  function _showElement(targetElement) {\n    if (typeof (this._introChangeCallback) !== 'undefined') {\n      this._introChangeCallback.call(this, targetElement.element);\n    }\n\n    var self = this,\n        oldHelperLayer = document.querySelector('.introjs-helperLayer'),\n        oldReferenceLayer = document.querySelector('.introjs-tooltipReferenceLayer'),\n        highlightClass = 'introjs-helperLayer',\n        elementPosition = _getOffset(targetElement.element);\n\n    //check for a current step highlight class\n    if (typeof (targetElement.highlightClass) === 'string') {\n      highlightClass += (' ' + targetElement.highlightClass);\n    }\n    //check for options highlight class\n    if (typeof (this._options.highlightClass) === 'string') {\n      highlightClass += (' ' + this._options.highlightClass);\n    }\n\n    if (oldHelperLayer != null) {\n      var oldHelperNumberLayer = oldReferenceLayer.querySelector('.introjs-helperNumberLayer'),\n          oldtooltipLayer      = oldReferenceLayer.querySelector('.introjs-tooltiptext'),\n          oldArrowLayer        = oldReferenceLayer.querySelector('.introjs-arrow'),\n          oldtooltipContainer  = oldReferenceLayer.querySelector('.introjs-tooltip'),\n          skipTooltipButton    = oldReferenceLayer.querySelector('.introjs-skipbutton'),\n          prevTooltipButton    = oldReferenceLayer.querySelector('.introjs-prevbutton'),\n          nextTooltipButton    = oldReferenceLayer.querySelector('.introjs-nextbutton');\n\n      //update or reset the helper highlight class\n      oldHelperLayer.className = highlightClass;\n      //hide the tooltip\n      oldtooltipContainer.style.opacity = 0;\n      oldtooltipContainer.style.display = \"none\";\n\n      if (oldHelperNumberLayer != null) {\n        var lastIntroItem = this._introItems[(targetElement.step - 2 >= 0 ? targetElement.step - 2 : 0)];\n\n        if (lastIntroItem != null && (this._direction == 'forward' && lastIntroItem.position == 'floating') || (this._direction == 'backward' && targetElement.position == 'floating')) {\n          oldHelperNumberLayer.style.opacity = 0;\n        }\n      }\n\n      //set new position to helper layer\n      _setHelperLayerPosition.call(self, oldHelperLayer);\n      _setHelperLayerPosition.call(self, oldReferenceLayer);\n\n      //remove `introjs-fixParent` class from the elements\n      var fixParents = document.querySelectorAll('.introjs-fixParent');\n      if (fixParents && fixParents.length > 0) {\n        for (var i = fixParents.length - 1; i >= 0; i--) {\n          fixParents[i].className = fixParents[i].className.replace(/introjs-fixParent/g, '').replace(/^\\s+|\\s+$/g, '');\n        };\n      }\n\n      //remove old classes if the element still exist\n      var oldShowElement = document.querySelector('.introjs-showElement');\n      if(oldShowElement) {\n        oldShowElement.className = oldShowElement.className.replace(/introjs-[a-zA-Z]+/g, '').replace(/^\\s+|\\s+$/g, '');\n      }\n\n      //we should wait until the CSS3 transition is competed (it's 0.3 sec) to prevent incorrect `height` and `width` calculation\n      if (self._lastShowElementTimer) {\n        clearTimeout(self._lastShowElementTimer);\n      }\n      self._lastShowElementTimer = setTimeout(function() {\n        //set current step to the label\n        if (oldHelperNumberLayer != null) {\n          oldHelperNumberLayer.innerHTML = targetElement.step;\n        }\n        //set current tooltip text\n        oldtooltipLayer.innerHTML = targetElement.intro;\n        //set the tooltip position\n        oldtooltipContainer.style.display = \"block\";\n        _placeTooltip.call(self, targetElement.element, oldtooltipContainer, oldArrowLayer, oldHelperNumberLayer);\n\n        //change active bullet\n        if (self._options.showBullets) {\n            oldReferenceLayer.querySelector('.introjs-bullets li > a.active').className = '';\n            oldReferenceLayer.querySelector('.introjs-bullets li > a[data-stepnumber=\"' + targetElement.step + '\"]').className = 'active';\n        }\n        oldReferenceLayer.querySelector('.introjs-progress .introjs-progressbar').setAttribute('style', 'width:' + _getProgress.call(self) + '%;');\n\n        //show the tooltip\n        oldtooltipContainer.style.opacity = 1;\n        if (oldHelperNumberLayer) oldHelperNumberLayer.style.opacity = 1;\n\n        //reset button focus\n        if (nextTooltipButton.tabIndex === -1) {\n          //tabindex of -1 means we are at the end of the tour - focus on skip / done\n          skipTooltipButton.focus();\n        } else {\n          //still in the tour, focus on next\n          nextTooltipButton.focus();\n        }\n      }, 350);\n\n    } else {\n      var helperLayer       = document.createElement('div'),\n          referenceLayer    = document.createElement('div'),\n          arrowLayer        = document.createElement('div'),\n          tooltipLayer      = document.createElement('div'),\n          tooltipTextLayer  = document.createElement('div'),\n          bulletsLayer      = document.createElement('div'),\n          progressLayer     = document.createElement('div'),\n          buttonsLayer      = document.createElement('div');\n\n      helperLayer.className = highlightClass;\n      referenceLayer.className = 'introjs-tooltipReferenceLayer';\n\n      //set new position to helper layer\n      _setHelperLayerPosition.call(self, helperLayer);\n      _setHelperLayerPosition.call(self, referenceLayer);\n\n      //add helper layer to target element\n      this._targetElement.appendChild(helperLayer);\n      this._targetElement.appendChild(referenceLayer);\n\n      arrowLayer.className = 'introjs-arrow';\n\n      tooltipTextLayer.className = 'introjs-tooltiptext';\n      tooltipTextLayer.innerHTML = targetElement.intro;\n\n      bulletsLayer.className = 'introjs-bullets';\n\n      if (this._options.showBullets === false) {\n        bulletsLayer.style.display = 'none';\n      }\n\n      var ulContainer = document.createElement('ul');\n\n      for (var i = 0, stepsLength = this._introItems.length; i < stepsLength; i++) {\n        var innerLi    = document.createElement('li');\n        var anchorLink = document.createElement('a');\n\n        anchorLink.onclick = function() {\n          self.goToStep(this.getAttribute('data-stepnumber'));\n        };\n\n        if (i === (targetElement.step-1)) anchorLink.className = 'active';\n\n        _setAnchorAsButton(anchorLink);\n        anchorLink.innerHTML = \"&nbsp;\";\n        anchorLink.setAttribute('data-stepnumber', this._introItems[i].step);\n\n        innerLi.appendChild(anchorLink);\n        ulContainer.appendChild(innerLi);\n      }\n\n      bulletsLayer.appendChild(ulContainer);\n\n      progressLayer.className = 'introjs-progress';\n\n      if (this._options.showProgress === false) {\n        progressLayer.style.display = 'none';\n      }\n      var progressBar = document.createElement('div');\n      progressBar.className = 'introjs-progressbar';\n      progressBar.setAttribute('style', 'width:' + _getProgress.call(this) + '%;');\n\n      progressLayer.appendChild(progressBar);\n\n      buttonsLayer.className = 'introjs-tooltipbuttons';\n      if (this._options.showButtons === false) {\n        buttonsLayer.style.display = 'none';\n      }\n\n      tooltipLayer.className = 'introjs-tooltip';\n      tooltipLayer.appendChild(tooltipTextLayer);\n      tooltipLayer.appendChild(bulletsLayer);\n      tooltipLayer.appendChild(progressLayer);\n\n      //add helper layer number\n      if (this._options.showStepNumbers == true) {\n        var helperNumberLayer = document.createElement('span');\n        helperNumberLayer.className = 'introjs-helperNumberLayer';\n        helperNumberLayer.innerHTML = targetElement.step;\n        referenceLayer.appendChild(helperNumberLayer);\n      }\n\n      tooltipLayer.appendChild(arrowLayer);\n      referenceLayer.appendChild(tooltipLayer);\n\n      //next button\n      var nextTooltipButton = document.createElement('a');\n\n      nextTooltipButton.onclick = function() {\n        if (self._introItems.length - 1 != self._currentStep) {\n          _nextStep.call(self);\n        }\n      };\n\n      _setAnchorAsButton(nextTooltipButton);\n      nextTooltipButton.innerHTML = this._options.nextLabel;\n\n      //previous button\n      var prevTooltipButton = document.createElement('a');\n\n      prevTooltipButton.onclick = function() {\n        if (self._currentStep != 0) {\n          _previousStep.call(self);\n        }\n      };\n\n      _setAnchorAsButton(prevTooltipButton);\n      prevTooltipButton.innerHTML = this._options.prevLabel;\n\n      //skip button\n      var skipTooltipButton = document.createElement('a');\n      skipTooltipButton.className = 'introjs-button introjs-skipbutton';\n      _setAnchorAsButton(skipTooltipButton);\n      skipTooltipButton.innerHTML = this._options.skipLabel;\n\n      skipTooltipButton.onclick = function() {\n        if (self._introItems.length - 1 == self._currentStep && typeof (self._introCompleteCallback) === 'function') {\n          self._introCompleteCallback.call(self);\n        }\n\n        if (self._introItems.length - 1 != self._currentStep && typeof (self._introExitCallback) === 'function') {\n          self._introExitCallback.call(self);\n        }\n\n        _exitIntro.call(self, self._targetElement);\n      };\n\n      buttonsLayer.appendChild(skipTooltipButton);\n\n      //in order to prevent displaying next/previous button always\n      if (this._introItems.length > 1) {\n        buttonsLayer.appendChild(prevTooltipButton);\n        buttonsLayer.appendChild(nextTooltipButton);\n      }\n\n      tooltipLayer.appendChild(buttonsLayer);\n\n      //set proper position\n      _placeTooltip.call(self, targetElement.element, tooltipLayer, arrowLayer, helperNumberLayer);\n    }\n\n    //disable interaction\n    if (this._options.disableInteraction === true) {\n      _disableInteraction.call(self);\n    }\n\n    prevTooltipButton.removeAttribute('tabIndex');\n    nextTooltipButton.removeAttribute('tabIndex');\n\n    if (this._currentStep == 0 && this._introItems.length > 1) {\n      nextTooltipButton.className = 'introjs-button introjs-nextbutton';\n\n      if (this._options.hidePrev == true) {\n        prevTooltipButton.className = 'introjs-button introjs-prevbutton introjs-hidden';\n        nextTooltipButton.className += ' introjs-fullbutton';\n      } else {\n        prevTooltipButton.className = 'introjs-button introjs-prevbutton introjs-disabled';\n      }\n\n      prevTooltipButton.tabIndex = '-1';\n      skipTooltipButton.innerHTML = this._options.skipLabel;\n    } else if (this._introItems.length - 1 == this._currentStep || this._introItems.length == 1) {\n      skipTooltipButton.innerHTML = this._options.doneLabel;\n      prevTooltipButton.className = 'introjs-button introjs-prevbutton';\n\n      if (this._options.hideNext == true) {\n        nextTooltipButton.className = 'introjs-button introjs-nextbutton introjs-hidden';\n        prevTooltipButton.className += ' introjs-fullbutton';\n      } else {\n        nextTooltipButton.className = 'introjs-button introjs-nextbutton introjs-disabled';\n      }\n\n      nextTooltipButton.tabIndex = '-1';\n    } else {\n      prevTooltipButton.className = 'introjs-button introjs-prevbutton';\n      nextTooltipButton.className = 'introjs-button introjs-nextbutton';\n      skipTooltipButton.innerHTML = this._options.skipLabel;\n    }\n\n    //Set focus on \"next\" button, so that hitting Enter always moves you onto the next step\n    nextTooltipButton.focus();\n\n    //add target element position style\n    targetElement.element.className += ' introjs-showElement';\n\n    var currentElementPosition = _getPropValue(targetElement.element, 'position');\n    if (currentElementPosition !== 'absolute' &&\n        currentElementPosition !== 'relative' &&\n        currentElementPosition !== 'fixed') {\n      //change to new intro item\n      targetElement.element.className += ' introjs-relativePosition';\n    }\n\n    var parentElm = targetElement.element.parentNode;\n    while (parentElm != null) {\n      if (!parentElm.tagName || parentElm.tagName.toLowerCase() === 'body') break;\n\n      //fix The Stacking Context problem.\n      //More detail: https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context\n      var zIndex = _getPropValue(parentElm, 'z-index');\n      var opacity = parseFloat(_getPropValue(parentElm, 'opacity'));\n      var transform = _getPropValue(parentElm, 'transform') || _getPropValue(parentElm, '-webkit-transform') || _getPropValue(parentElm, '-moz-transform') || _getPropValue(parentElm, '-ms-transform') || _getPropValue(parentElm, '-o-transform');\n      if (/[0-9]+/.test(zIndex) || opacity < 1 || (transform !== 'none' && transform !== undefined)) {\n        parentElm.className += ' introjs-fixParent';\n      }\n\n      parentElm = parentElm.parentNode;\n    }\n\n    if (!_elementInViewport(targetElement.element) && this._options.scrollToElement === true) {\n      var rect = targetElement.element.getBoundingClientRect(),\n        winHeight = _getWinSize().height,\n        top = rect.bottom - (rect.bottom - rect.top),\n        bottom = rect.bottom - winHeight;\n\n      //Scroll up\n      if (top < 0 || targetElement.element.clientHeight > winHeight) {\n        window.scrollBy(0, top - this._options.scrollPadding); // 30px padding from edge to look nice\n\n      //Scroll down\n      } else {\n        window.scrollBy(0, bottom + 70 + this._options.scrollPadding); // 70px + 30px padding from edge to look nice\n      }\n    }\n\n    if (typeof (this._introAfterChangeCallback) !== 'undefined') {\n      this._introAfterChangeCallback.call(this, targetElement.element);\n    }\n  }\n\n  /**\n   * Get an element CSS property on the page\n   * Thanks to JavaScript Kit: http://www.javascriptkit.com/dhtmltutors/dhtmlcascade4.shtml\n   *\n   * @api private\n   * @method _getPropValue\n   * @param {Object} element\n   * @param {String} propName\n   * @returns Element's property value\n   */\n  function _getPropValue (element, propName) {\n    var propValue = '';\n    if (element.currentStyle) { //IE\n      propValue = element.currentStyle[propName];\n    } else if (document.defaultView && document.defaultView.getComputedStyle) { //Others\n      propValue = document.defaultView.getComputedStyle(element, null).getPropertyValue(propName);\n    }\n\n    //Prevent exception in IE\n    if (propValue && propValue.toLowerCase) {\n      return propValue.toLowerCase();\n    } else {\n      return propValue;\n    }\n  };\n\n  /**\n   * Checks to see if target element (or parents) position is fixed or not\n   *\n   * @api private\n   * @method _isFixed\n   * @param {Object} element\n   * @returns Boolean\n   */\n  function _isFixed (element) {\n    var p = element.parentNode;\n\n    if (!p || p.nodeName === 'HTML') {\n      return false;\n    }\n\n    if (_getPropValue(element, 'position') == 'fixed') {\n      return true;\n    }\n\n    return _isFixed(p);\n  };\n\n  /**\n   * Provides a cross-browser way to get the screen dimensions\n   * via: http://stackoverflow.com/questions/5864467/internet-explorer-innerheight\n   *\n   * @api private\n   * @method _getWinSize\n   * @returns {Object} width and height attributes\n   */\n  function _getWinSize() {\n    if (window.innerWidth != undefined) {\n      return { width: window.innerWidth, height: window.innerHeight };\n    } else {\n      var D = document.documentElement;\n      return { width: D.clientWidth, height: D.clientHeight };\n    }\n  }\n\n  /**\n   * Check to see if the element is in the viewport or not\n   * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n   *\n   * @api private\n   * @method _elementInViewport\n   * @param {Object} el\n   */\n  function _elementInViewport(el) {\n    var rect = el.getBoundingClientRect();\n\n    return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      (rect.bottom+80) <= window.innerHeight && // add 80 to get the text right\n      rect.right <= window.innerWidth\n    );\n  }\n\n  /**\n   * Add overlay layer to the page\n   *\n   * @api private\n   * @method _addOverlayLayer\n   * @param {Object} targetElm\n   */\n  function _addOverlayLayer(targetElm) {\n    var overlayLayer = document.createElement('div'),\n        styleText = '',\n        self = this;\n\n    //set css class name\n    overlayLayer.className = 'introjs-overlay';\n\n    //check if the target element is body, we should calculate the size of overlay layer in a better way\n    if (!targetElm.tagName || targetElm.tagName.toLowerCase() === 'body') {\n      styleText += 'top: 0;bottom: 0; left: 0;right: 0;position: fixed;';\n      overlayLayer.setAttribute('style', styleText);\n    } else {\n      //set overlay layer position\n      var elementPosition = _getOffset(targetElm);\n      if (elementPosition) {\n        styleText += 'width: ' + elementPosition.width + 'px; height:' + elementPosition.height + 'px; top:' + elementPosition.top + 'px;left: ' + elementPosition.left + 'px;';\n        overlayLayer.setAttribute('style', styleText);\n      }\n    }\n\n    targetElm.appendChild(overlayLayer);\n\n    overlayLayer.onclick = function() {\n      if (self._options.exitOnOverlayClick == true) {\n\n        //check if any callback is defined\n        if (self._introExitCallback != undefined) {\n          self._introExitCallback.call(self);\n        }\n        _exitIntro.call(self, targetElm);\n      }\n    };\n\n    setTimeout(function() {\n      styleText += 'opacity: ' + self._options.overlayOpacity.toString() + ';';\n      overlayLayer.setAttribute('style', styleText);\n    }, 10);\n\n    return true;\n  };\n\n  /**\n   * Removes open hint (tooltip hint)\n   *\n   * @api private\n   * @method _removeHintTooltip\n   */\n  function _removeHintTooltip() {\n    var tooltip = this._targetElement.querySelector('.introjs-hintReference');\n\n    if (tooltip) {\n      var step = tooltip.getAttribute('data-step');\n      tooltip.parentNode.removeChild(tooltip);\n      return step;\n    }\n  };\n\n  /**\n   * Start parsing hint items\n   *\n   * @api private\n   * @param {Object} targetElm\n   * @method _startHint\n   */\n  function _populateHints(targetElm) {\n    var self = this;\n    this._introItems = [];\n\n    if (this._options.hints) {\n      for (var i = 0, l = this._options.hints.length; i < l; i++) {\n        var currentItem = _cloneObject(this._options.hints[i]);\n\n        if (typeof(currentItem.element) === 'string') {\n          //grab the element with given selector from the page\n          currentItem.element = document.querySelector(currentItem.element);\n        }\n\n        currentItem.hintPosition = currentItem.hintPosition || this._options.hintPosition;\n        currentItem.hintAnimation = currentItem.hintAnimation || this._options.hintAnimation;\n\n        if (currentItem.element != null) {\n          this._introItems.push(currentItem);\n        }\n      }\n    } else {\n      var hints = targetElm.querySelectorAll('*[data-hint]');\n\n      if (hints.length < 1) {\n        return false;\n      }\n\n      //first add intro items with data-step\n      for (var i = 0, l = hints.length; i < l; i++) {\n        var currentElement = hints[i];\n\n        // hint animation\n        var hintAnimation = currentElement.getAttribute('data-hintAnimation');\n\n        if (hintAnimation) {\n          hintAnimation = (hintAnimation == 'true');\n        } else {\n          hintAnimation = this._options.hintAnimation;\n        }\n\n        this._introItems.push({\n          element: currentElement,\n          hint: currentElement.getAttribute('data-hint'),\n          hintPosition: currentElement.getAttribute('data-hintPosition') || this._options.hintPosition,\n          hintAnimation: hintAnimation,\n          tooltipClass: currentElement.getAttribute('data-tooltipClass'),\n          position: currentElement.getAttribute('data-position') || this._options.tooltipPosition\n        });\n      }\n    }\n\n    _addHints.call(this);\n\n    if (document.addEventListener) {\n      document.addEventListener('click', _removeHintTooltip.bind(this), false);\n      //for window resize\n      window.addEventListener('resize', _reAlignHints.bind(this), true);\n    } else if (document.attachEvent) { //IE\n      //for window resize\n      document.attachEvent('onclick', _removeHintTooltip.bind(this));\n      document.attachEvent('onresize', _reAlignHints.bind(this));\n    }\n  };\n\n  /**\n   * Re-aligns all hint elements\n   *\n   * @api private\n   * @method _reAlignHints\n   */\n  function _reAlignHints() {\n    for (var i = 0, l = this._introItems.length; i < l; i++) {\n      var item = this._introItems[i];\n\n      if (typeof (item.targetElement) == 'undefined') continue;\n\n      _alignHintPosition.call(this, item.hintPosition, item.element, item.targetElement)\n    }\n  }\n\n  /**\n   * Hide a hint\n   *\n   * @api private\n   * @method _hideHint\n   */\n  function _hideHint(stepId) {\n    _removeHintTooltip.call(this);\n    var hint = this._targetElement.querySelector('.introjs-hint[data-step=\"' + stepId + '\"]');\n\n    if (hint) {\n      hint.className += ' introjs-hidehint';\n    }\n\n    // call the callback function (if any)\n    if (typeof (this._hintCloseCallback) !== 'undefined') {\n      this._hintCloseCallback.call(this, stepId);\n    }\n  };\n\n  /**\n   * Hide all hints\n   *\n   * @api private\n   * @method _hideHints\n   */\n  function _hideHints() {\n    var hints = this._targetElement.querySelectorAll('.introjs-hint');\n\n    if (hints && hints.length > 0) {\n      for (var i = 0; i < hints.length; i++) {\n        _hideHint.call(this, hints[i].getAttribute('data-step'));\n      }\n    }\n  };\n\n  /**\n   * Show all hints\n   *\n   * @api private\n   * @method _showHints\n   */\n  function _showHints() {\n    var hints = this._targetElement.querySelectorAll('.introjs-hint');\n\n    if (hints && hints.length > 0) {\n      for (var i = 0; i < hints.length; i++) {\n        _showHint.call(this, hints[i].getAttribute('data-step'));\n      }\n    } else {\n      _populateHints.call(this, this._targetElement);\n    }\n  };\n\n  /**\n   * Show a hint\n   *\n   * @api private\n   * @method _showHint\n   */\n  function _showHint(stepId) {\n    var hint = this._targetElement.querySelector('.introjs-hint[data-step=\"' + stepId + '\"]');\n\n    if (hint) {\n      hint.className = hint.className.replace(/introjs\\-hidehint/g, '');\n    }\n  };\n\n  /**\n   * Add all available hints to the page\n   *\n   * @api private\n   * @method _addHints\n   */\n  function _addHints() {\n    var self = this;\n\n    var oldHintsWrapper = document.querySelector('.introjs-hints');\n\n    if (oldHintsWrapper != null) {\n      hintsWrapper = oldHintsWrapper;\n    } else {\n      var hintsWrapper = document.createElement('div');\n      hintsWrapper.className = 'introjs-hints';\n    }\n\n    for (var i = 0, l = this._introItems.length; i < l; i++) {\n      var item = this._introItems[i];\n\n      // avoid append a hint twice\n      if (document.querySelector('.introjs-hint[data-step=\"' + i + '\"]'))\n        continue;\n\n      var hint = document.createElement('a');\n      _setAnchorAsButton(hint);\n\n      (function (hint, item, i) {\n        // when user clicks on the hint element\n        hint.onclick = function(e) {\n          var evt = e ? e : window.event;\n          if (evt.stopPropagation)    evt.stopPropagation();\n          if (evt.cancelBubble != null) evt.cancelBubble = true;\n\n          _hintClick.call(self, hint, item, i);\n        };\n      }(hint, item, i));\n\n      hint.className = 'introjs-hint';\n\n      if (!item.hintAnimation) {\n        hint.className += ' introjs-hint-no-anim';\n      }\n\n      // hint's position should be fixed if the target element's position is fixed\n      if (_isFixed(item.element)) {\n        hint.className += ' introjs-fixedhint';\n      }\n\n      var hintDot = document.createElement('div');\n      hintDot.className = 'introjs-hint-dot';\n      var hintPulse = document.createElement('div');\n      hintPulse.className = 'introjs-hint-pulse';\n\n      hint.appendChild(hintDot);\n      hint.appendChild(hintPulse);\n      hint.setAttribute('data-step', i);\n\n      // we swap the hint element with target element\n      // because _setHelperLayerPosition uses `element` property\n      item.targetElement = item.element;\n      item.element = hint;\n\n      // align the hint position\n      _alignHintPosition.call(this, item.hintPosition, hint, item.targetElement);\n\n      hintsWrapper.appendChild(hint);\n    }\n\n    // adding the hints wrapper\n    document.body.appendChild(hintsWrapper);\n\n    // call the callback function (if any)\n    if (typeof (this._hintsAddedCallback) !== 'undefined') {\n      this._hintsAddedCallback.call(this);\n    }\n  };\n\n  /**\n   * Aligns hint position\n   *\n   * @api private\n   * @method _alignHintPosition\n   * @param {String} position\n   * @param {Object} hint\n   * @param {Object} element\n   */\n  function _alignHintPosition(position, hint, element) {\n    // get/calculate offset of target element\n    var offset = _getOffset.call(this, element);\n\n    // align the hint element\n    switch (position) {\n      default:\n      case 'top-left':\n        hint.style.left = offset.left + 'px';\n        hint.style.top = offset.top + 'px';\n        break;\n      case 'top-right':\n        hint.style.left = (offset.left + offset.width) + 'px';\n        hint.style.top = offset.top + 'px';\n        break;\n      case 'bottom-left':\n        hint.style.left = offset.left + 'px';\n        hint.style.top = (offset.top + offset.height) + 'px';\n        break;\n      case 'bottom-right':\n        hint.style.left = (offset.left + offset.width) + 'px';\n        hint.style.top = (offset.top + offset.height) + 'px';\n        break;\n      case 'bottom-middle':\n        hint.style.left = (offset.left + (offset.width / 2)) + 'px';\n        hint.style.top = (offset.top + offset.height) + 'px';\n        break;\n      case 'top-middle':\n        hint.style.left = (offset.left + (offset.width / 2)) + 'px';\n        hint.style.top = offset.top + 'px';\n        break;\n    }\n  };\n\n  /**\n   * Triggers when user clicks on the hint element\n   *\n   * @api private\n   * @method _hintClick\n   * @param {Object} hintElement\n   * @param {Object} item\n   * @param {Number} stepId\n   */\n  function _hintClick(hintElement, item, stepId) {\n    // call the callback function (if any)\n    if (typeof (this._hintClickCallback) !== 'undefined') {\n      this._hintClickCallback.call(this, hintElement, item, stepId);\n    }\n\n    // remove all open tooltips\n    var removedStep = _removeHintTooltip.call(this);\n\n    // to toggle the tooltip\n    if (parseInt(removedStep, 10) == stepId) {\n      return;\n    }\n\n    var tooltipLayer = document.createElement('div');\n    var tooltipTextLayer = document.createElement('div');\n    var arrowLayer = document.createElement('div');\n    var referenceLayer = document.createElement('div');\n\n    tooltipLayer.className = 'introjs-tooltip';\n\n    tooltipLayer.onclick = function (e) {\n      //IE9 & Other Browsers\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      }\n      //IE8 and Lower\n      else {\n        e.cancelBubble = true;\n      }\n    };\n\n    tooltipTextLayer.className = 'introjs-tooltiptext';\n\n    var tooltipWrapper = document.createElement('p');\n    tooltipWrapper.innerHTML = item.hint;\n\n    var closeButton = document.createElement('a');\n    closeButton.className = 'introjs-button';\n    closeButton.innerHTML = this._options.hintButtonLabel;\n    closeButton.onclick = _hideHint.bind(this, stepId);\n\n    tooltipTextLayer.appendChild(tooltipWrapper);\n    tooltipTextLayer.appendChild(closeButton);\n\n    arrowLayer.className = 'introjs-arrow';\n    tooltipLayer.appendChild(arrowLayer);\n\n    tooltipLayer.appendChild(tooltipTextLayer);\n\n    // set current step for _placeTooltip function\n    this._currentStep = hintElement.getAttribute('data-step');\n\n    // align reference layer position\n    referenceLayer.className = 'introjs-tooltipReferenceLayer introjs-hintReference';\n    referenceLayer.setAttribute('data-step', hintElement.getAttribute('data-step'));\n    _setHelperLayerPosition.call(this, referenceLayer);\n\n    referenceLayer.appendChild(tooltipLayer);\n    document.body.appendChild(referenceLayer);\n\n    //set proper position\n    _placeTooltip.call(this, hintElement, tooltipLayer, arrowLayer, null, true);\n  };\n\n  /**\n   * Get an element position on the page\n   * Thanks to `meouw`: http://stackoverflow.com/a/442474/375966\n   *\n   * @api private\n   * @method _getOffset\n   * @param {Object} element\n   * @returns Element's position info\n   */\n  function _getOffset(element) {\n    var elementPosition = {};\n\n    //set width\n    elementPosition.width = element.offsetWidth;\n\n    //set height\n    elementPosition.height = element.offsetHeight;\n\n    //calculate element top and left\n    var _x = 0;\n    var _y = 0;\n    while (element && !isNaN(element.offsetLeft) && !isNaN(element.offsetTop)) {\n      _x += element.offsetLeft;\n      _y += element.offsetTop;\n      element = element.offsetParent;\n    }\n    //set top\n    elementPosition.top = _y;\n    //set left\n    elementPosition.left = _x;\n\n    return elementPosition;\n  };\n\n  /**\n   * Gets the current progress percentage\n   *\n   * @api private\n   * @method _getProgress\n   * @returns current progress percentage\n   */\n  function _getProgress() {\n    // Steps are 0 indexed\n    var currentStep = parseInt((this._currentStep + 1), 10);\n    return ((currentStep / this._introItems.length) * 100);\n  };\n\n  /**\n   * Overwrites obj1's values with obj2's and adds obj2's if non existent in obj1\n   * via: http://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically\n   *\n   * @param obj1\n   * @param obj2\n   * @returns obj3 a new object based on obj1 and obj2\n   */\n  function _mergeOptions(obj1,obj2) {\n    var obj3 = {};\n    for (var attrname in obj1) { obj3[attrname] = obj1[attrname]; }\n    for (var attrname in obj2) { obj3[attrname] = obj2[attrname]; }\n    return obj3;\n  };\n\n  var introJs = function (targetElm) {\n    if (typeof (targetElm) === 'object') {\n      //Ok, create a new instance\n      return new IntroJs(targetElm);\n\n    } else if (typeof (targetElm) === 'string') {\n      //select the target element with query selector\n      var targetElement = document.querySelector(targetElm);\n\n      if (targetElement) {\n        return new IntroJs(targetElement);\n      } else {\n        throw new Error('There is no element with given selector.');\n      }\n    } else {\n      return new IntroJs(document.body);\n    }\n  };\n\n  /**\n   * Current IntroJs version\n   *\n   * @property version\n   * @type String\n   */\n  introJs.version = VERSION;\n\n  //Prototype\n  introJs.fn = IntroJs.prototype = {\n    clone: function () {\n      return new IntroJs(this);\n    },\n    setOption: function(option, value) {\n      this._options[option] = value;\n      return this;\n    },\n    setOptions: function(options) {\n      this._options = _mergeOptions(this._options, options);\n      return this;\n    },\n    start: function () {\n      _introForElement.call(this, this._targetElement);\n      return this;\n    },\n    goToStep: function(step) {\n      _goToStep.call(this, step);\n      return this;\n    },\n    addStep: function(options) {\n      if (!this._options.steps) {\n        this._options.steps = [];\n      }\n\n      this._options.steps.push(options);\n\n      return this;\n    },\n    addSteps: function(steps) {\n      if (!steps.length) return;\n\n      for(var index = 0; index < steps.length; index++) {\n        this.addStep(steps[index]);\n      }\n\n      return this;\n    },\n    nextStep: function() {\n      _nextStep.call(this);\n      return this;\n    },\n    previousStep: function() {\n      _previousStep.call(this);\n      return this;\n    },\n    exit: function() {\n      _exitIntro.call(this, this._targetElement);\n      return this;\n    },\n    refresh: function() {\n      // re-align intros\n      _setHelperLayerPosition.call(this, document.querySelector('.introjs-helperLayer'));\n      _setHelperLayerPosition.call(this, document.querySelector('.introjs-tooltipReferenceLayer'));\n\n      //re-align hints\n      _reAlignHints.call(this);\n      return this;\n    },\n    onbeforechange: function(providedCallback) {\n      if (typeof (providedCallback) === 'function') {\n        this._introBeforeChangeCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onbeforechange was not a function');\n      }\n      return this;\n    },\n    onchange: function(providedCallback) {\n      if (typeof (providedCallback) === 'function') {\n        this._introChangeCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onchange was not a function.');\n      }\n      return this;\n    },\n    onafterchange: function(providedCallback) {\n      if (typeof (providedCallback) === 'function') {\n        this._introAfterChangeCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onafterchange was not a function');\n      }\n      return this;\n    },\n    oncomplete: function(providedCallback) {\n      if (typeof (providedCallback) === 'function') {\n        this._introCompleteCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for oncomplete was not a function.');\n      }\n      return this;\n    },\n    onhintsadded: function(providedCallback) {\n      if (typeof (providedCallback) === 'function') {\n        this._hintsAddedCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onhintsadded was not a function.');\n      }\n      return this;\n    },\n    onhintclick: function(providedCallback) {\n      if (typeof (providedCallback) === 'function') {\n        this._hintClickCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onhintclick was not a function.');\n      }\n      return this;\n    },\n    onhintclose: function(providedCallback) {\n      if (typeof (providedCallback) === 'function') {\n        this._hintCloseCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onhintclose was not a function.');\n      }\n      return this;\n    },\n    onexit: function(providedCallback) {\n      if (typeof (providedCallback) === 'function') {\n        this._introExitCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onexit was not a function.');\n      }\n      return this;\n    },\n    addHints: function() {\n      _populateHints.call(this, this._targetElement);\n      return this;\n    },\n    hideHint: function (stepId) {\n      _hideHint.call(this, stepId);\n      return this;\n    },\n    hideHints: function () {\n      _hideHints.call(this);\n      return this;\n    },\n    showHint: function (stepId) {\n      _showHint.call(this, stepId);\n      return this;\n    },\n    showHints: function () {\n      _showHints.call(this);\n      return this;\n    }\n  };\n\n  exports.introJs = introJs;\n  return introJs;\n}));\n\n},{}],41:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],42:[function(require,module,exports){\nvar Vue // late bind\nvar map = Object.create(null)\nvar shimmed = false\nvar isBrowserify = false\n\n/**\n * Determine compatibility and apply patch.\n *\n * @param {Function} vue\n * @param {Boolean} browserify\n */\n\nexports.install = function (vue, browserify) {\n  if (shimmed) return\n  shimmed = true\n\n  Vue = vue\n  isBrowserify = browserify\n\n  exports.compatible = !!Vue.internalDirectives\n  if (!exports.compatible) {\n    console.warn(\n      '[HMR] vue-loader hot reload is only compatible with ' +\n      'Vue.js 1.0.0+.'\n    )\n    return\n  }\n\n  // patch view directive\n  patchView(Vue.internalDirectives.component)\n  console.log('[HMR] Vue component hot reload shim applied.')\n  // shim router-view if present\n  var routerView = Vue.elementDirective('router-view')\n  if (routerView) {\n    patchView(routerView)\n    console.log('[HMR] vue-router <router-view> hot reload shim applied.')\n  }\n}\n\n/**\n * Shim the view directive (component or router-view).\n *\n * @param {Object} View\n */\n\nfunction patchView (View) {\n  var unbuild = View.unbuild\n  View.unbuild = function (defer) {\n    if (!this.hotUpdating) {\n      var prevComponent = this.childVM && this.childVM.constructor\n      removeView(prevComponent, this)\n      // defer = true means we are transitioning to a new\n      // Component. Register this new component to the list.\n      if (defer) {\n        addView(this.Component, this)\n      }\n    }\n    // call original\n    return unbuild.call(this, defer)\n  }\n}\n\n/**\n * Add a component view to a Component's hot list\n *\n * @param {Function} Component\n * @param {Directive} view - view directive instance\n */\n\nfunction addView (Component, view) {\n  var id = Component && Component.options.hotID\n  if (id) {\n    if (!map[id]) {\n      map[id] = {\n        Component: Component,\n        views: [],\n        instances: []\n      }\n    }\n    map[id].views.push(view)\n  }\n}\n\n/**\n * Remove a component view from a Component's hot list\n *\n * @param {Function} Component\n * @param {Directive} view - view directive instance\n */\n\nfunction removeView (Component, view) {\n  var id = Component && Component.options.hotID\n  if (id) {\n    map[id].views.$remove(view)\n  }\n}\n\n/**\n * Create a record for a hot module, which keeps track of its construcotr,\n * instnaces and views (component directives or router-views).\n *\n * @param {String} id\n * @param {Object} options\n */\n\nexports.createRecord = function (id, options) {\n  if (typeof options === 'function') {\n    options = options.options\n  }\n  if (typeof options.el !== 'string' && typeof options.data !== 'object') {\n    makeOptionsHot(id, options)\n    map[id] = {\n      Component: null,\n      views: [],\n      instances: []\n    }\n  }\n}\n\n/**\n * Make a Component options object hot.\n *\n * @param {String} id\n * @param {Object} options\n */\n\nfunction makeOptionsHot (id, options) {\n  options.hotID = id\n  injectHook(options, 'created', function () {\n    var record = map[id]\n    if (!record.Component) {\n      record.Component = this.constructor\n    }\n    record.instances.push(this)\n  })\n  injectHook(options, 'beforeDestroy', function () {\n    map[id].instances.$remove(this)\n  })\n}\n\n/**\n * Inject a hook to a hot reloadable component so that\n * we can keep track of it.\n *\n * @param {Object} options\n * @param {String} name\n * @param {Function} hook\n */\n\nfunction injectHook (options, name, hook) {\n  var existing = options[name]\n  options[name] = existing\n    ? Array.isArray(existing)\n      ? existing.concat(hook)\n      : [existing, hook]\n    : [hook]\n}\n\n/**\n * Update a hot component.\n *\n * @param {String} id\n * @param {Object|null} newOptions\n * @param {String|null} newTemplate\n */\n\nexports.update = function (id, newOptions, newTemplate) {\n  var record = map[id]\n  // force full-reload if an instance of the component is active but is not\n  // managed by a view\n  if (!record || (record.instances.length && !record.views.length)) {\n    console.log('[HMR] Root or manually-mounted instance modified. Full reload may be required.')\n    if (!isBrowserify) {\n      window.location.reload()\n    } else {\n      // browserify-hmr somehow sends incomplete bundle if we reload here\n      return\n    }\n  }\n  if (!isBrowserify) {\n    // browserify-hmr already logs this\n    console.log('[HMR] Updating component: ' + format(id))\n  }\n  var Component = record.Component\n  // update constructor\n  if (newOptions) {\n    // in case the user exports a constructor\n    Component = record.Component = typeof newOptions === 'function'\n      ? newOptions\n      : Vue.extend(newOptions)\n    makeOptionsHot(id, Component.options)\n  }\n  if (newTemplate) {\n    Component.options.template = newTemplate\n  }\n  // handle recursive lookup\n  if (Component.options.name) {\n    Component.options.components[Component.options.name] = Component\n  }\n  // reset constructor cached linker\n  Component.linker = null\n  // reload all views\n  record.views.forEach(function (view) {\n    updateView(view, Component)\n  })\n  // flush devtools\n  if (window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n    window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('flush')\n  }\n}\n\n/**\n * Update a component view instance\n *\n * @param {Directive} view\n * @param {Function} Component\n */\n\nfunction updateView (view, Component) {\n  if (!view._bound) {\n    return\n  }\n  view.Component = Component\n  view.hotUpdating = true\n  // disable transitions\n  view.vm._isCompiled = false\n  // save state\n  var state = extractState(view.childVM)\n  // remount, make sure to disable keep-alive\n  var keepAlive = view.keepAlive\n  view.keepAlive = false\n  view.mountComponent()\n  view.keepAlive = keepAlive\n  // restore state\n  restoreState(view.childVM, state, true)\n  // re-eanble transitions\n  view.vm._isCompiled = true\n  view.hotUpdating = false\n}\n\n/**\n * Extract state from a Vue instance.\n *\n * @param {Vue} vm\n * @return {Object}\n */\n\nfunction extractState (vm) {\n  return {\n    cid: vm.constructor.cid,\n    data: vm.$data,\n    children: vm.$children.map(extractState)\n  }\n}\n\n/**\n * Restore state to a reloaded Vue instance.\n *\n * @param {Vue} vm\n * @param {Object} state\n */\n\nfunction restoreState (vm, state, isRoot) {\n  var oldAsyncConfig\n  if (isRoot) {\n    // set Vue into sync mode during state rehydration\n    oldAsyncConfig = Vue.config.async\n    Vue.config.async = false\n  }\n  // actual restore\n  if (isRoot || !vm._props) {\n    vm.$data = state.data\n  } else {\n    Object.keys(state.data).forEach(function (key) {\n      if (!vm._props[key]) {\n        // for non-root, only restore non-props fields\n        vm.$data[key] = state.data[key]\n      }\n    })\n  }\n  // verify child consistency\n  var hasSameChildren = vm.$children.every(function (c, i) {\n    return state.children[i] && state.children[i].cid === c.constructor.cid\n  })\n  if (hasSameChildren) {\n    // rehydrate children\n    vm.$children.forEach(function (c, i) {\n      restoreState(c, state.children[i])\n    })\n  }\n  if (isRoot) {\n    Vue.config.async = oldAsyncConfig\n  }\n}\n\nfunction format (id) {\n  var match = id.match(/[^\\/]+\\.vue$/)\n  return match ? match[0] : id\n}\n\n},{}],43:[function(require,module,exports){\n(function (process,global){\n/*!\n * Vue.js v2.1.8\n * (c) 2014-2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val, 10);\n  return (n || n === 0) ? n : val\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove$1 (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delmited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind$1 (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    return JSON.stringify(a) === JSON.stringify(b)\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  } else {\n    var segments = path.split('.');\n    return function (obj) {\n      for (var i = 0; i < segments.length; i++) {\n        if (!obj) { return }\n        obj = obj[segments[i]];\n      }\n      return obj\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar warn = noop;\nvar formatComponentName;\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm) {\n    if (vm.$root === vm) {\n      return 'root instance'\n    }\n    var name = vm._isVue\n      ? vm.$options.name || vm.$options._componentTag\n      : vm.name;\n    return (\n      (name ? (\"component <\" + name + \">\") : \"anonymous component\") +\n      (vm._isVue && vm.$options.__file ? (\" at \" + (vm.$options.__file)) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === 'anonymous component') {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove$1(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stablize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set$1 (obj, key, val) {\n  if (Array.isArray(obj)) {\n    obj.length = Math.max(obj.length, key);\n    obj.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return\n  }\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return\n  }\n  if (!ob) {\n    obj[key] = val;\n    return\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (obj, key) {\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(obj, key)) {\n    return\n  }\n  delete obj[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set$1(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$2) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm[key] !== undefined) {\n    return vm[key]\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && prop.type !== Function\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive$$1,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\tmakeMap: makeMap,\n\tisBuiltInTag: isBuiltInTag,\n\tremove: remove$1,\n\thasOwn: hasOwn,\n\tisPrimitive: isPrimitive,\n\tcached: cached,\n\tcamelize: camelize,\n\tcapitalize: capitalize,\n\thyphenate: hyphenate,\n\tbind: bind$1,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\ttoObject: toObject,\n\tnoop: noop,\n\tno: no,\n\tidentity: identity,\n\tgenStaticKeys: genStaticKeys,\n\tlooseEqual: looseEqual,\n\tlooseIndexOf: looseIndexOf,\n\tisReserved: isReserved,\n\tdef: def,\n\tparsePath: parsePath,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tUA: UA,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisEdge: isEdge,\n\tisAndroid: isAndroid,\n\tisIOS: isIOS,\n\tisServerRendering: isServerRendering,\n\tdevtools: devtools,\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tget warn () { return warn; },\n\tget formatComponentName () { return formatComponentName; },\n\tvalidateProp: validateProp\n});\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\n\nvar queue = [];\nvar has$1 = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has$1 = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    var watcher = queue[index];\n    var id = watcher.id;\n    has$1[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has$1[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has$1[id] == null) {\n    has$1[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value = this.getter.call(this.vm, this.vm);\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          /* istanbul ignore else */\n          if (config.errorHandler) {\n            config.errorHandler.call(null, e, this.vm);\n          } else {\n            process.env.NODE_ENV !== 'production' && warn(\n              (\"Error in watcher \\\"\" + (this.expression) + \"\\\"\"),\n              this.vm\n            );\n            throw e\n          }\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove$1(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm, props) {\n  var propsData = vm.$options.propsData || {};\n  var keys = vm.$options._propKeys = Object.keys(props);\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( i ) {\n    var key = keys[i];\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedProp[key]) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(vm, key, validateProp(key, props, propsData, vm), function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(vm, key, validateProp(key, props, propsData, vm));\n    }\n  };\n\n  for (var i = 0; i < keys.length; i++) loop( i );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else {\n      proxy(vm, keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nvar computedSharedDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction initComputed (vm, computed) {\n  for (var key in computed) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && key in vm) {\n      warn(\n        \"existing instance property \\\"\" + key + \"\\\" will be \" +\n        \"overwritten by a computed property with the same name.\",\n        vm\n      );\n    }\n    var userDef = computed[key];\n    if (typeof userDef === 'function') {\n      computedSharedDefinition.get = makeComputedGetter(userDef, vm);\n      computedSharedDefinition.set = noop;\n    } else {\n      computedSharedDefinition.get = userDef.get\n        ? userDef.cache !== false\n          ? makeComputedGetter(userDef.get, vm)\n          : bind$1(userDef.get, vm)\n        : noop;\n      computedSharedDefinition.set = userDef.set\n        ? bind$1(userDef.set, vm)\n        : noop;\n    }\n    Object.defineProperty(vm, key, computedSharedDefinition);\n  }\n}\n\nfunction makeComputedGetter (getter, owner) {\n  var watcher = new Watcher(owner, getter, noop, {\n    lazy: true\n  });\n  return function computedGetter () {\n    if (watcher.dirty) {\n      watcher.evaluate();\n    }\n    if (Dep.target) {\n      watcher.depend();\n    }\n    return watcher.value\n  }\n}\n\nfunction initMethods (vm, methods) {\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind$1(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production' && methods[key] == null) {\n      warn(\n        \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n        \"Did you reference the function correctly?\",\n        vm\n      );\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () {\n    return this._data\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n\n  Vue.prototype.$set = set$1;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\nfunction proxy (vm, key) {\n  if (!isReserved(key)) {\n    Object.defineProperty(vm, key, {\n      configurable: true,\n      enumerable: true,\n      get: function proxyGetter () {\n        return vm._data[key]\n      },\n      set: function proxySetter (val) {\n        vm._data[key] = val;\n      }\n    });\n  }\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.child = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var res = new Array(vnodes.length);\n  for (var i = 0; i < vnodes.length; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook, key) {\n  key = key + hookKey;\n  var injectedHash = def.__injected || (def.__injected = {});\n  if (!injectedHash[key]) {\n    injectedHash[key] = true;\n    var oldHook = def[hookKey];\n    if (oldHook) {\n      def[hookKey] = function () {\n        oldHook.apply(this, arguments);\n        hook.apply(this, arguments);\n      };\n    } else {\n      def[hookKey] = hook;\n    }\n  }\n}\n\n/*  */\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, fn, event, capture, once;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    if (!cur) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + name + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      once = name.charAt(0) === '~'; // Prefixed last, checked first\n      event = once ? name.slice(1) : name;\n      capture = event.charAt(0) === '!';\n      event = capture ? event.slice(1) : event;\n      if (Array.isArray(cur)) {\n        add(event, (cur.invoker = arrInvoker(cur)), once, capture);\n      } else {\n        if (!cur.invoker) {\n          fn = cur;\n          cur = on[name] = {};\n          cur.fn = fn;\n          cur.invoker = fnInvoker(cur);\n        }\n        add(event, cur.invoker, once, capture);\n      }\n    } else if (cur !== old) {\n      if (Array.isArray(old)) {\n        old.length = cur.length;\n        for (var i = 0; i < old.length; i++) { old[i] = cur[i]; }\n        on[name] = old;\n      } else {\n        old.fn = cur;\n        on[name] = old;\n      }\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      once = name.charAt(0) === '~'; // Prefixed last, checked first\n      event = once ? name.slice(1) : name;\n      capture = event.charAt(0) === '!';\n      event = capture ? event.slice(1) : event;\n      remove$$1(event, oldOn[name].invoker, capture);\n    }\n  }\n}\n\nfunction arrInvoker (arr) {\n  return function (ev) {\n    var arguments$1 = arguments;\n\n    var single = arguments.length === 1;\n    for (var i = 0; i < arr.length; i++) {\n      single ? arr[i](ev) : arr[i].apply(null, arguments$1);\n    }\n  }\n}\n\nfunction fnInvoker (o) {\n  return function (ev) {\n    var single = arguments.length === 1;\n    single ? o.fn(ev) : o.fn.apply(null, arguments);\n  }\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// nomralization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constrcuts that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add$1 (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$2 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add$1, remove$2, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;(vm._events[event] || (vm._events[event] = [])).push(fn);\n    // optimize hook:event cost by using a boolean flag marked at registration\n    // instead of a hash lookup\n    if (hookRE.test(event)) {\n      vm._hasHookEvent = true;\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._mount = function (\n    el,\n    hydrating\n  ) {\n    var vm = this;\n    vm.$el = el;\n    if (!vm.$options.render) {\n      vm.$options.render = createEmptyVNode;\n      if (process.env.NODE_ENV !== 'production') {\n        /* istanbul ignore if */\n        if (vm.$options.template && vm.$options.template.charAt(0) !== '#') {\n          warn(\n            'You are using the runtime-only build of Vue where the template ' +\n            'option is not available. Either pre-compile the templates into ' +\n            'render functions, or use the compiler-included build.',\n            vm\n          );\n        } else {\n          warn(\n            'Failed to mount component: template or render function not defined.',\n            vm\n          );\n        }\n      }\n    }\n    callHook(vm, 'beforeMount');\n    vm._watcher = new Watcher(vm, function () {\n      vm._update(vm._render(), hydrating);\n    }, noop);\n    hydrating = false;\n    // manually mounted instance, call mounted on self\n    // mounted is called for render-created child components in its inserted hook\n    if (vm.$vnode == null) {\n      vm._isMounted = true;\n      callHook(vm, 'mounted');\n    }\n    return vm\n  };\n\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    if (vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  };\n\n  Vue.prototype._updateFromParent = function (\n    propsData,\n    listeners,\n    parentVnode,\n    renderChildren\n  ) {\n    var vm = this;\n    var hasChildren = !!(vm.$options._renderChildren || renderChildren);\n    vm.$options._parentVnode = parentVnode;\n    vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n    if (vm._vnode) { // update child tree's parent\n      vm._vnode.parent = parentVnode;\n    }\n    vm.$options._renderChildren = renderChildren;\n    // update props\n    if (propsData && vm.$options.props) {\n      observerState.shouldConvert = false;\n      if (process.env.NODE_ENV !== 'production') {\n        observerState.isSettingProps = true;\n      }\n      var propKeys = vm.$options._propKeys || [];\n      for (var i = 0; i < propKeys.length; i++) {\n        var key = propKeys[i];\n        vm[key] = validateProp(key, vm.$options.props, propsData, vm);\n      }\n      observerState.shouldConvert = true;\n      if (process.env.NODE_ENV !== 'production') {\n        observerState.isSettingProps = false;\n      }\n      vm.$options.propsData = propsData;\n    }\n    // update listeners\n    if (listeners) {\n      var oldListeners = vm.$options._parentListeners;\n      vm.$options._parentListeners = listeners;\n      updateComponentListeners(vm, listeners, oldListeners);\n    }\n    // resolve slots + force update if has children\n    if (hasChildren) {\n      vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n      vm.$forceUpdate();\n    }\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove$1(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      handlers[i].call(vm);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\nvar hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy$1 };\nvar hooksToMerge = Object.keys(hooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction init (\n  vnode,\n  hydrating,\n  parentElm,\n  refElm\n) {\n  if (!vnode.child || vnode.child._isDestroyed) {\n    var child = vnode.child = createComponentInstanceForVnode(\n      vnode,\n      activeInstance,\n      parentElm,\n      refElm\n    );\n    child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n  } else if (vnode.data.keepAlive) {\n    // kept-alive components, treat as a patch\n    var mountedNode = vnode; // work around flow\n    prepatch(mountedNode, mountedNode);\n  }\n}\n\nfunction prepatch (\n  oldVnode,\n  vnode\n) {\n  var options = vnode.componentOptions;\n  var child = vnode.child = oldVnode.child;\n  child._updateFromParent(\n    options.propsData, // updated props\n    options.listeners, // updated listeners\n    vnode, // new parent vnode\n    options.children // new children\n  );\n}\n\nfunction insert (vnode) {\n  if (!vnode.child._isMounted) {\n    vnode.child._isMounted = true;\n    callHook(vnode.child, 'mounted');\n  }\n  if (vnode.data.keepAlive) {\n    vnode.child._inactive = false;\n    callHook(vnode.child, 'activated');\n  }\n}\n\nfunction destroy$1 (vnode) {\n  if (!vnode.child._isDestroyed) {\n    if (!vnode.data.keepAlive) {\n      vnode.child.$destroy();\n    } else {\n      vnode.child._inactive = true;\n      callHook(vnode.child, 'deactivated');\n    }\n  }\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = hooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { normalizationType = ALWAYS_NORMALIZE; }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (data && data.__ob__) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = {};\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n  if (vm.$options.el) {\n    vm.$mount(vm.$options.el);\n  }\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    if (_parentVnode && _parentVnode.data.scopedSlots) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots;\n    }\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      /* istanbul ignore else */\n      if (config.errorHandler) {\n        config.errorHandler.call(null, e, vm);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn((\"Error when rendering \" + (formatComponentName(vm)) + \":\"));\n        }\n        throw e\n      }\n      // return previous vnode to prevent render error causing blank component\n      vnode = vm._vnode;\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // toString for mustaches\n  Vue.prototype._s = _toString;\n  // convert text to vnode\n  Vue.prototype._v = createTextVNode;\n  // number conversion\n  Vue.prototype._n = toNumber;\n  // empty vnode\n  Vue.prototype._e = createEmptyVNode;\n  // loose equal\n  Vue.prototype._q = looseEqual;\n  // loose indexOf\n  Vue.prototype._i = looseIndexOf;\n\n  // render static tree by index\n  Vue.prototype._m = function renderStatic (\n    index,\n    isInFor\n  ) {\n    var tree = this._staticTrees[index];\n    // if has already-rendered static tree and not inside v-for,\n    // we can reuse the same tree by doing a shallow clone.\n    if (tree && !isInFor) {\n      return Array.isArray(tree)\n        ? cloneVNodes(tree)\n        : cloneVNode(tree)\n    }\n    // otherwise, render a fresh tree.\n    tree = this._staticTrees[index] = this.$options.staticRenderFns[index].call(this._renderProxy);\n    markStatic(tree, (\"__static__\" + index), false);\n    return tree\n  };\n\n  // mark node as static (v-once)\n  Vue.prototype._o = function markOnce (\n    tree,\n    index,\n    key\n  ) {\n    markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n    return tree\n  };\n\n  function markStatic (tree, key, isOnce) {\n    if (Array.isArray(tree)) {\n      for (var i = 0; i < tree.length; i++) {\n        if (tree[i] && typeof tree[i] !== 'string') {\n          markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n        }\n      }\n    } else {\n      markStaticNode(tree, key, isOnce);\n    }\n  }\n\n  function markStaticNode (node, key, isOnce) {\n    node.isStatic = true;\n    node.key = key;\n    node.isOnce = isOnce;\n  }\n\n  // filter resolution helper\n  Vue.prototype._f = function resolveFilter (id) {\n    return resolveAsset(this.$options, 'filters', id, true) || identity\n  };\n\n  // render v-for\n  Vue.prototype._l = function renderList (\n    val,\n    render\n  ) {\n    var ret, i, l, keys, key;\n    if (Array.isArray(val) || typeof val === 'string') {\n      ret = new Array(val.length);\n      for (i = 0, l = val.length; i < l; i++) {\n        ret[i] = render(val[i], i);\n      }\n    } else if (typeof val === 'number') {\n      ret = new Array(val);\n      for (i = 0; i < val; i++) {\n        ret[i] = render(i + 1, i);\n      }\n    } else if (isObject(val)) {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n    return ret\n  };\n\n  // renderSlot\n  Vue.prototype._t = function (\n    name,\n    fallback,\n    props,\n    bindObject\n  ) {\n    var scopedSlotFn = this.$scopedSlots[name];\n    if (scopedSlotFn) { // scoped slot\n      props = props || {};\n      if (bindObject) {\n        extend(props, bindObject);\n      }\n      return scopedSlotFn(props) || fallback\n    } else {\n      var slotNodes = this.$slots[name];\n      // warn duplicate slot usage\n      if (slotNodes && process.env.NODE_ENV !== 'production') {\n        slotNodes._rendered && warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n        slotNodes._rendered = true;\n      }\n      return slotNodes || fallback\n    }\n  };\n\n  // apply v-bind object\n  Vue.prototype._b = function bindProps (\n    data,\n    tag,\n    value,\n    asProp\n  ) {\n    if (value) {\n      if (!isObject(value)) {\n        process.env.NODE_ENV !== 'production' && warn(\n          'v-bind without argument expects an Object or Array value',\n          this\n        );\n      } else {\n        if (Array.isArray(value)) {\n          value = toObject(value);\n        }\n        for (var key in value) {\n          if (key === 'class' || key === 'style') {\n            data[key] = value[key];\n          } else {\n            var hash = asProp || config.mustUseProp(tag, key)\n              ? data.domProps || (data.domProps = {})\n              : data.attrs || (data.attrs = {});\n            hash[key] = value[key];\n          }\n        }\n      }\n    }\n    return data\n  };\n\n  // check v-on keyCodes\n  Vue.prototype._k = function checkKeyCodes (\n    eventKeyCode,\n    key,\n    builtInAlias\n  ) {\n    var keyCodes = config.keyCodes[key] || builtInAlias;\n    if (Array.isArray(keyCodes)) {\n      return keyCodes.indexOf(eventKeyCode) === -1\n    } else {\n      return keyCodes !== eventKeyCode\n    }\n  };\n}\n\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore single whitespace\n  if (defaultSlot.length && !(\n    defaultSlot.length === 1 &&\n    (defaultSlot[0].text === ' ' || defaultSlot[0].isComment)\n  )) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    callHook(vm, 'beforeCreate');\n    initState(vm);\n    callHook(vm, 'created');\n    initRender(vm);\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = Ctor.super.options;\n    var cachedSuperOptions = Ctor.superOptions;\n    var extendOptions = Ctor.extendOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed\n      Ctor.superOptions = superOptions;\n      extendOptions.render = options.render;\n      extendOptions.staticRenderFns = options.staticRenderFns;\n      extendOptions._scopeId = options._scopeId;\n      options = Ctor.options = mergeOptions(superOptions, extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction Vue$2 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$2)) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$2);\nstateMixin(Vue$2);\neventsMixin(Vue$2);\nlifecycleMixin(Vue$2);\nrenderMixin(Vue$2);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else {\n    return pattern.test(name)\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    if (vnode && vnode.componentOptions) {\n      var opts = vnode.componentOptions;\n      // check pattern\n      var name = opts.Ctor.options.name || opts.tag;\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? opts.Ctor.cid + (opts.tag ? (\"::\" + (opts.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.child = this.cache[key].child;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  },\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this.cache) {\n      var vnode = this$1.cache[key];\n      callHook(vnode.child, 'deactivated');\n      vnode.child.$destroy();\n    }\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n  Vue.util = util;\n  Vue.set = set$1;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$2);\n\nObject.defineProperty(Vue$2.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$2.version = '2.1.8';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.child) {\n    childNode = childNode.child._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,' +\n  'font-face,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + selector\n      );\n      return document.createElement('div')\n    }\n  }\n  return el\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  if (vnode.data && vnode.data.attrs && 'multiple' in vnode.data.attrs) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.child || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove$1(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks$1 = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks$1.length; ++i) {\n    cbs[hooks$1[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks$1[i]] !== undefined) { cbs[hooks$1[i]].push(modules[j][hooks$1[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (parent) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.child) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.child)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isReactivated) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.child) {\n      innerNode = innerNode.child._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (parent) {\n      if (ref) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.child) {\n      vnode = vnode.child._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.child.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.context) && isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.child) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        (vnode.isCloned || vnode.isOnce)) {\n      vnode.elm = oldVnode.elm;\n      vnode.child = oldVnode.child;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.child)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var elm, parent;\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        elm = oldVnode.elm;\n        parent = nodeOps.parentNode(elm);\n        createElm(vnode, insertedVnodeQueue, parent, nodeOps.nextSibling(elm));\n\n        if (vnode.parent) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parent !== null) {\n          removeVnodes(parent, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert, 'dir-insert');\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    }, 'dir-postpatch');\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar target$1;\n\nfunction add$2 (event, handler, once, capture) {\n  if (once) {\n    var oldHandler = handler;\n    handler = function (ev) {\n      remove$3(event, handler, capture);\n      arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n    };\n  }\n  target$1.addEventListener(event, handler, capture);\n}\n\nfunction remove$3 (event, handler, capture) {\n  target$1.removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  updateListeners(on, oldOn, add$2, remove$3, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n    // #4521: if a click event triggers update before the change event is\n    // dispatched on a checkbox/radio input, the input's checked state will\n    // be reset and fail to trigger another update.\n    /* istanbul ignore next */\n    if (key === 'checked' && !isDirty(elm, cur)) {\n      continue\n    }\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  if (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(vnode, checkVal)\n  )) {\n    return true\n  }\n  return false\n}\n\nfunction isDirty (elm, checkVal) {\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (vnode, newVal) {\n  var value = vnode.elm.value;\n  var modifiers = vnode.elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || vnode.elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.child) {\n      childNode = childNode.child._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !cls.trim()) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !cls.trim()) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\nvar raf = (inBrowser && window.requestAnimationFrame) || setTimeout;\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove$1(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitioneDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitioneDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear ? appearClass : enterClass;\n  var activeClass = isAppear ? appearActiveClass : enterActiveClass;\n  var toClass = isAppear ? appearToClass : enterToClass;\n  var beforeEnterHook = isAppear ? (beforeAppear || beforeEnter) : beforeEnter;\n  var enterHook = isAppear ? (typeof appear === 'function' ? appear : enter) : enter;\n  var afterEnterHook = isAppear ? (afterAppear || afterEnter) : afterEnter;\n  var enterCancelledHook = isAppear ? (appearCancelled || enterCancelled) : enterCancelled;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    enterHook &&\n    // enterHook may be a bound method which exposes\n    // the length of original fn as _length\n    (enterHook._length || enterHook.length) > 1;\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.context === vnode.context &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    }, 'transition-insert');\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        whenTransitionEnds(el, type, cb);\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    leave &&\n    // leave hook may be a bound method which exposes\n    // the length of original fn as _length\n    (leave._length || leave.length) > 1;\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          whenTransitionEnds(el, type, cb);\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    leaveClass: (name + \"-leave\"),\n    appearClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    leaveToClass: (name + \"-leave-to\"),\n    appearToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveActiveClass: (name + \"-leave-active\"),\n    appearActiveClass: (name + \"-enter-active\")\n  }\n});\n\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch$1 = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar modelableTagRE = /^input|select|textarea|vue-component-[0-9]+(-[0-9a-zA-Z_-]*)?$/;\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model = {\n  inserted: function inserted (el, binding, vnode) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!modelableTagRE.test(vnode.tag)) {\n        warn(\n          \"v-model is not supported on element type: <\" + (vnode.tag) + \">. \" +\n          'If you are working with contenteditable, it\\'s recommended to ' +\n          'wrap a library dedicated for that purpose inside a custom component.',\n          vnode.context\n        );\n      }\n    }\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.child && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.child._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1].fn;\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n        mode && mode !== 'in-out' && mode !== 'out-in') {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    var key = child.key = child.key == null || child.isStatic\n      ? (\"__v\" + (child.tag + this._uid) + \"__\")\n      : child.key;\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        }, key);\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave, key);\n        mergeVNodeHook(data, 'enterCancelled', performLeave, key);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) {\n          delayedLeave = leave;\n        }, key);\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final disired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts\n            ? (opts.Ctor.options.name || opts.tag)\n            : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var f = document.body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      addTransitionClass(el, moveClass);\n      var info = getTransitionInfo(el);\n      removeTransitionClass(el, moveClass);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$2.config.isUnknownElement = isUnknownElement;\nVue$2.config.isReservedTag = isReservedTag;\nVue$2.config.getTagNamespace = getTagNamespace;\nVue$2.config.mustUseProp = mustUseProp;\n\n// install platform runtime directives & components\nextend(Vue$2.options.directives, platformDirectives);\nextend(Vue$2.options.components, platformComponents);\n\n// install platform patch function\nVue$2.prototype.__patch__ = inBrowser ? patch$1 : noop;\n\n// wrap mount\nVue$2.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return this._mount(el, hydrating)\n};\n\nif (process.env.NODE_ENV !== 'production' &&\n    inBrowser && typeof console !== 'undefined') {\n  console[console.info ? 'info' : 'log'](\n    \"You are running Vue in development mode.\\n\" +\n    \"Make sure to turn on production mode when deploying for production.\\n\" +\n    \"See more tips at https://vuejs.org/guide/deployment.html\"\n  );\n}\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$2);\n    } else if (\n      process.env.NODE_ENV !== 'production' &&\n      inBrowser && !isEdge && /Chrome\\/\\d+/.test(window.navigator.userAgent)\n    ) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n}, 0);\n\nmodule.exports = Vue$2;\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"_process\":41}],44:[function(require,module,exports){\nvar inserted = exports.cache = {}\n\nexports.insert = function (css) {\n  if (inserted[css]) return\n  inserted[css] = true\n\n  var elem = document.createElement('style')\n  elem.setAttribute('type', 'text/css')\n\n  if ('textContent' in elem) {\n    elem.textContent = css\n  } else {\n    elem.styleSheet.cssText = css\n  }\n\n  document.getElementsByTagName('head')[0].appendChild(elem)\n  return elem\n}\n\n},{}],45:[function(require,module,exports){\nvar __vueify_style__ = require(\"vueify-insert-css\").insert(\"\\n    .fileinput-button {\\n        position: relative;\\n        overflow: hidden;\\n        display: inline-block;\\n    }\\n    .fileinput-button input {\\n        position: absolute;\\n        top: 0;\\n        right: 0;\\n        margin: 0;\\n        opacity: 0;\\n        -ms-filter: 'alpha(opacity=0)';\\n        font-size: 200px !important;\\n        direction: ltr;\\n        cursor: pointer;\\n    }\\n\\n    /* Fixes for IE < 8 */\\n    @media screen\\\\9 {\\n        .fileinput-button input {\\n            filter: alpha(opacity=0);\\n            font-size: 100%;\\n            height: 100%;\\n        }\\n    }\\n\\n\\n    .fileupload-buttonbar .btn,\\n    .fileupload-buttonbar .toggle {\\n        margin-bottom: 5px;\\n    }\\n    .progress-animated .progress-bar,\\n    .progress-animated .bar {\\n        background: url(\\\"../img/progressbar.gif\\\") !important;\\n        -webkit-filter: none;\\n                filter: none;\\n    }\\n    .fileupload-process {\\n        float: right;\\n        display: none;\\n    }\\n    .fileupload-processing .fileupload-process,\\n    .files .processing .preview {\\n        display: block;\\n        width: 32px;\\n        height: 32px;\\n        background: url(\\\"../img/loading.gif\\\") center no-repeat;\\n        background-size: contain;\\n    }\\n    .files audio,\\n    .files video {\\n        max-width: 300px;\\n    }\\n\\n    @media (max-width: 767px) {\\n        .fileupload-buttonbar .toggle,\\n        .files .toggle,\\n        .files .btn span {\\n            display: none;\\n        }\\n        .files .name {\\n            width: 80px;\\n            word-wrap: break-word;\\n        }\\n        .files audio,\\n        .files video {\\n            max-width: 80px;\\n        }\\n        .files img,\\n        .files canvas {\\n            max-width: 100%;\\n        }\\n    }\\n\")\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _s3uploader = require('../../app/s3uploader');\n\nvar _s3uploader2 = _interopRequireDefault(_s3uploader);\n\nvar _currentUser = require('./current-user');\n\nvar _currentUser2 = _interopRequireDefault(_currentUser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire('../../vendor/fileupload/js/vendor/jquery.ui.widget');\nrequire('../../vendor/fileupload/js/vendor/load-image');\nrequire('../../vendor/fileupload/js/vendor/canvas-to-blob.min');\nrequire('../../vendor/fileupload/js/jquery.iframe-transport');\nrequire('../../vendor/fileupload/js/jquery.fileupload');\nrequire('../../vendor/fileupload/js/jquery.fileupload-process');\nrequire('../../vendor/fileupload/js/jquery.fileupload-image');\nrequire('../../vendor/fileupload/js/jquery.fileupload-ui');\nexports.default = {\n    props: {\n        user_hash: {\n            type: String,\n            default: (0, _currentUser2.default)() ? (0, _currentUser2.default)().public_hash : false\n        },\n        s3_bucket: {\n            required: true\n        },\n        s3_acl: {\n            required: true\n        },\n        s3_key_url: {\n            required: true\n        },\n        btnClassSize: {\n            default: ' btn-sm '\n        },\n        button_title: {\n            default: 'Add images'\n        },\n        acceptRegEx: {\n            default: 'image/*'\n        },\n        multiple: {\n            default: true\n        },\n        outer_class: {\n            default: null\n        },\n        // Set this to a unique string and when the image is uploaded,\n        // the broadcast key will have this appended to it.\n        // Example, if ukey == 983j : $Bus.$emit('image:uploaded:983j')\n        // and you can now listen for image:uploaded:983j\n        ukey: {\n            type: String,\n            default: null\n        }\n    },\n    data: function data() {\n        return {\n            image: { size: '', key: '', location: '', bucket: '' },\n            imageEl: null\n        };\n    },\n    computed: {\n        has_multiple: function has_multiple() {\n            return this.multiple === true || this.multiple === 'true';\n        }\n    },\n    created: function created() {\n        console.log('File component ready.');\n        this.imageEl = this.buildImageEl();\n    },\n    watch: {\n        imageEl: function imageEl(v) {\n            this.attachPluginToEl($('#' + v));\n        }\n    },\n    methods: {\n        buildImageEl: function buildImageEl() {\n            return Math.random().toString(36).replace(/[^a-z]+/g, '').slice(2);\n        },\n        attachPluginToEl: function attachPluginToEl(el) {\n            var that = this;\n            $(function () {\n                el.s3uploader({\n                    debug: true,\n                    save_file_model: false,\n                    multiple: that.has_multiple,\n                    s3_bucket: that.s3_bucket,\n                    s3_acl: that.s3_acl,\n                    s3_key_url: that.s3_key_url,\n                    s3_key_payload: {\n                        user: that.user_hash\n                    },\n                    templateEl: el.find('.upload-template'),\n                    fileupload_options: {},\n                    on_s3_upload: function on_s3_upload(data, textStatus, jqXHR) {\n                        //                            if ($.inArray(jqXHR.status, [201, 200]) == -1) {\n                        //                                alert('An error occurred with a file, please try that file again.');\n                        //                                return false;\n                        //                            }\n                        var xml = $(data);\n                        var responseData = {\n                            id: data.Key,\n                            bucket: data.Bucket,\n                            bucket_name: data.Bucket,\n                            key: data.Key,\n                            location: data.Location\n                        };\n\n                        responseData.json = (0, _stringify2.default)(responseData);\n\n                        var key = 'image:uploaded';\n                        if (that.ukey) {\n                            key = key + ':' + that.ukey;\n                        }\n\n                        $Bus.$emit(key, el, responseData);\n                    },\n                    on_file_add: function on_file_add(element, data) {\n                        console.log(data.files + ' from .vue');\n                        //                            alert(JSON.stringify(data.files, null, 4));\n                        //                            if (data.files[0].type.indexOf(\"image\") == -1) {\n                        //                                alert('File must be an image.');\n                        //                                return false;\n                        //                            }\n                        $Bus.$emit('image.added', data.files[0]);\n                        return true;\n                    }\n                });\n            });\n        }\n    }\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n    <div>\\n        <div :id=\\\"imageEl\\\" :class=\\\"outer_class\\\">\\n            <div style=\\\"margin-right: 3px\\\" class=\\\"upload-template\\\">\\n                <span type=\\\"button\\\" :class=\\\"'btn white '+btnClassSize+' fileinput-button'\\\" style=\\\"display: inline-block;\\\">\\n                    {{ button_title }}\\n                    <template v-if=\\\"has_multiple\\\">\\n                    <input type=\\\"file\\\" name=\\\"file\\\" class=\\\"js-s3_fileupload\\\" :accept=\\\"acceptRegEx\\\" multiple=\\\"multiple\\\">\\n                    </template>\\n                    <template v-else=\\\"\\\">\\n                        <input type=\\\"file\\\" name=\\\"file\\\" class=\\\"js-s3_fileupload\\\" :accept=\\\"acceptRegEx\\\">\\n                    </template>\\n                </span>\\n                <button type=\\\"button\\\" :class=\\\"'btn danger '+btnClassSize+' js-cancel_button'\\\" style=\\\"display: none;\\\">\\n                    Cancel\\n                    <div class=\\\"js-fileupload-progress fileupload-progress m-b-0 p-b-0\\\" style=\\\"display: none;  margin-left: -9px; margin-right: -9px;\\\">\\n                        <div style=\\\"height: 8px;\\\" class=\\\"progress progress-striped active m-b-0 p-b-0\\\" role=\\\"progressbar\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" aria-valuenow=\\\"5\\\">\\n                            <div class=\\\"progress-bar progress-bar-success\\\" style=\\\"width: 5%;\\\"></div>\\n                        </div>\\n                    </div>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/jake/www/kabooodle/framework/resources/assets/app/components/FileUpload.vue\"\n  module.hot.dispose(function () {\n    require(\"vueify-insert-css\").cache[\"\\n    .fileinput-button {\\n        position: relative;\\n        overflow: hidden;\\n        display: inline-block;\\n    }\\n    .fileinput-button input {\\n        position: absolute;\\n        top: 0;\\n        right: 0;\\n        margin: 0;\\n        opacity: 0;\\n        -ms-filter: 'alpha(opacity=0)';\\n        font-size: 200px !important;\\n        direction: ltr;\\n        cursor: pointer;\\n    }\\n\\n    /* Fixes for IE < 8 */\\n    @media screen\\\\9 {\\n        .fileinput-button input {\\n            filter: alpha(opacity=0);\\n            font-size: 100%;\\n            height: 100%;\\n        }\\n    }\\n\\n\\n    .fileupload-buttonbar .btn,\\n    .fileupload-buttonbar .toggle {\\n        margin-bottom: 5px;\\n    }\\n    .progress-animated .progress-bar,\\n    .progress-animated .bar {\\n        background: url(\\\"../img/progressbar.gif\\\") !important;\\n        -webkit-filter: none;\\n                filter: none;\\n    }\\n    .fileupload-process {\\n        float: right;\\n        display: none;\\n    }\\n    .fileupload-processing .fileupload-process,\\n    .files .processing .preview {\\n        display: block;\\n        width: 32px;\\n        height: 32px;\\n        background: url(\\\"../img/loading.gif\\\") center no-repeat;\\n        background-size: contain;\\n    }\\n    .files audio,\\n    .files video {\\n        max-width: 300px;\\n    }\\n\\n    @media (max-width: 767px) {\\n        .fileupload-buttonbar .toggle,\\n        .files .toggle,\\n        .files .btn span {\\n            display: none;\\n        }\\n        .files .name {\\n            width: 80px;\\n            word-wrap: break-word;\\n        }\\n        .files audio,\\n        .files video {\\n            max-width: 80px;\\n        }\\n        .files img,\\n        .files canvas {\\n            max-width: 100%;\\n        }\\n    }\\n\"] = false\n    document.head.removeChild(__vueify_style__)\n  })\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, module.exports.template)\n  }\n})()}\n},{\"../../app/s3uploader\":56,\"../../vendor/fileupload/js/jquery.fileupload\":60,\"../../vendor/fileupload/js/jquery.fileupload-image\":57,\"../../vendor/fileupload/js/jquery.fileupload-process\":58,\"../../vendor/fileupload/js/jquery.fileupload-ui\":59,\"../../vendor/fileupload/js/jquery.iframe-transport\":61,\"../../vendor/fileupload/js/vendor/canvas-to-blob.min\":62,\"../../vendor/fileupload/js/vendor/jquery.ui.widget\":63,\"../../vendor/fileupload/js/vendor/load-image\":64,\"./current-user\":48,\"babel-runtime/core-js/json/stringify\":1,\"vue\":43,\"vue-hot-reload-api\":42,\"vueify-insert-css\":44}],46:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n    props: {\n        modal_id: {\n            type: String,\n            required: true\n        },\n        modal_class: {\n            type: String,\n            default: ''\n        },\n        size: {\n            default: null\n        },\n        use_header_close: {\n            default: false\n        },\n        display_footer: {\n            default: true\n        },\n        display_header: {\n            default: true\n        }\n    },\n    computed: {\n        //            display_header(){\n        //                return !(!this.$slots['modal_header'] && !this.display_header_close_btn);\n        //            },\n        display_header_close_btn: function display_header_close_btn() {\n            return this.use_header_close === 'true' || this.use_header_close === true;\n        }\n    }\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n    <div class=\\\"modal\\\" :class=\\\"modal_class\\\" :id=\\\"modal_id\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"row-col h-v\\\">\\n            <div class=\\\"row-cell v-m\\\">\\n                <div class=\\\"modal-dialog\\\" :class=\\\"size\\\" role=\\\"document\\\">\\n                    <div class=\\\"box white r\\\">\\n                        <div class=\\\"box-header b-0\\\" v-if=\\\"display_header\\\">\\n                            <button v-if=\\\"display_header_close_btn\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                                <span aria-hidden=\\\"true\\\">×</span>\\n                            </button>\\n                            <h6 v-if=\\\"!this.$slots['modal_header']\\\" class=\\\"m-b-0\\\"></h6>\\n                            <slot name=\\\"modal_header\\\"></slot>\\n                        </div>\\n                        <div class=\\\"box-divider\\\"></div>\\n                        <div class=\\\"modal-body box-body\\\">\\n                            <slot name=\\\"modal_body\\\"></slot>\\n                        </div>\\n                        <div class=\\\"modal-footer box-footer\\\" v-if=\\\"display_footer\\\">\\n                            <button v-if=\\\"!this.$slots['modal_footer']\\\" type=\\\"button\\\" class=\\\"btn white\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                            <slot name=\\\"modal_footer\\\"></slot>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/jake/www/kabooodle/framework/resources/assets/app/components/Modal.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, module.exports.template)\n  }\n})()}\n},{\"vue\":43,\"vue-hot-reload-api\":42}],47:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _spinner = require('./spinner');\n\nvar _spinner2 = _interopRequireDefault(_spinner);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n    props: {\n        size: {\n            type: String,\n            default: '12'\n        },\n        color: {\n            type: String,\n            default: null\n        }\n    },\n    computed: {\n        img: function img() {\n            return (0, _spinner2.default)(this.size, this.color);\n        }\n    }\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n    <span>\\n        <span v-html=\\\"img\\\"></span>\\n    </span>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/jake/www/kabooodle/framework/resources/assets/app/components/Spinner.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, module.exports.template)\n  }\n})()}\n},{\"./spinner\":55,\"vue\":43,\"vue-hot-reload-api\":42}],48:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function () {\n    return KABOOODLE_APP && KABOOODLE_APP.currentUser ? KABOOODLE_APP.currentUser : false;\n};\n\n},{}],49:[function(require,module,exports){\nvar __vueify_style__ = require(\"vueify-insert-css\").insert(\"\\n    #inventory-grouping-image-div {\\n        width: 200px;\\n        height: 200px;\\n    }\\n    #inventory-grouping-image {\\n        border: 1px solid #ccc;\\n        border-radius: 0.25rem;\\n        border-color: rgba(120, 130, 140, 0.2);\\n    }\\n\")\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _ListableGrouping = require('../listables/ListableGrouping.vue');\n\nvar _ListableGrouping2 = _interopRequireDefault(_ListableGrouping);\n\nvar _FileUpload = require('../FileUpload.vue');\n\nvar _FileUpload2 = _interopRequireDefault(_FileUpload);\n\nvar _Spinner = require('../Spinner.vue');\n\nvar _Spinner2 = _interopRequireDefault(_Spinner);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n    props: {\n        grouping: {\n            type: Object,\n            required: true\n        },\n        validationErrors: {\n            type: Object,\n            required: true\n        },\n        inventory: {\n            type: Object,\n            required: true\n        },\n        restrictedInventoryIds: {\n            type: Array\n        },\n        s3_bucket: {\n            type: String,\n            required: true\n        },\n        s3_acl: {\n            type: String,\n            required: true\n        },\n        s3_key_url: {\n            type: String,\n            required: true\n        },\n        edit: {\n            type: Number,\n            required: true\n        },\n        duplicatable: {\n            type: Boolean,\n            require: true\n        },\n        retrievingInventory: {\n            type: Boolean,\n            require: true\n        },\n        showErrors: {\n            type: Boolean,\n            require: true\n        },\n        validating: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data: function data() {\n        return {\n            showingInventory: false,\n            deleting: false,\n            exceedsAvailableQty: false\n        };\n    },\n\n    computed: {\n        attachedInventoryId: function attachedInventoryId() {\n            return 'attached-inventory-' + this.grouping.id;\n        },\n        imageSrc: function imageSrc() {\n            if (this.grouping.image) {\n                return this.grouping.image.location;\n            } else {\n                return null;\n            }\n        },\n        toggleInventoryText: function toggleInventoryText() {\n            return (this.showingInventory ? 'Hide' : 'Show') + ' Available Inventory';\n        },\n        selectedInventoryIds: function selectedInventoryIds() {\n            return this.grouping.inventory.map(function (item) {\n                return item.id;\n            });\n        },\n        maxInitialQty: function maxInitialQty() {\n            if (this.grouping.inventory.length) {\n                return Array.min(this.grouping.inventory.map(function (x) {\n                    return x.available_qty;\n                }));\n            }\n            return null;\n        },\n        allInventoryPriceUsd: function allInventoryPriceUsd() {\n            var price_usd = 0.00;\n            this.grouping.inventory.forEach(function (item) {\n                price_usd += item.price_usd;\n            });\n            return Number(price_usd).toFixed(2);\n        },\n        allInventoryWholesalePriceUsd: function allInventoryWholesalePriceUsd() {\n            var wholesale_price_usd = 0.00;\n            this.grouping.inventory.forEach(function (item) {\n                wholesale_price_usd += item.wholesale_price_usd;\n            });\n            return Number(wholesale_price_usd).toFixed(2);\n        },\n        quantityError: function quantityError() {\n            var message = '';\n            if (this.exceedsAvailableQty) {\n                message = 'Your outfit quantity can not exceed ' + this.maxInitialQty;\n            } else if (this.validationErrors.initial_qty.status) {\n                message = this.validationErrors.initial_qty.message;\n            }\n            return {\n                'status': this.exceedsAvailableQty || this.validationErrors.initial_qty.status,\n                'message': message\n            };\n        },\n        selectedQuantityAdjustment: function selectedQuantityAdjustment() {\n            if (this.edit && this.grouping.locked) {\n                return this.grouping.initial_qty;\n            } else {\n                return 0;\n            }\n        },\n        lockedMessage: function lockedMessage() {\n            //if (this.grouping.initial_qty) {\n            //return 'Prevent the quantity of ' + this.grouping.initial_qty + ' from being claimed individually from the attached items';\n            //}\n            return 'Prevent items from being claimed individually';\n        }\n    },\n    watch: {\n        grouping: {\n            handler: function handler(val) {\n                this.limitInitialQtyByMaxInitialQty();\n                if (this.grouping.auto_add) {\n                    this.grouping.price_usd = this.allInventoryPriceUsd;\n                }\n                if (this.grouping.max_quantity) {\n                    this.grouping.initial_qty = this.maxInitialQty;\n                }\n                this.validateInput();\n            },\n            deep: true\n        },\n        validating: function validating(val) {\n            if (val) {\n                this.validateInput();\n            }\n        }\n    },\n    methods: {\n        addInventory: function addInventory(group, subgroup, inventory) {\n            if (this.selectedInventoryIds.indexOf(inventory.id) == -1) {\n                this.grouping.inventory.push(inventory);\n            } else {\n                var index = this.grouping.inventory.indexOf(this.grouping.inventory.find(function (item) {\n                    return item.id == inventory.id;\n                }));\n                if (index > -1) {\n                    this.grouping.inventory.splice(index, 1);\n                    this.grouping.inventory.push(inventory);\n                }\n            }\n        },\n        removeInventory: function removeInventory(group, subgroup, inventory) {\n            var index = this.grouping.inventory.indexOf(inventory);\n            if (index > -1) {\n                this.grouping.inventory.splice(index, 1);\n            }\n        },\n        unattachInventory: function unattachInventory(index) {\n            var listable = this.grouping.inventory.splice(index, 1)[0];\n            $Bus.$emit('listable-unselected', listable);\n        },\n        duplicateGrouping: function duplicateGrouping() {\n            this.grouping.duplicating = true;\n            this.$emit('duplicate-grouping');\n        },\n        destroy: function destroy() {\n            this.deleting = true;\n            var self = this;\n            confirmModal(function () {\n                $.noty.closeAll();\n                self.$emit('delete-grouping');\n            }, function () {\n                $.noty.close();\n                self.deleting = false;\n            }, { text: 'Are you sure you want to delete this outfit?' });\n        },\n        limitInitialQtyByMaxInitialQty: function limitInitialQtyByMaxInitialQty() {\n            if (this.maxInitialQty && this.grouping.initial_qty > this.maxInitialQty) {\n                this.exceedsAvailableQty = true;\n            } else {\n                this.exceedsAvailableQty = false;\n            }\n        },\n        validateInput: function validateInput() {\n            if (!this.grouping.name || this.grouping.name == '') {\n                this.validationErrors.name.status = true;\n                this.validationErrors.name.message = 'Your outfit must have a name.';\n            } else {\n                this.validationErrors.name.status = false;\n                this.validationErrors.name.message = '';\n            }\n\n            if (this.grouping.price_usd === '') {\n                this.validationErrors.price_usd.status = true;\n                this.validationErrors.price_usd.message = 'Your outfit must have a price.';\n            } else if (this.grouping.price_usd < 0) {\n                this.validationErrors.price_usd.status = true;\n                this.validationErrors.price_usd.message = 'Your outfit must have a positive price.';\n            } else {\n                this.validationErrors.price_usd.status = false;\n                this.validationErrors.price_usd.message = '';\n            }\n\n            if (this.grouping.initial_qty == '') {\n                this.validationErrors.initial_qty.status = true;\n                this.validationErrors.initial_qty.message = 'Your outfit must have a quantity.';\n            } else if (this.grouping.initial_qty < 1) {\n                this.validationErrors.initial_qty.status = true;\n                this.validationErrors.initial_qty.message = 'Your outfit must have a quantity of at least one.';\n            } else if (this.exceedsAvailableQty) {\n                this.validationErrors.initial_qty.status = true;\n                this.validationErrors.initial_qty.message = 'Your outfit quantity can not exceed ' + this.maxInitialQty;\n            } else {\n                this.validationErrors.initial_qty.status = false;\n                this.validationErrors.initial_qty.message = '';\n            }\n\n            if (this.grouping.inventory.length == 0) {\n                this.validationErrors.inventory.status = true;\n                this.validationErrors.inventory.message = 'Your outfit must have inventory attached.';\n            } else {\n                this.validationErrors.inventory.status = false;\n                this.validationErrors.inventory.message = '';\n            }\n\n            if (!this.grouping.image) {\n                this.validationErrors.image.status = true;\n                this.validationErrors.image.message = 'Your outfit must have an image attached.';\n            } else {\n                this.validationErrors.image.status = false;\n                this.validationErrors.image.message = '';\n            }\n\n            this.$emit('validated', { 'status': this.inputIsValid() });\n        },\n        inputIsValid: function inputIsValid() {\n            return !this.validationErrors.name.status && !this.validationErrors.price_usd.status && !this.validationErrors.initial_qty.status && !this.validationErrors.inventory.status && !this.validationErrors.image.status;\n        }\n    },\n    created: function created() {\n        var _this = this;\n\n        $Bus.$on('image:uploaded:' + this.grouping.id, function (el, data) {\n            _this.grouping.image = data;\n        });\n        Array.min = function (array) {\n            return Math.min.apply(Math, array);\n        };\n    },\n    components: {\n        'inventory-group': _ListableGrouping2.default,\n        'file-upload': _FileUpload2.default,\n        'spinny': _Spinner2.default\n    }\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n    <div>\\n        <div :class=\\\"duplicatable ? 'box white' : null\\\">\\n            <div :class=\\\"duplicatable ? 'box-body' : null\\\">\\n                <div v-if=\\\"duplicatable || edit\\\" class=\\\"col-xs-12\\\">\\n                    <span class=\\\"pull-right\\\" @click=\\\"destroy\\\">\\n                        <spinny v-if=\\\"deleting\\\"></spinny>\\n                        <i v-else=\\\"\\\" class=\\\"fa fa-times text-danger pointer\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                    <div style=\\\"clear: both\\\"></div>\\n                </div>\\n                <div class=\\\"col-sm-8\\\">\\n                    <div class=\\\"identifier-section\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"form-control-label col-sm-3\\\" :class=\\\"showErrors &amp;&amp; validationErrors.name.status ? 'text-danger' : null\\\">Name *</label>\\n                            <div class=\\\"col-sm-6\\\">\\n                                <input type=\\\"text\\\" v-model=\\\"grouping.name\\\" class=\\\"form-control\\\">\\n                                <span v-show=\\\"showErrors &amp;&amp; validationErrors.name.status\\\" class=\\\"text-danger\\\">{{ validationErrors.name.message }}</span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"form-control-label col-sm-3\\\">Description</label>\\n                            <div class=\\\"col-sm-6\\\">\\n                                <textarea v-model=\\\"grouping.description\\\" class=\\\"form-control\\\" style=\\\"resize: none\\\"></textarea>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"price-section\\\">\\n                        <div class=\\\"form-group row auto-add-section\\\">\\n                            <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n                                <div class=\\\"checkbox m-b-0 checkbox-slider--b-flat\\\">\\n                                    <label>\\n                                        <input v-model=\\\"grouping.auto_add\\\" data-type=\\\"magic-toggler\\\" type=\\\"checkbox\\\">\\n                                        <span class=\\\"text-sm\\\">Automatically add prices of selected inventory</span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"form-control-label col-sm-3\\\" :class=\\\"showErrors &amp;&amp; validationErrors.price_usd.status ? 'text-danger' : null\\\">Price *</label>\\n                            <div class=\\\"col-sm-6\\\">\\n                                <input type=\\\"number\\\" step=\\\"0.01\\\" min=\\\"0.00\\\" v-model=\\\"grouping.price_usd\\\" :readonly=\\\"grouping.auto_add\\\" class=\\\"form-control\\\">\\n                                <span v-show=\\\"showErrors &amp;&amp; validationErrors.price_usd.status\\\" class=\\\"text-danger\\\">{{ validationErrors.price_usd.message }}</span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"form-control-label col-sm-3\\\">Accum Wholesale Price</label>\\n                            <div class=\\\"col-sm-6\\\">\\n                                <div class=\\\"form-control\\\" style=\\\"border: none\\\">{{ allInventoryWholesalePriceUsd }}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"quantity-section\\\">\\n                        <div class=\\\"form-group row max-quantity-section\\\">\\n                            <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n                                <div class=\\\"checkbox m-b-0 checkbox-slider--b-flat\\\">\\n                                    <label>\\n                                        <input v-model=\\\"grouping.max_quantity\\\" data-type=\\\"magic-toggler\\\" type=\\\"checkbox\\\">\\n                                        <span class=\\\"text-sm\\\">Maximum quantity based on selected inventory</span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"form-control-label col-sm-3\\\" :class=\\\"(showErrors || exceedsAvailableQty) &amp;&amp; validationErrors.initial_qty.status ? 'text-danger' : null\\\">Quantity *\\n                            </label>\\n                            <div class=\\\"col-sm-6\\\">\\n                                <input type=\\\"number\\\" min=\\\"0\\\" v-model=\\\"grouping.initial_qty\\\" :readonly=\\\"grouping.max_quantity\\\" class=\\\"form-control\\\">\\n                                <span v-show=\\\"(showErrors || exceedsAvailableQty) &amp;&amp; validationErrors.initial_qty.status\\\" class=\\\"text-danger\\\">{{ validationErrors.initial_qty.message }}</span>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"inventory-section\\\">\\n                        <div class=\\\"form-group row locked-section\\\">\\n                            <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n                                <div class=\\\"checkbox m-b-0 checkbox-slider--b-flat\\\">\\n                                    <label>\\n                                        <input v-model=\\\"grouping.locked\\\" data-type=\\\"magic-toggler\\\" type=\\\"checkbox\\\">\\n                                        <span class=\\\"text-sm\\\">{{ lockedMessage }}</span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"form-control-label col-sm-3\\\" :class=\\\"showErrors &amp;&amp; validationErrors.inventory.status ? 'text-danger' : null\\\">\\n                                <i :class=\\\"grouping.locked ? 'fa-lock' : 'fa-unlock'\\\" class=\\\"fa text-primary\\\" style=\\\"min-width: 16px; margin-right: 5px;\\\"></i>\\n                                Inventory *\\n                            </label>\\n                            <div class=\\\"col-sm-6\\\">\\n                                <div class=\\\"box m-b-0 form-control\\\" style=\\\"box-shadow: none;\\\">\\n                                    <div :id=\\\"attachedInventoryId\\\" class=\\\"box-body\\\" style=\\\"min-height: 105px;\\\">\\n                                        <div v-for=\\\"(inventory, index) in grouping.inventory\\\" class=\\\"inline m-r-sm\\\">\\n                                            <span class=\\\"avatar_container _48 avatar-thumbnail\\\">\\n                                                <img :src=\\\"inventory.cover_photo\\\">\\n                                            </span>\\n                                            <span class=\\\"p-a-o text-sm clearfix block\\\">\\n                                                <span class=\\\"pull-left\\\">Qty:\\n                                                    <span class=\\\"text-muted\\\">{{ inventory.available_qty }}</span>\\n                                                </span>\\n                                                <span class=\\\"pull-right\\\">\\n                                                    <i @click=\\\"unattachInventory(index)\\\" class=\\\"fa fa-times text-danger pointer\\\"></i>\\n                                                </span>\\n                                            </span>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <span v-show=\\\"showErrors &amp;&amp; validationErrors.inventory.status\\\" class=\\\"text-danger\\\">{{ validationErrors.inventory.message }}</span>\\n                                <span class=\\\"text-xs text-muted\\\">{{ grouping.inventory.length }} items associated.</span>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <div class=\\\"clearfix\\\">\\n                        <div class=\\\"image-section\\\">\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-xs-12\\\">\\n                                    <span class=\\\"add-images-btn\\\">\\n                                        <file-upload :ukey=\\\"grouping.id\\\" :s3_bucket=\\\"s3_bucket\\\" :s3_acl=\\\"s3_acl\\\" :s3_key_url=\\\"s3_key_url\\\" multiple=\\\"false\\\" :button_title=\\\"grouping.image ? 'Replace Cover Photo' : 'Add Cover Photo'\\\"></file-upload>\\n                                    </span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <div class=\\\"col-xs-12\\\">\\n                                    <div v-show=\\\"imageSrc\\\" class=\\\"item block avatar-thumbnail\\\" id=\\\"inventory-grouping-image-div\\\">\\n                                        <img id=\\\"inventory-grouping-image\\\" :src=\\\"imageSrc\\\">\\n                                    </div>\\n                                    <span v-show=\\\"showErrors &amp;&amp; validationErrors.image.status\\\" class=\\\"text-danger\\\">{{ validationErrors.image.message }}</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-12 available-inventory-section\\\">\\n                    <div style=\\\"margin: 15px\\\">\\n                        <span class=\\\"text-primary\\\">Available Inventory</span>\\n                        <small class=\\\"text-muted\\\">Qty amounts shown below reflect amounts able to be associated to new outfits.</small>\\n                    </div>\\n                    <div v-show=\\\"retrievingInventory\\\" class=\\\"text-center center-block\\\">\\n                        <spinny :size=\\\"'20'\\\"></spinny>\\n                    </div>\\n                    <div v-show=\\\"!retrievingInventory\\\">\\n                        <inventory-group v-for=\\\"group in inventory.groups\\\" :key=\\\"group.id\\\" :group=\\\"group\\\" group_type=\\\"inventory\\\" :display_footer_buttons=\\\"false\\\" :previously-selected-ids=\\\"selectedInventoryIds\\\" :selected-quantity-adjustment=\\\"selectedQuantityAdjustment\\\" :use-available-qty=\\\"true\\\" :disable-unavailable=\\\"true\\\" v-on:listable-selected=\\\"addInventory\\\" v-on:listable-removed=\\\"removeInventory\\\"></inventory-group>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                        <label class=\\\"form-control-label\\\"><small>* Denotes fields are required.</small></label>\\n                    </div>\\n                </div>\\n                <div v-if=\\\"!edit &amp;&amp; duplicatable\\\" class=\\\"col-xs-12\\\">\\n                    <button :class=\\\"grouping.duplicating ? 'disabled' : null\\\" :disabled=\\\"grouping.duplicating\\\" @click.prevent=\\\"duplicateGrouping\\\" class=\\\"btn primary btn-sm pull-right\\\">\\n                        Duplicate <spinny v-if=\\\"grouping.duplicating\\\"></spinny>\\n                    </button>\\n                </div>\\n                <div style=\\\"clear: both\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/jake/www/kabooodle/framework/resources/assets/app/components/inventory-groupings/InventoryGroupingForm.vue\"\n  module.hot.dispose(function () {\n    require(\"vueify-insert-css\").cache[\"\\n    #inventory-grouping-image-div {\\n        width: 200px;\\n        height: 200px;\\n    }\\n    #inventory-grouping-image {\\n        border: 1px solid #ccc;\\n        border-radius: 0.25rem;\\n        border-color: rgba(120, 130, 140, 0.2);\\n    }\\n\"] = false\n    document.head.removeChild(__vueify_style__)\n  })\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, module.exports.template)\n  }\n})()}\n},{\"../FileUpload.vue\":45,\"../Spinner.vue\":47,\"../listables/ListableGrouping.vue\":53,\"vue\":43,\"vue-hot-reload-api\":42,\"vueify-insert-css\":44}],50:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _InventoryGroupingForm = require('./InventoryGroupingForm.vue');\n\nvar _InventoryGroupingForm2 = _interopRequireDefault(_InventoryGroupingForm);\n\nvar _Spinner = require('../Spinner.vue');\n\nvar _Spinner2 = _interopRequireDefault(_Spinner);\n\nvar _Modal = require('../Modal.vue');\n\nvar _Modal2 = _interopRequireDefault(_Modal);\n\nvar _inventoryGroupingOnboard = require('./inventory-grouping-onboard');\n\nvar _inventoryGroupingOnboard2 = _interopRequireDefault(_inventoryGroupingOnboard);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n    props: {\n        inventoryGroupingsEndpoint: {\n            type: String,\n            required: true\n        },\n        inventoryEndpoint: {\n            type: String,\n            required: true\n        },\n        s3_bucket: {\n            type: String,\n            required: true\n        },\n        s3_acl: {\n            type: String,\n            required: true\n        },\n        s3_key_url: {\n            type: String,\n            required: true\n        },\n        edit: {\n            type: Number,\n            required: true\n        },\n        editGrouping: {\n            type: Object,\n            required: false\n        },\n        inventoryGroupingsIndexRoute: {\n            type: String,\n            required: true\n        }\n    },\n    data: function data() {\n        return {\n            multiple: false,\n            adding: false,\n            saving: false,\n            viewing: false,\n            viewRoute: this.inventoryGroupingsIndexRoute + '/' + this.editGrouping.obfuscate_id,\n            ids: [],\n            groupings: [],\n            validationErrors: {},\n            retrievingInventory: false,\n            inventory: {\n                'raw': [],\n                'groups': []\n            },\n            restrictedInventoryIds: [],\n            showErrors: false,\n            validating: false,\n            allGroupingInputIsValid: false\n        };\n    },\n\n    created: function created() {\n        this.getInventory();\n        if (this.edit) {\n            this.setEditGrouping();\n        } else {\n            this.addGrouping();\n        }\n        $Bus.$on('tour:changed', function (stepNumber, step) {\n            if (stepNumber == 8) {\n                console.log('scroll up');\n            }\n        });\n    },\n    computed: {\n        saveInventoryGroupingsEndpoint: function saveInventoryGroupingsEndpoint() {\n            return this.inventoryGroupingsEndpoint + (this.edit ? '/' + this.editGrouping.id : '');\n        },\n        saveGroupingsData: function saveGroupingsData() {\n            if (!this.multiple || this.edit) {\n                return this.groupings[0];\n            } else {\n                return {\n                    'groupings': this.groupings\n                };\n            }\n        },\n        saveOutfitsText: function saveOutfitsText() {\n            return 'Save Outfit' + (this.groupings.length > 1 ? 's' : '');\n        },\n        disableSaving: function disableSaving() {\n            return false;\n            //return this.saving || this.preventSaving;\n        },\n        preventSaving: function preventSaving() {\n            var prevent = false;\n            this.groupings.forEach(function (grouping) {\n                if (grouping.name == '' || grouping.exceedsAvailableQty || grouping.initial_qty == 0 || grouping.inventory.length == 0 || !grouping.image) prevent = true;\n            });\n            return prevent;\n        }\n    },\n    methods: {\n        getInventory: function getInventory(endpoint) {\n            var self = this;\n            self.retrievingInventory = true;\n            this.$http.get(endpoint ? endpoint : this.inventoryEndpoint).then(function (response) {\n\n                var pagination = response.body.data.meta;\n                if (response.body.data.data.length > 0) {\n                    _.each(response.body.data.data, function (groupings) {\n                        self.inventory.groups.push(groupings);\n                    });\n                }\n\n                self.retrievingInventory = false;\n                if (pagination.next_page_url) {\n                    this.getInventory(pagination.next_page_url);\n                } else {\n                    self.inventory.groups = _.sortBy(self.inventory.groups, ['name']);\n                }\n            }, function (response) {});\n        },\n        showTourModal: function showTourModal() {\n            $('#tour-modal').modal('show');\n        },\n        startTour: function startTour() {\n            $(document).find('.tour-modal').modal('hide');\n            $(document).find('.onboard-show-btn').hide();\n            (0, _inventoryGroupingOnboard2.default)().start();\n        },\n        noTour: function noTour() {\n            $(document).find('.tour-modal').modal('hide');\n        },\n        getNewId: function getNewId() {\n            var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n            do {\n                var text = '';\n                for (var i = 0; i < 5; i++) {\n                    text += possible.charAt(Math.floor(Math.random() * possible.length));\n                }\n            } while (this.ids.indexOf(text) !== -1);\n\n            this.ids.push(text);\n\n            return text;\n        },\n        addGrouping: function addGrouping() {\n            this.adding = true;\n            var id = this.getNewId();\n            this.validationErrors[id] = {\n                'name': {\n                    'status': false,\n                    'message': ''\n                },\n                'price_usd': {\n                    'status': false,\n                    'message': ''\n                },\n                'initial_qty': {\n                    'status': false,\n                    'message': ''\n                },\n                'inventory': {\n                    'status': false,\n                    'message': ''\n                },\n                'image': {\n                    'status': false,\n                    'message': ''\n                }\n            };\n            this.groupings.push({\n                'id': id,\n                'name': null,\n                'description': null,\n                'locked': true,\n                'price_usd': Number(0).toFixed(2),\n                'initial_qty': null,\n                'inventory': [],\n                'image': null,\n                'duplicating': false,\n                'auto_add': true,\n                'max_quantity': true\n            });\n            this.adding = false;\n        },\n        duplicateGrouping: function duplicateGrouping(grouping) {\n            var id = this.getNewId();\n            this.validationErrors[id] = {\n                'name': {\n                    'status': this.validationErrors[grouping.id.toString()].name.status,\n                    'message': this.validationErrors[grouping.id.toString()].name.message\n                },\n                'price_usd': {\n                    'status': this.validationErrors[grouping.id.toString()].price_usd.status,\n                    'message': this.validationErrors[grouping.id.toString()].price_usd.message\n                },\n                'initial_qty': {\n                    'status': this.validationErrors[grouping.id.toString()].initial_qty.status,\n                    'message': this.validationErrors[grouping.id.toString()].initial_qty.message\n                },\n                'inventory': {\n                    'status': this.validationErrors[grouping.id.toString()].inventory.status,\n                    'message': this.validationErrors[grouping.id.toString()].inventory.message\n                },\n                'image': {\n                    'status': this.validationErrors[grouping.id.toString()].image.status,\n                    'message': this.validationErrors[grouping.id.toString()].image.message\n                }\n            };\n            this.groupings.push({\n                'id': id,\n                'name': grouping.name,\n                'description': grouping.description,\n                'locked': grouping.locked,\n                'price_usd': grouping.price_usd,\n                'initial_qty': grouping.initial_qty,\n                'inventory': grouping.inventory,\n                'image': grouping.image,\n                'duplicating': false,\n                'auto_add': grouping.auto_add,\n                'max_quantity': grouping.max_quantity\n            });\n            grouping.duplicating = false;\n        },\n        setEditGrouping: function setEditGrouping() {\n            var id = this.editGrouping.id.toString();\n            this.validationErrors[id] = {\n                'name': {\n                    'status': false,\n                    'message': ''\n                },\n                'price_usd': {\n                    'status': false,\n                    'message': ''\n                },\n                'initial_qty': {\n                    'status': false,\n                    'message': ''\n                },\n                'inventory': {\n                    'status': false,\n                    'message': ''\n                },\n                'image': {\n                    'status': false,\n                    'message': ''\n                }\n            };\n            this.groupings.push({\n                'id': id,\n                'name': this.editGrouping.name,\n                'description': this.editGrouping.description,\n                'locked': this.editGrouping.locked,\n                'price_usd': this.editGrouping.price_usd,\n                'initial_qty': this.editGrouping.initial_qty,\n                'inventory': this.editGrouping.inventory_items,\n                'image': this.editGrouping.coverimage,\n                'duplicating': false,\n                'auto_add': this.editGrouping.auto_add,\n                'max_quantity': this.editGrouping.max_quantity\n            });\n        },\n        save: function save() {\n            this.validateGroupingsInput();\n            if (this.allGroupingInputIsValid) {\n                this.showErrors = false;\n                this.validating = false;\n                if (this.edit ? this.updateGrouping() : this.saveGroupings()) ;\n            } else {\n                this.showErrors = true;\n                notify({\n                    'text': 'There appears to be an issue with your input. Please correct the issue(s) an try again.',\n                    'type': 'error'\n                });\n            }\n        },\n        validateGroupingsInput: function validateGroupingsInput() {\n            this.validating = true;\n        },\n        saveGroupings: function saveGroupings() {\n            var self = this;\n            self.saving = true;\n            this.$http.post(this.saveInventoryGroupingsEndpoint, this.saveGroupingsData).then(function (response) {\n                notify({\n                    'text': 'Your outfit' + (this.groupings.length > 1 ? 's were' : ' was') + ' saved!',\n                    'type': 'success'\n                });\n                confirmModal(function () {\n                    $.noty.closeAll();\n                    self.reset();\n                }, function () {\n                    $.noty.close();\n                    window.location.href = self.inventoryGroupingsIndexRoute;\n                }, { text: 'Would you like to create another outfit?' });\n            }, function (response) {\n                self.showErrors = true;\n                self.handleValidationErrorsResponse(response);\n                notify({\n                    'text': response.body.data.msg,\n                    'type': 'error'\n                });\n            }).finally(function () {\n                self.saving = false;\n            });\n        },\n        updateGrouping: function updateGrouping() {\n            var self = this;\n            self.saving = true;\n            this.$http.put(this.saveInventoryGroupingsEndpoint, this.saveGroupingsData).then(function (response) {\n                notify({\n                    'text': 'Your outfit was updated!',\n                    'type': 'success'\n                });\n            }, function (response) {\n                self.showErrors = true;\n                self.handleValidationErrorsResponse(response);\n                notify({\n                    'text': response.body.data.msg,\n                    'type': 'error'\n                });\n            }).finally(function () {\n                self.saving = false;\n            });\n        },\n        reset: function reset() {\n            this.inventory = [];\n            this.inventoryGrouped = [];\n            this.getInventory();\n            this.groupings = [];\n            this.addGrouping();\n            this.allGroupingInputIsValid = false;\n        },\n        viewGrouping: function viewGrouping() {\n            this.viewing = true;\n            window.location.href = this.viewRoute;\n        },\n        deleteGrouping: function deleteGrouping(grouping, index) {\n            if (this.edit) {\n                var self = this;\n                this.$http.delete(this.inventoryGroupingsEndpoint + '/' + grouping.id).then(function (response) {\n                    notify({\n                        'text': 'Your outfit has been deleted!',\n                        'type': 'success'\n                    });\n                    window.location.href = this.inventoryGroupingsIndexRoute;\n                }, function (response) {\n                    notify({\n                        'text': 'There was a problem deleting your outfit. Please try again.',\n                        'type': 'error'\n                    });\n                });\n            } else {\n                this.groupings.splice(index, 1);\n            }\n        },\n        updateValidationStatus: function updateValidationStatus(e) {\n            this.allGroupingInputIsValid = e.status;\n        },\n        handleValidationErrorsResponse: function handleValidationErrorsResponse(response) {\n            if (response.body.data.validationErrors) {\n                for (var input in response.body.data.validationErrors) {\n                    this.validationErrors[this.groupings[0].id][input].status = true;\n                    this.validationErrors[this.groupings[0].id][input].message = response.body.data.validationErrors[input][0];\n                }\n            }\n        }\n    },\n    components: {\n        'inventory-grouping': _InventoryGroupingForm2.default,\n        'spinny': _Spinner2.default,\n        'modal': _Modal2.default\n    }\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n    <div>\\n        <div class=\\\"box white\\\">\\n            <div class=\\\"box-header\\\">\\n                <h2>Create Outfits\\n                    <a class=\\\"text-success onboard-show-btn\\\" @click.prevent=\\\"showTourModal\\\">\\n                        <i class=\\\"fa fa-question-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                    </a>\\n                </h2>\\n                <small>Once an outfit is created, you can add it to any sale, anytime!</small>\\n                <div class=\\\"text-center center-block\\\">\\n                    <button v-if=\\\"edit\\\" :class=\\\"viewing ? 'disabled' : null\\\" :disabled=\\\"viewing\\\" @click.prevent=\\\"viewGrouping\\\" class=\\\"btn primary btn-sm \\\">\\n                        View Outfit <spinny v-if=\\\"viewing\\\"></spinny>\\n                    </button>\\n                    <button v-if=\\\"!edit &amp;&amp; multiple\\\" :class=\\\"adding ? 'disabled' : null\\\" :disabled=\\\"adding\\\" @click.prevent=\\\"addGrouping\\\" class=\\\"btn primary btn-sm \\\">\\n                        Add Outfit <spinny v-if=\\\"adding\\\"></spinny>\\n                    </button>\\n                    <button :class=\\\"disableSaving ? 'disabled' : null\\\" :disabled=\\\"disableSaving\\\" @click.prevent=\\\"save\\\" class=\\\"btn primary btn-sm \\\">\\n                        {{ saveOutfitsText }} <spinny v-if=\\\"saving\\\"></spinny>\\n                    </button>\\n                </div>\\n            </div>\\n            <div class=\\\"box-divider m-a-0\\\"></div>\\n            <div class=\\\"box-body\\\">\\n                <div id=\\\"inventory-groupings\\\">\\n                    <inventory-grouping v-for=\\\"(grouping, index) in groupings\\\" :edit=\\\"edit\\\" :key=\\\"grouping.id\\\" :grouping=\\\"grouping\\\" :validation-errors=\\\"validationErrors[grouping.id]\\\" :inventory=\\\"inventory\\\" :restricted-inventory-ids=\\\"restrictedInventoryIds\\\" :s3_bucket=\\\"s3_bucket\\\" :s3_acl=\\\"s3_acl\\\" :s3_key_url=\\\"s3_key_url\\\" v-on:duplicate-grouping=\\\"duplicateGrouping(grouping)\\\" v-on:delete-grouping=\\\"deleteGrouping(grouping, index)\\\" v-on:validated=\\\"updateValidationStatus\\\" :duplicatable=\\\"multiple\\\" :retrieving-inventory=\\\"retrievingInventory\\\" :show-errors=\\\"showErrors\\\" :validating=\\\"validating\\\"></inventory-grouping>\\n                </div>\\n            </div>\\n        </div>\\n        <modal modal_id=\\\"tour-modal\\\" modal_class=\\\"tour-modal\\\" :display_header=\\\"false\\\" :display_footer=\\\"false\\\">\\n            <div slot=\\\"modal_body\\\">\\n                <div class=\\\"m-a-2 p-a-2 center text-center block-center center-block\\\">\\n                    <img src=\\\"/assets/images/kit1.png\\\">\\n                    <h5 class=\\\"m-t-3 m-b-3\\\">Hi. I'm Kit. If you need help, I'm here to help guide you anytime.</h5>\\n                    <button type=\\\"button\\\" class=\\\"m-l-1 btn btn-lg white\\\" @click.prevent=\\\"noTour\\\">No thanks, Kit!</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg\\\" @click.prevent=\\\"startTour\\\">Yes, take a tour!</button>\\n                </div>\\n            </div>\\n        </modal>\\n    </div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/jake/www/kabooodle/framework/resources/assets/app/components/inventory-groupings/InventoryGroupingsManagement.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, module.exports.template)\n  }\n})()}\n},{\"../Modal.vue\":46,\"../Spinner.vue\":47,\"./InventoryGroupingForm.vue\":49,\"./inventory-grouping-onboard\":51,\"vue\":43,\"vue-hot-reload-api\":42}],51:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function () {\n    var intro = (0, _onboard2.default)();\n\n    var steps = [{\n        element: document.querySelectorAll('.identifier-section')[0],\n        intro: \"Name and describe your outfit here. In order for you to identify one outfit from another, the outfit name needs to be unique.\",\n        step: 0,\n        position: 'bottom-middle-aligned'\n    }, {\n        element: document.querySelectorAll('.price-section')[0],\n        intro: \"How much will your outfit cost? Put that information here. To help you out, as you add inventory items, the Accum Wholesale Price will change to show you what the wholesale price of the outfit is.\",\n        step: 1,\n        position: 'bottom-middle-aligned'\n    }, {\n        element: document.querySelectorAll('.auto-add-section')[0],\n        intro: \"Want the outfit price to simply be the price of the included inventory items added together? No problem. Keep this toggled on, and we'll do the math for you.\",\n        step: 2,\n        position: 'bottom-middle-aligned'\n    }, {\n        element: document.querySelectorAll('.quantity-section')[0],\n        intro: \"How many of this outfit do you want to have? Put that information here. To help you out, we will warn you when the included inventory items can't satisfy the amount you put here.\",\n        step: 3,\n        position: 'bottom-middle-aligned'\n    }, {\n        element: document.querySelectorAll('.max-quantity-section')[0],\n        intro: \"Want the outfit quantity to simply be the maximum quantity allowed based on the availablity of the included inventory items? No problem. Keep this toggled on, and we'll keep that figured out for you.\",\n        step: 4,\n        position: 'bottom-middle-aligned'\n    }, {\n        element: document.querySelectorAll('.inventory-section')[0],\n        intro: \"The outfit's associated inventory items will display here. Once associated you can remove them from here as well if you want.\",\n        step: 5,\n        position: 'bottom-middle-aligned'\n    }, {\n        element: document.querySelectorAll('.locked-section')[0],\n        intro: \"Want to make sure you always have the included inventory items on hand to satify claims on the outfit? No problem. Keep this toggled on, and we will make sure to keep the quantity of the outfit set aside for each included inventory item.\",\n        step: 6,\n        position: 'bottom-middle-aligned'\n    }, {\n        element: document.querySelectorAll('.image-section')[0],\n        intro: \"You love the way your outfit looks. Add an image of it here to help identify the outfit and to present it others.\",\n        step: 7,\n        position: 'bottom-middle-aligned'\n    }, {\n        element: document.querySelectorAll('.available-inventory-section')[0],\n        intro: \"These are all the available inventory items you can include in your outfit. Click items to add and remove them from the outfit.\",\n        step: 8,\n        position: 'top'\n    }];\n\n    intro.addSteps(steps);\n\n    return intro;\n};\n\nvar _onboard = require('../onboard');\n\nvar _onboard2 = _interopRequireDefault(_onboard);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n},{\"../onboard\":54}],52:[function(require,module,exports){\n'use strict';\n\nvar _InventoryGroupingsManagement = require('./InventoryGroupingsManagement.vue');\n\nvar _InventoryGroupingsManagement2 = _interopRequireDefault(_InventoryGroupingsManagement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nnew Vue({\n    el: '#inventory-groupings-management',\n    components: {\n        'manager': _InventoryGroupingsManagement2.default\n    }\n});\n\n},{\"./InventoryGroupingsManagement.vue\":50}],53:[function(require,module,exports){\nvar __vueify_style__ = require(\"vueify-insert-css\").insert(\"\\n    .ps-scrollbar-x {\\n        height: 11px !important;\\n    }\\n    .ps-scrollbar-x-rail {\\n        opacity: .9 !important;\\n    }\\n\")\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _Spinner = require('../Spinner.vue');\n\nvar _Spinner2 = _interopRequireDefault(_Spinner);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar initial_state = function initial_state() {\n    return {\n        selected: {\n            listables: [],\n            inventory_groupings: []\n        },\n        opened: []\n    };\n};\nexports.default = {\n    props: {\n        group: {\n            required: true,\n            type: Object\n        },\n        group_type: {\n            required: true,\n            type: String\n        },\n        display_footer_buttons: {\n            type: Boolean,\n            default: false\n        },\n        display_toggle_all_buttons: {\n            type: Boolean,\n            default: true\n        },\n        ukey: {\n            type: String,\n            default: null\n        },\n        previouslySelectedIds: {\n            type: Array,\n            default: function _default() {\n                return [];\n            }\n        },\n        selectedQuantityAdjustment: {\n            type: Number,\n            required: false\n        },\n        useAvailableQty: {\n            type: Boolean,\n            default: false\n        },\n        disableUnavailable: {\n            type: Boolean,\n            default: false\n        },\n        hideUnavailable: {\n            type: Boolean,\n            default: false\n        },\n        inventoryIndexRoute: {\n            type: String,\n            required: self.display_footer_buttons\n        }\n    },\n    data: function data() {\n        return initial_state();\n    },\n\n    computed: {\n        group_has_subgroupings: function group_has_subgroupings() {\n            return this.group.subgroupings.length > 0 && this.group.subgroupings !== undefined;\n        }\n    },\n    created: function created() {\n        var _this = this;\n\n        // curious about how we can handle slots as a javascript variable\n        //            console.log(this.$slots);\n        var self = this;\n        if (self.previouslySelectedIds.length && self.group_has_subgroupings) {\n            self.group.subgroupings.forEach(function (subgroup) {\n                subgroup.listables.forEach(function (listable) {\n                    if (self.previouslySelectedIds.indexOf(listable.id) > -1) {\n                        listable.available_qty += self.selectedQuantityAdjustment;\n                        self.addListable(subgroup, listable);\n                        self.clickSubgroupingDrawer(self.group, subgroup);\n                    }\n                });\n            });\n        }\n\n        $Bus.$on('listings:listables:select:all', function () {\n            _.each(_this.group.subgroupings, function (subgrouping) {\n                _.each(subgrouping.listables, function (listable) {\n                    _this.addListable(subgrouping, listable);\n                });\n            });\n        });\n\n        $Bus.$on('listings:selected:listables:reset', function () {\n            (0, _assign2.default)(_this.$data, initial_state());\n            // For some reason, the below loop does not work.\n            // Only a few are deselected, others fail. It's bizarre.\n            // So for now, reset state.\n\n            //                if (this.selected.listables.length > 0) {\n            //                    _.each (this.selected.listables, (listable)=>{\n            //                        if (listable && listable.hasOwnProperty('subgroup')){\n            //                            this.removeListable({id: listable.subgroup}, listable);\n            //                        }\n            //                    });\n            //                }\n        });\n\n        // GET selected listables event listener\n        $Bus.$on(this.group.id + '::listings:selected:listables:get', function () {\n            $Bus.$emit(_this.group.id + '::listings:selected:listables', _this.group.id, subgroup_id, _this.selected.listables);\n        });\n\n        $Bus.$on('listable-unselected', function (listable) {\n            var index = self.selected.listables.findIndex(function (x) {\n                return x.id == listable.id;\n            });\n            if (index > -1) {\n                self.selected.listables.splice(index, 1);\n            }\n        });\n    },\n\n    methods: {\n        claimRoute: function claimRoute(item) {\n            return this.inventoryIndexRoute + '/' + item.name_uuid;\n        },\n        editItemButtonClicked: function editItemButtonClicked(item, event) {\n            $Bus.$emit('popout-overlay:request-open');\n\n            this.$http.get(this.inventoryIndexRoute + '/' + item.name_uuid + '/edit', {\n                async: false,\n                before: function before(request) {\n                    // Before each ajax request, abort the previous request\n                    // and add this request to an array of requests for reference.\n                    $Bus.$emit('popout-overlay:change-prompt', false);\n                    if (this.previousRequest) {\n                        this.previousRequest.abort();\n                    }\n                    this.previousRequest = request;\n                }\n            }).then(function (response) {\n                setTimeout(function () {\n                    $Bus.$emit('popout-overlay:change-content', response.body);\n                }, 0);\n            }, function (response) {\n                $Bus.$emit('popout-overlay:change-content', 'An error occurred, please try again.', false);\n            });\n        },\n        resetState: function resetState() {\n            (0, _assign2.default)(this.$data, initial_state());\n        },\n        addSubgroupingDrawer: function addSubgroupingDrawer(subgroup) {\n            // BUGFIX:\n            // Sometimes, we trigger events to open a drawer.  Said events are unaware of the drawers state,\n            // so we need to prevent duplicate entries.\n            var index = this.opened.indexOf(subgroup.id);\n            if (index == -1) {\n                this.opened.push(subgroup.id);\n                this.$nextTick(function () {\n                    $('.row-horizon').perfectScrollbar();\n                });\n            }\n        },\n        removeSubgroupingDrawer: function removeSubgroupingDrawer(subgroup) {\n            var index = this.opened.indexOf(subgroup.id);\n            if (index > -1) {\n                this.opened.splice(index, 1);\n                this.$nextTick(function () {\n                    $('.row-horizon').perfectScrollbar();\n                });\n            }\n        },\n        addListable: function addListable(subgroup, listable) {\n            if (!this.disableUnavailable || listable.available_qty > 0) {\n                var value = { id: listable.id, subgroup: subgroup };\n                var index = _.findIndex(this.selected.listables, value);\n                if (index == -1) {\n                    this.selected.listables.push(value);\n\n                    var key = 'listable:selected';\n                    if (this.ukey) {\n                        key = key + ':' + this.ukey;\n                    }\n                    $Bus.$emit(key, this.group, subgroup, listable);\n                    this.$emit('listable-selected', this.group, subgroup, listable);\n                }\n            }\n        },\n        removeListable: function removeListable(subgroup, listable) {\n            var index = _.findIndex(this.selected.listables, { id: listable.id });\n            if (index > -1) {\n                this.selected.listables.splice(index, 1);\n                var key = 'listable:removed';\n                if (this.ukey) {\n                    key = key + ':' + this.ukey;\n                }\n                $Bus.$emit(key, this.group, subgroup, listable);\n                this.$emit('listable-removed', this.group, subgroup, listable);\n            }\n        },\n        clickSubgroupingDrawer: function clickSubgroupingDrawer(group, subgroup) {\n            var index = this.opened.indexOf(subgroup.id);\n            if (index > -1) {\n                // Drawer is opened, close it;\n                this.removeSubgroupingDrawer(subgroup);\n            } else {\n                // Drawer is closed, open it\n                this.addSubgroupingDrawer(subgroup);\n            }\n        },\n        clickDrawersAll: function clickDrawersAll() {\n            var _this2 = this;\n\n            var group = this.group;\n            // If we dont have subgroupings, then we dont have drawers.\n            if (!this.group_has_subgroupings) {\n                return;\n            }\n\n            if (this.opened.length) {\n                this.opened = [];\n            } else {\n                // open everything\n                _.each(group.subgroupings, function (subgroup) {\n                    _this2.addSubgroupingDrawer(subgroup);\n                });\n            }\n        },\n        clickListable: function clickListable(subgroup, listable) {\n            var index = _.findIndex(this.selected.listables, { id: listable.id });\n            if (index > -1) {\n                // Found, so we need to unselect the listable\n                this.removeListable(subgroup, listable);\n            } else {\n                // Not found, select the listable\n                this.addListable(subgroup, listable);\n            }\n        },\n\n\n        /**\n         * Click handler when a subgrouping is clicked\n         * this will add ALL listables or remove ALL listables that are associated to this subgroup\n         *\n         * @param group\n         * @param id\n         * @param forceSelect\n         */\n        clickSubgrouping: function clickSubgrouping(subgroup, force) {\n            var _this3 = this;\n\n            var index = _.findIndex(this.selected.listables, { subgroup: subgroup });\n            if (index > -1) {\n                // Remove all listables for this subgrouping\n                _.each(subgroup.listables, function (item) {\n                    _this3.removeListable(subgroup, item);\n                });\n\n                // close the drawer for the subgroup\n                if (this.group_has_subgroupings) {\n                    this.removeSubgroupingDrawer(subgroup);\n                }\n            } else {\n                // add all listables for this subgrouping\n                _.each(subgroup.listables, function (item) {\n                    _this3.addListable(subgroup, item);\n                });\n\n                // Open the drawer for the subgroup\n                if (this.group_has_subgroupings) {\n                    this.addSubgroupingDrawer(subgroup);\n                }\n            }\n        },\n\n\n        /**\n         * Click handler when \"ALL\" is selected for a subgroup\n         */\n        clickSubgroupingAll: function clickSubgroupingAll() {\n            var _this4 = this;\n\n            var adding = this.selected.listables.length == 0;\n            _.each(this.group.subgroupings, function (subgroup) {\n                _.each(subgroup.listables, function (listable) {\n                    if (adding) {\n                        _this4.addListable(subgroup, listable);\n                    } else {\n                        _this4.removeListable(subgroup, listable);\n                    }\n                });\n            });\n        },\n\n        allSubgroupingBtnDisabled: function allSubgroupingBtnDisabled(group) {\n            if (this.disableUnavailable) {\n                var disable = true;\n                if (group.subgroupings && group.subgroupings.length) {\n                    group.subgroupings.forEach(function (subgrouping) {\n                        subgrouping.listables.forEach(function (listable) {\n                            if (listable.available_qty > 0) disable = false;\n                        });\n                    });\n                }\n                return disable;\n            } else {\n                return false;\n            }\n        },\n        subgroupingBtnDisabled: function subgroupingBtnDisabled(subgroup) {\n            if (this.disableUnavailable) {\n                var disable = true;\n                subgroup.listables.forEach(function (listable) {\n                    if (listable.available_qty > 0) disable = false;\n                });\n                return disable;\n            } else {\n                return false;\n            }\n        },\n        subgroupingBtnHidden: function subgroupingBtnHidden(subgroup) {\n            if (this.hideUnavailable) {\n                var disable = true;\n                subgroup.listables.forEach(function (listable) {\n                    if (listable.available_qty > 0) disable = false;\n                });\n                return disable;\n            } else {\n                return false;\n            }\n        }\n    },\n    components: {\n        'spinny': _Spinner2.default\n    }\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n    <div class=\\\"box white\\\">\\n        <div class=\\\"box-header\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-2\\\">\\n                    <h6 class=\\\"m-a-0 m-t-xs m-b-sm\\\">\\n                        <a href=\\\"javascript:;\\\" @click.prevent=\\\"clickDrawersAll\\\">{{ group.name }}\\n                            <span class=\\\"text-xs p-b-xs text-muted inline _400\\\">({{ group.total }})\\n                            <i v-if=\\\"group_has_subgroupings\\\" :class=\\\"opened.length ? 'fa-angle-up' : 'fa-angle-down'\\\" class=\\\"_300 text-sm fa\\\"></i>\\n                            </span>\\n                        </a>\\n                    </h6>\\n                </div>\\n                <div class=\\\"col-sm-10\\\">\\n                    <div class=\\\"pull-left btn-group-prpl\\\">\\n                        <button :style=\\\"subgroupingBtnHidden(subgroup) ? 'display: none': null\\\" class=\\\"btn btn-subgroup white btn-xs\\\" style=\\\"margin-right: 3px;\\\" v-for=\\\"subgroup in group.subgroupings\\\" :data-subgroup-id=\\\"subgroup.id\\\" key=\\\"subgroup.id\\\" @click.prevent=\\\"clickSubgrouping(subgroup)\\\" :class=\\\"selected.listables.length &amp;&amp;  _.chain(selected.listables).filter({subgroup: subgroup}).value().length == subgroup.listables.length ? 'active' : null\\\" :disabled=\\\"subgroupingBtnDisabled(subgroup)\\\">\\n                            <input type=\\\"checkbox\\\" style=\\\"position: absolute; clip: rect(0,0,0,0); pointer-events: none;\\\">\\n                            <span class=\\\"text-md\\\">{{ subgroup.name }}</span>\\n                            <small class=\\\"text-sm text-muted block\\\" style=\\\"margin-top: -2px;\\\">({{  subgroup.total_qty  }})</small>\\n                        </button>\\n\\n                        <button v-if=\\\"display_toggle_all_buttons\\\" class=\\\"btn white btn-xs\\\" style=\\\"margin-left: 6px;\\\" @click=\\\"clickSubgroupingAll\\\" :disabled=\\\"allSubgroupingBtnDisabled(group)\\\">\\n                            <input type=\\\"checkbox\\\" style=\\\"position: absolute; clip: rect(0,0,0,0); pointer-events: none;\\\">\\n                            <span class=\\\"text-md\\\">ALL</span>\\n                            <small class=\\\"text-sm text-muted block\\\" style=\\\"margin-top: -2px;\\\">({{  group.subgroupings.length  }})</small>\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <template v-if=\\\"group_has_subgroupings\\\">\\n            <div v-if=\\\"opened.indexOf(subgroup.id) > -1\\\" v-for=\\\"subgroup in group.subgroupings\\\" class=\\\"box-size-drawer\\\" :key=\\\"subgroup.id\\\">\\n                <div class=\\\"box-divider\\\"></div>\\n                <div class=\\\"box-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-2\\\">\\n                            <a href=\\\"javascript:;\\\" @click.prevent=\\\"clickSubgroupingDrawer(group, subgroup)\\\" class=\\\" _500 drawer-toggle\\\">\\n                                {{ subgroup.name }} <span class=\\\"text-muted text-sm\\\"><i class=\\\"fa fa-angle-up\\\"></i></span>\\n                            </a>\\n                        </div>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <div class=\\\"item-box\\\">\\n                                <div class=\\\"row row-horizon\\\" style=\\\"position: relative; overflow: auto; \\\">\\n\\n                                    <div v-for=\\\"item in subgroup.listables\\\" :style=\\\"hideUnavailable &amp;&amp; item.available_qty <= 0 ? 'display: none': null\\\" :key=\\\"item.id\\\" class=\\\"col-sm-2 p-r-0 m-b-2 btn-group-prpl\\\" style=\\\"width:110px !important;\\\">\\n                                        <button @click.prevent=\\\"clickListable(subgroup, item)\\\" style=\\\"border-radius: .25rem;\\\" type=\\\"button\\\" class=\\\"btn white btn-xs\\\" :aria-pressed=\\\"_.findIndex(selected.listables, {id: item.id}) > -1\\\" :class=\\\"_.findIndex(selected.listables, {id: item.id}) > -1 ? 'active' : null\\\" :disabled=\\\"disableUnavailable &amp;&amp; item.available_qty <= 0\\\">\\n                                            <span class=\\\"item block avatar-thumbnail _80\\\">\\n                                                <img :src=\\\"item.cover_photo\\\">\\n                                            </span>\\n                                            <span class=\\\"p-a-o text-sm clearfix block\\\">\\n                                                <span class=\\\"pull-left\\\">Qty:\\n                                                    <span class=\\\"text-muted\\\">{{ useAvailableQty ? item.available_qty : item.initial_qty }}</span>\\n                                                </span>\\n                                                <span class=\\\"text-muted pull-right\\\">${{ Number(item.price_usd).toFixed(2) }}</span>\\n                                            </span>\\n                                        </button>\\n                                        <div v-if=\\\"display_footer_buttons\\\" class=\\\"clearfix\\\" style=\\\"margin-top: 5px;\\\">\\n                                            <button @click.prevent=\\\"editItemButtonClicked(item, $event)\\\" type=\\\"button\\\" class=\\\"btn btn-xs _400 pull-left white\\\">Edit</button>\\n                                            <a :href=\\\"claimRoute(item)\\\" target=\\\"_blank\\\" class=\\\"btn btn-xs _400 pull-right white\\\">Claim</a>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </template>\\n    </div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/jake/www/kabooodle/framework/resources/assets/app/components/listables/ListableGrouping.vue\"\n  module.hot.dispose(function () {\n    require(\"vueify-insert-css\").cache[\"\\n    .ps-scrollbar-x {\\n        height: 11px !important;\\n    }\\n    .ps-scrollbar-x-rail {\\n        opacity: .9 !important;\\n    }\\n\"] = false\n    document.head.removeChild(__vueify_style__)\n  })\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, module.exports.template)\n  }\n})()}\n},{\"../Spinner.vue\":47,\"babel-runtime/core-js/object/assign\":2,\"vue\":43,\"vue-hot-reload-api\":42,\"vueify-insert-css\":44}],54:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function () {\n    var intro = _intro2.default.introJs();\n    intro.setOption('tooltipPosition', 'bottom-middle-aligned');\n\n    $Bus.$on('tour:finished', function () {\n        $(document).find('.onboard-show-btn').show();\n    });\n\n    intro.onchange(function (newStep) {\n        $Bus.$emit('tour:changed', this._currentStep, newStep);\n    });\n    intro.onexit(function () {\n        $Bus.$emit('tour:finished');\n    });\n    intro.oncomplete(function () {\n        $Bus.$emit('tour:finished');\n    });\n\n    return intro;\n};\n\nvar _intro = require('intro.js');\n\nvar _intro2 = _interopRequireDefault(_intro);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n},{\"intro.js\":40}],55:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (size, color) {\n    if (browserSupportsAnimation()) {\n        var sizeclass = '';\n        switch (size) {\n            case '6':\n                sizeclass = '__size6';\n                break;\n            case '8':\n                sizeclass = '__size8';\n                break;\n            case '10':\n                sizeclass = '__size10';\n                break;\n            case '12':\n                sizeclass = '__size10';\n                break;\n            case '14':\n                sizeclass = '__size10';\n                break;\n            default:\n                sizeclass = '';\n                break;\n        }\n        var colorClass = color && color == 'white' ? '__white' : '';\n        return '<span class=\"kabooodle__spinner ' + sizeclass + ' ' + colorClass + ' \"></span>';\n    } else {\n        var src = KABOOODLE_APP.makeStaticAsset(\"assets/images/icons/ring-alt.gif\");\n        return '<img  src=\"' + src + '\" style=\"margin:-2px 2px 0 0; padding:0;\" height=\"' + size + '\" width=\"' + size + '\" >';\n    }\n};\n\n/**\n *\n * @returns {boolean}\n */\nfunction browserSupportsAnimation() {\n    var property = 'animation';\n    var elm = document.createElement('div');\n    property = property.toLowerCase();\n\n    if (elm.style[property] != undefined) return true;\n\n    var propertyNameCapital = property.charAt(0).toUpperCase() + property.substr(1),\n        domPrefixes = 'Webkit Moz ms O'.split(' ');\n\n    for (var i = 0; i < domPrefixes.length; i++) {\n        if (elm.style[domPrefixes[i] + propertyNameCapital] != undefined) return true;\n    }\n\n    return false;\n}\n\n},{}],56:[function(require,module,exports){\n'use strict';\n\n;\n/**\n *\n */\n(function ($, window, document, undefined) {\n\n    /**\n     *\n     * @param element\n     * @param options\n     * @returns {S3Uploader}\n     * @constructor\n     */\n    function S3Uploader(element, options) {\n        this.element = element;\n        this.$element = $(element);\n        this.options = $.extend({}, $.fn.s3uploader.defaults, options);\n        this.options = $.extend({}, this.options, this._parseHtmlDataAttributes(this.$element));\n        this.jqXHRCollection = [];\n        this.templateElements = {\n            progress_container: '.js-fileupload-progress',\n            progress_bar: '.progress',\n            add_file_button: '.fileinput-button',\n            file_upload_target: '.js-s3_fileupload',\n            cancel_button: '.js-cancel_button',\n            showExtendedBool: true\n        };\n        this._defaults = $.fn.s3uploader.defaults;\n        this.init();\n    }\n\n    /**\n     *\n     * @type {{init: Function, setTemplate: Function, initFileUpload: Function, setProgress: Function, buttonToggler: Function, throwException: Function, log: Function, _parseHtmlDataAttributes: Function}}\n     */\n    S3Uploader.prototype = {\n        /**\n         *\n         * @returns {S3Uploader}\n         * @private\n         */\n        init: function init() {\n            if (!$.fn.fileupload) {\n                this.throwException('missing-dependency', 'fileupload plugin required.');\n            }\n            this.setTemplate(this.options.templateEl);\n            this.initFileUpload();\n            return this;\n        },\n        /**\n         *\n         */\n        setTemplate: function setTemplate($el) {\n            this.$element.html($el ? this.$element.parent().find($el) : Template.getTemplate(this.options.multiple, this.options.button_name, this.options.extended_upload_info), true);\n        },\n        /**\n         *\n         */\n        initFileUpload: function initFileUpload() {\n            var that = this;\n            var fileUpload = {\n                url: \"\",\n                dataType: \"xml\",\n                type: \"POST\",\n                dropZone: that.options.drop_zone,\n                add: function add(e, data) {\n                    //since we are overriding the add function, in order for image-resize to work we must call the parent add()\n                    $.blueimp.fileupload.prototype.options.add.call(this, e, data);\n                    // if(!that.options.on_file_add(e, data)){\n                    //     return false;\n                    // }\n\n                    that.buttonToggler(true);\n                    that.$element.find(that.templateElements.progress_container).show();\n                    that.jqXHRCollection.push(S3.upload({\n                        Key: that.getKeyName(data),\n                        Bucket: that.options.s3_bucket,\n                        Body: data.files[0],\n                        ACL: that.options.s3_acl\n                    }, function (err, data) {\n                        if (err) {\n                            that.log('there was an error uploading the file: ', err.message);\n                        } else {\n                            that.log('file uploaded: ', data);\n                            that.buttonToggler(false);\n                            that.options.on_s3_upload(data);\n                        }\n                    }));\n                },\n                formData: {},\n                success: function success(data, textStatus, jqXHR) {\n                    that.log('file uploaded');\n                    // that.log('initiating on_s3_upload');\n                    // that.options.on_s3_upload(data, textStatus, jqXHR);\n                },\n                done: function done(e, data) {\n                    that.log('done uploading files.');\n                },\n                fail: function fail(e, data, error) {\n                    that.log('failed uploading files.');\n                    that.throwException(e.responseText, error);\n                },\n                always: function always() {},\n                progress: function progress(e, data) {\n                    if (e.isDefaultPrevented()) {\n                        return false;\n                    }\n                    var progress = Math.floor(data.loaded / data.total * 100);\n                    if (data.context) {\n                        that.setProgress(progress);\n                    }\n                },\n                stop: function stop() {\n                    that.resetProgress();\n                    that.buttonToggler(false);\n                }\n            };\n            fileUpload = $.extend(fileUpload, this.options.fileupload_options);\n            that.$element.find(that.templateElements.file_upload_target).fileupload(fileUpload);\n            $(this.templateElements.cancel_button).on('click', $.proxy(function (e) {\n                that = this;\n                that.cancelAll();\n            }, that));\n        },\n\n        getKeyName: function getKeyName(data) {\n            var that = this;\n            return 'resources/' + that.options.s3_key_payload.user + '/' + Math.floor(new Date().getTime() / 1000) + randomAlphaStr() + '_' + data.files[0].name.toLowerCase().replace(' ', '_');\n        },\n\n        /**\n         *\n         * @param percent\n         */\n        setProgress: function setProgress(percent) {\n            var that = this;\n            that.$element.find(that.templateElements.progress_bar).attr('aria-valuenow', percent).children().first().css('width', percent + '%');\n        },\n\n        /**\n         *\n         */\n        resetProgress: function resetProgress() {\n            var that = this;\n            setTimeout(function () {\n                that.$element.find(that.templateElements.progress_bar).attr('aria-valuenow', 5).children().first().css('width', '5%');\n            }, 1000);\n        },\n        /**\n         *\n         * @param enable\n         */\n        buttonToggler: function buttonToggler(enable) {\n            var that = this;\n            var addFileButton = that.$element.find(that.templateElements.add_file_button);\n            var cancelButton = that.$element.find(that.templateElements.cancel_button);\n            if (enable) {\n                addFileButton.hide();\n                cancelButton.show();\n            } else {\n                cancelButton.hide();\n                addFileButton.show();\n            }\n        },\n        cancelAll: function cancelAll() {\n            var that = this;\n            $.each(that.jqXHRCollection, function (key, jqXHR) {\n                jqXHR.abort();\n            });\n            that.buttonToggler(false);\n        },\n        /**\n         *\n         * @param exception\n         * @param error\n         */\n        throwException: function throwException(exception, error) {\n            if (typeof Bugsnag != 'undefined') {\n                Bugsnag.notify(\"S3Uploader\", exception);\n            }\n            this.log(exception + ' exception:', error);\n        },\n        /**\n         *\n         * @param title\n         * @param data\n         */\n        log: function log(title, data) {\n            if (this.options.debug) {\n                console.log('S3Uploader: ' + title);\n                console.log(data);\n            }\n        },\n        /**\n         *\n         * @param el\n         * @returns {Array}\n         * @private\n         */\n        _parseHtmlDataAttributes: function _parseHtmlDataAttributes(el) {\n            var keys = [],\n                elDataAttributes = el.data();\n            for (var key in this.options) {\n                if (this.options.hasOwnProperty(key) && elDataAttributes.hasOwnProperty(key)) {\n                    keys[key] = elDataAttributes[key];\n                }\n            }\n            return keys;\n        }\n    };\n\n    var Template = {\n        /**\n         * @param multipleBool\n         * @param customButtonName\n         * @param showExtendedBool\n         * @returns {string}\n         */\n        getTemplate: function getTemplate(multipleBool, customButtonName, showExtendedBool) {\n            var name = 'file';\n            var multiple = '';\n            var buttonName = 'Add File';\n            if (multipleBool) {\n                name = 'file';\n                multiple = ' multiple';\n                buttonName = 'Add Files';\n            }\n            if (customButtonName) {\n                buttonName = customButtonName;\n            }\n            var template = '' + '<div class=\"row\">' + '    <div class=\"col-sm-4\">' + '        <span class=\"btn btn-primary btn-sm fileinput-button\">' + '            <i class=\"fa fa-plus\"></i>&nbsp;' + buttonName + '            <input type=\"file\" name=\"' + name + '\" class=\"js-s3_fileupload\" ' + multiple + '>' + '        </span>' + '        <span class=\"btn btn-danger js-cancel_button btn-sm\" style=\"display:none;\">' + '            <i class=\"fa fa-spin fa-spinner\"></i>' + '            Cancel' + '        </span>' + '    </div>' + '    <div class=\"col-sm-8\">' + '        <div class=\"js-fileupload-progress fileupload-progress\" style=\"display:none;\">' + '            <div class=\"progress progress-striped active\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\">' + '                <div class=\"progress-bar progress-bar-success\" style=\"width:0%;\"></div>' + '            </div>';\n            if (showExtendedBool) {\n                template += '<div class=\"progress-extended\">&nbsp;</div>';\n            }\n            template += '' + '        </div>' + '    </div>' + '</div>';\n            return template;\n        }\n    };\n\n    /**\n     *\n     * @param options\n     * @returns {*}\n     */\n    $.fn.s3uploader = function (options) {\n        return this.each(function () {\n            // console.log('new uploader init');\n            return new S3Uploader(this, options);\n        });\n    };\n    $.fn.s3uploader.defaults = {\n        // required, can use $.fn.s3uploader.setDefaults({});\n        s3_key_url: '',\n        s3_bucket: '',\n        s3_acl: 'public_read',\n        // optional\n        s3_key_payload: {},\n        fileupload_options: {},\n        multiple: false,\n        debug: false,\n        optional_s3_folder: '',\n        video_tags: [],\n        extended_upload_info: true,\n        button_name: '',\n        drop_zone: '',\n        templateEl: null,\n        maxChunkSize: 10000000,\n        on_file_add: function on_file_add(element, data) {},\n        on_file_saved: function on_file_saved($element, data) {},\n        on_s3_upload: function on_s3_upload(data) {}\n    };\n    $.fn.s3uploader.setDefaults = function (options) {\n        $.each(options, function (key, val) {\n            $.fn.s3uploader.defaults[key] = val;\n        });\n    };\n})(jQuery, window, document);\n\n},{}],57:[function(require,module,exports){\n'use strict';\n\n/*\n * jQuery File Upload Image Preview & Resize Plugin\n * https://github.com/blueimp/jQuery-File-Upload\n *\n * Copyright 2013, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* jshint nomen:false */\n/* global define, require, window, Blob */\n\n;(function (factory) {\n    'use strict';\n    // if (typeof define === 'function' && define.amd) {\n    //     // Register as an anonymous AMD module:\n    //     define([\n    //         'jquery',\n    //         'load-image',\n    //         'load-image-meta',\n    //         'load-image-scale',\n    //         'load-image-exif',\n    //         'canvas-to-blob',\n    //         './jquery.fileupload-process'\n    //     ], factory);\n    // } else if (typeof exports === 'object') {\n    // Node/CommonJS:\n    //     factory(\n    //         require('jquery'),\n    //         require('blueimp-load-image/js/load-image'),\n    //         require('blueimp-load-image/js/load-image-meta'),\n    //         require('blueimp-load-image/js/load-image-scale'),\n    //         require('blueimp-load-image/js/load-image-exif'),\n    //         require('blueimp-canvas-to-blob'),\n    //         require('./jquery.fileupload-process')\n    //     );\n    // } else {\n    // Browser globals:\n\n    factory(window.jQuery, window.loadImage);\n    // }\n})(function ($, _loadImage) {\n    'use strict';\n\n    // Prepend to the default processQueue:\n\n    $.blueimp.fileupload.prototype.options.processQueue.unshift({\n        action: 'loadImageMetaData',\n        disableImageHead: '@',\n        disableExif: '@',\n        disableExifThumbnail: '@',\n        disableExifSub: '@',\n        disableExifGps: '@',\n        disabled: '@disableImageMetaDataLoad'\n    }, {\n        action: 'loadImage',\n        // Use the action as prefix for the \"@\" options:\n        prefix: true,\n        fileTypes: '@',\n        maxFileSize: '@',\n        noRevoke: '@',\n        disabled: '@disableImageLoad'\n    }, {\n        action: 'resizeImage',\n        // Use \"image\" as prefix for the \"@\" options:\n        prefix: 'image',\n        maxWidth: '@',\n        maxHeight: '@',\n        minWidth: '@',\n        minHeight: '@',\n        crop: '@',\n        orientation: '@',\n        forceResize: '@',\n        disabled: '@disableImageResize'\n    }, {\n        action: 'saveImage',\n        quality: '@imageQuality',\n        type: '@imageType',\n        disabled: '@disableImageResize'\n    }, {\n        action: 'saveImageMetaData',\n        disabled: '@disableImageMetaDataSave'\n    }, {\n        action: 'resizeImage',\n        // Use \"preview\" as prefix for the \"@\" options:\n        prefix: 'preview',\n        maxWidth: '@',\n        maxHeight: '@',\n        minWidth: '@',\n        minHeight: '@',\n        crop: '@',\n        orientation: '@',\n        thumbnail: '@',\n        canvas: '@',\n        disabled: '@disableImagePreview'\n    }, {\n        action: 'setImage',\n        name: '@imagePreviewName',\n        disabled: '@disableImagePreview'\n    }, {\n        action: 'deleteImageReferences',\n        disabled: '@disableImageReferencesDeletion'\n    });\n\n    // The File Upload Resize plugin extends the fileupload widget\n    // with image resize functionality:\n    $.widget('blueimp.fileupload', $.blueimp.fileupload, {\n\n        options: {\n            // The regular expression for the types of images to load:\n            // matched against the file type:\n            loadImageFileTypes: /^image\\/(gif|jpeg|png|svg\\+xml)$/,\n            // The maximum file size of images to load:\n            loadImageMaxFileSize: 10000000, // 10MB\n            // The maximum width of resized images:\n            imageMaxWidth: 1920,\n            // The maximum height of resized images:\n            imageMaxHeight: 1080,\n            // Defines the image orientation (1-8) or takes the orientation\n            // value from Exif data if set to true:\n            imageOrientation: false,\n            // Define if resized images should be cropped or only scaled:\n            imageCrop: false,\n            // Disable the resize image functionality by default:\n            disableImageResize: true,\n            // The maximum width of the preview images:\n            previewMaxWidth: 80,\n            // The maximum height of the preview images:\n            previewMaxHeight: 80,\n            // Defines the preview orientation (1-8) or takes the orientation\n            // value from Exif data if set to true:\n            previewOrientation: true,\n            // Create the preview using the Exif data thumbnail:\n            previewThumbnail: true,\n            // Define if preview images should be cropped or only scaled:\n            previewCrop: false,\n            // Define if preview images should be resized as canvas elements:\n            previewCanvas: true\n        },\n\n        processActions: {\n\n            // Loads the image given via data.files and data.index\n            // as img element, if the browser supports the File API.\n            // Accepts the options fileTypes (regular expression)\n            // and maxFileSize (integer) to limit the files to load:\n            loadImage: function loadImage(data, options) {\n                if (options.disabled) {\n                    return data;\n                }\n                var that = this,\n                    file = data.files[data.index],\n                    dfd = $.Deferred();\n                if ($.type(options.maxFileSize) === 'number' && file.size > options.maxFileSize || options.fileTypes && !options.fileTypes.test(file.type) || !_loadImage(file, function (img) {\n                    if (img.src) {\n                        data.img = img;\n                    }\n                    dfd.resolveWith(that, [data]);\n                }, options)) {\n                    return data;\n                }\n                return dfd.promise();\n            },\n\n            // Resizes the image given as data.canvas or data.img\n            // and updates data.canvas or data.img with the resized image.\n            // Also stores the resized image as preview property.\n            // Accepts the options maxWidth, maxHeight, minWidth,\n            // minHeight, canvas and crop:\n            resizeImage: function resizeImage(data, options) {\n                if (options.disabled || !(data.canvas || data.img)) {\n                    return data;\n                }\n                options = $.extend({ canvas: true }, options);\n                var that = this,\n                    dfd = $.Deferred(),\n                    img = options.canvas && data.canvas || data.img,\n                    resolve = function resolve(newImg) {\n                    if (newImg && (newImg.width !== img.width || newImg.height !== img.height || options.forceResize)) {\n                        data[newImg.getContext ? 'canvas' : 'img'] = newImg;\n                    }\n                    data.preview = newImg;\n                    dfd.resolveWith(that, [data]);\n                },\n                    thumbnail;\n                if (data.exif) {\n                    if (options.orientation === true) {\n                        options.orientation = data.exif.get('Orientation');\n                    }\n                    if (options.thumbnail) {\n                        thumbnail = data.exif.get('Thumbnail');\n                        if (thumbnail) {\n                            _loadImage(thumbnail, resolve, options);\n                            return dfd.promise();\n                        }\n                    }\n                    // Prevent orienting the same image twice:\n                    if (data.orientation) {\n                        delete options.orientation;\n                    } else {\n                        data.orientation = options.orientation;\n                    }\n                }\n                if (img) {\n                    resolve(_loadImage.scale(img, options));\n                    return dfd.promise();\n                }\n                return data;\n            },\n\n            // Saves the processed image given as data.canvas\n            // inplace at data.index of data.files:\n            saveImage: function saveImage(data, options) {\n                if (!data.canvas || options.disabled) {\n                    return data;\n                }\n                var that = this,\n                    file = data.files[data.index],\n                    dfd = $.Deferred();\n                if (data.canvas.toBlob) {\n                    data.canvas.toBlob(function (blob) {\n                        if (!blob.name) {\n                            if (file.type === blob.type) {\n                                blob.name = file.name;\n                            } else if (file.name) {\n                                blob.name = file.name.replace(/\\.\\w+$/, '.' + blob.type.substr(6));\n                            }\n                        }\n                        // Don't restore invalid meta data:\n                        if (file.type !== blob.type) {\n                            delete data.imageHead;\n                        }\n                        // Store the created blob at the position\n                        // of the original file in the files list:\n                        data.files[data.index] = blob;\n                        dfd.resolveWith(that, [data]);\n                    }, options.type || file.type, options.quality);\n                } else {\n                    return data;\n                }\n                return dfd.promise();\n            },\n\n            loadImageMetaData: function loadImageMetaData(data, options) {\n                if (options.disabled) {\n                    return data;\n                }\n                var that = this,\n                    dfd = $.Deferred();\n                _loadImage.parseMetaData(data.files[data.index], function (result) {\n                    $.extend(data, result);\n                    dfd.resolveWith(that, [data]);\n                }, options);\n                return dfd.promise();\n            },\n\n            saveImageMetaData: function saveImageMetaData(data, options) {\n                if (!(data.imageHead && data.canvas && data.canvas.toBlob && !options.disabled)) {\n                    return data;\n                }\n                var file = data.files[data.index],\n                    blob = new Blob([data.imageHead,\n                // Resized images always have a head size of 20 bytes,\n                // including the JPEG marker and a minimal JFIF header:\n                this._blobSlice.call(file, 20)], { type: file.type });\n                blob.name = file.name;\n                data.files[data.index] = blob;\n                return data;\n            },\n\n            // Sets the resized version of the image as a property of the\n            // file object, must be called after \"saveImage\":\n            setImage: function setImage(data, options) {\n                if (data.preview && !options.disabled) {\n                    data.files[data.index][options.name || 'preview'] = data.preview;\n                }\n                return data;\n            },\n\n            deleteImageReferences: function deleteImageReferences(data, options) {\n                if (!options.disabled) {\n                    delete data.img;\n                    delete data.canvas;\n                    delete data.preview;\n                    delete data.imageHead;\n                }\n                return data;\n            }\n\n        }\n\n    });\n});\n\n},{}],58:[function(require,module,exports){\n'use strict';\n\n/*\n * jQuery File Upload Processing Plugin\n * https://github.com/blueimp/jQuery-File-Upload\n *\n * Copyright 2012, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* jshint nomen:false */\n/* global define, require, window */\n\n;(function (factory) {\n    'use strict';\n    // if (typeof define === 'function' && define.amd) {\n    //     // Register as an anonymous AMD module:\n    //     define([\n    //         'jquery',\n    //         './jquery.fileupload'\n    //     ], factory);\n    // } else if (typeof exports === 'object') {\n    //     // Node/CommonJS:\n    //     factory(\n    //         require('jquery'),\n    //         require('./jquery.fileupload')\n    //     );\n    // } else {\n    // Browser globals:\n\n    factory(window.jQuery);\n    // }\n})(function ($) {\n    'use strict';\n\n    var originalAdd = $.blueimp.fileupload.prototype.options.add;\n\n    // The File Upload Processing plugin extends the fileupload widget\n    // with file processing functionality:\n    $.widget('blueimp.fileupload', $.blueimp.fileupload, {\n\n        options: {\n            // The list of processing actions:\n            processQueue: [\n                /*\n                 {\n                 action: 'log',\n                 type: 'debug'\n                 }\n                 */\n            ],\n            add: function add(e, data) {\n                var $this = $(this);\n                data.process(function () {\n                    return $this.fileupload('process', data);\n                });\n                originalAdd.call(this, e, data);\n            }\n        },\n\n        processActions: {\n            /*\n             log: function (data, options) {\n             console[options.type](\n             'Processing \"' + data.files[data.index].name + '\"'\n             );\n             }\n             */\n        },\n\n        _processFile: function _processFile(data, originalData) {\n            var that = this,\n                dfd = $.Deferred().resolveWith(that, [data]),\n                chain = dfd.promise();\n            this._trigger('process', null, data);\n            $.each(data.processQueue, function (i, settings) {\n                var func = function func(data) {\n                    if (originalData.errorThrown) {\n                        return $.Deferred().rejectWith(that, [originalData]).promise();\n                    }\n                    return that.processActions[settings.action].call(that, data, settings);\n                };\n                chain = chain.then(func, settings.always && func);\n            });\n            chain.done(function () {\n                that._trigger('processdone', null, data);\n                that._trigger('processalways', null, data);\n            }).fail(function () {\n                that._trigger('processfail', null, data);\n                that._trigger('processalways', null, data);\n            });\n            return chain;\n        },\n\n        // Replaces the settings of each processQueue item that\n        // are strings starting with an \"@\", using the remaining\n        // substring as key for the option map,\n        // e.g. \"@autoUpload\" is replaced with options.autoUpload:\n        _transformProcessQueue: function _transformProcessQueue(options) {\n            var processQueue = [];\n            $.each(options.processQueue, function () {\n                var settings = {},\n                    action = this.action,\n                    prefix = this.prefix === true ? action : this.prefix;\n                $.each(this, function (key, value) {\n                    if ($.type(value) === 'string' && value.charAt(0) === '@') {\n                        settings[key] = options[value.slice(1) || (prefix ? prefix + key.charAt(0).toUpperCase() + key.slice(1) : key)];\n                    } else {\n                        settings[key] = value;\n                    }\n                });\n                processQueue.push(settings);\n            });\n            options.processQueue = processQueue;\n        },\n\n        // Returns the number of files currently in the processsing queue:\n        processing: function processing() {\n            return this._processing;\n        },\n\n        // Processes the files given as files property of the data parameter,\n        // returns a Promise object that allows to bind callbacks:\n        process: function process(data) {\n            var that = this,\n                options = $.extend({}, this.options, data);\n            if (options.processQueue && options.processQueue.length) {\n                this._transformProcessQueue(options);\n                if (this._processing === 0) {\n                    this._trigger('processstart');\n                }\n                $.each(data.files, function (index) {\n                    var opts = index ? $.extend({}, options) : options,\n                        func = function func() {\n                        if (data.errorThrown) {\n                            return $.Deferred().rejectWith(that, [data]).promise();\n                        }\n                        return that._processFile(opts, data);\n                    };\n                    opts.index = index;\n                    that._processing += 1;\n                    that._processingQueue = that._processingQueue.then(func, func).always(function () {\n                        that._processing -= 1;\n                        if (that._processing === 0) {\n                            that._trigger('processstop');\n                        }\n                    });\n                });\n            }\n            return this._processingQueue;\n        },\n\n        _create: function _create() {\n            this._super();\n            this._processing = 0;\n            this._processingQueue = $.Deferred().resolveWith(this).promise();\n        }\n\n    });\n});\n\n},{}],59:[function(require,module,exports){\n'use strict';\n\n/*\n * jQuery File Upload User Interface Plugin\n * https://github.com/blueimp/jQuery-File-Upload\n *\n * Copyright 2010, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* jshint nomen:false */\n/* global define, require, window */\n\n;(function (factory) {\n    'use strict';\n    // if (typeof define === 'function' && define.amd) {\n    //     // Register as an anonymous AMD module:\n    //     define([\n    //         'jquery',\n    //         'blueimp-tmpl',\n    //         './jquery.fileupload-image',\n    //         './jquery.fileupload-audio',\n    //         './jquery.fileupload-video',\n    //         './jquery.fileupload-validate'\n    //     ], factory);\n    // } else if (typeof exports === 'object') {\n    // Node/CommonJS:\n    //     factory(\n    //         require('jquery'),\n    //         require('blueimp-tmpl'),\n    //         require('./jquery.fileupload-image'),\n    //         require('./jquery.fileupload-video'),\n    //         require('./jquery.fileupload-validate')\n    //     );\n    // } else {\n    // Browser globals:\n\n    factory(window.jQuery, window.tmpl);\n    // }\n})(function ($, tmpl) {\n    'use strict';\n\n    $.blueimp.fileupload.prototype._specialOptions.push('filesContainer', 'uploadTemplateId', 'downloadTemplateId');\n\n    // The UI version extends the file upload widget\n    // and adds complete user interface interaction:\n    $.widget('blueimp.fileupload', $.blueimp.fileupload, {\n\n        options: {\n            // By default, files added to the widget are uploaded as soon\n            // as the user clicks on the start buttons. To enable automatic\n            // uploads, set the following option to true:\n            autoUpload: false,\n            // The ID of the upload template:\n            uploadTemplateId: 'template-upload',\n            // The ID of the download template:\n            downloadTemplateId: 'template-download',\n            // The container for the list of files. If undefined, it is set to\n            // an element with class \"files\" inside of the widget element:\n            filesContainer: undefined,\n            // By default, files are appended to the files container.\n            // Set the following option to true, to prepend files instead:\n            prependFiles: false,\n            // The expected data type of the upload response, sets the dataType\n            // option of the $.ajax upload requests:\n            dataType: 'json',\n\n            // Error and info messages:\n            messages: {\n                unknownError: 'Unknown error'\n            },\n\n            // Function returning the current number of files,\n            // used by the maxNumberOfFiles validation:\n            getNumberOfFiles: function getNumberOfFiles() {\n                return this.filesContainer.children().not('.processing').length;\n            },\n\n            // Callback to retrieve the list of files from the server response:\n            getFilesFromResponse: function getFilesFromResponse(data) {\n                if (data.result && $.isArray(data.result.files)) {\n                    return data.result.files;\n                }\n                return [];\n            },\n\n            // The add callback is invoked as soon as files are added to the fileupload\n            // widget (via file input selection, drag & drop or add API call).\n            // See the basic file upload widget for more information:\n            add: function add(e, data) {\n                if (e.isDefaultPrevented()) {\n                    return false;\n                }\n                var $this = $(this),\n                    that = $this.data('blueimp-fileupload') || $this.data('fileupload'),\n                    options = that.options;\n                data.context = that._renderUpload(data.files).data('data', data).addClass('processing');\n                options.filesContainer[options.prependFiles ? 'prepend' : 'append'](data.context);\n                that._forceReflow(data.context);\n                that._transition(data.context);\n                data.process(function () {\n                    return $this.fileupload('process', data);\n                }).always(function () {\n                    data.context.each(function (index) {\n                        $(this).find('.size').text(that._formatFileSize(data.files[index].size));\n                    }).removeClass('processing');\n                    that._renderPreviews(data);\n                }).done(function () {\n                    data.context.find('.start').prop('disabled', false);\n                    if (that._trigger('added', e, data) !== false && (options.autoUpload || data.autoUpload) && data.autoUpload !== false) {\n                        data.submit();\n                    }\n                }).fail(function () {\n                    if (data.files.error) {\n                        data.context.each(function (index) {\n                            var error = data.files[index].error;\n                            if (error) {\n                                $(this).find('.error').text(error);\n                            }\n                        });\n                    }\n                });\n            },\n            // Callback for the start of each file upload request:\n            send: function send(e, data) {\n                if (e.isDefaultPrevented()) {\n                    return false;\n                }\n                var that = $(this).data('blueimp-fileupload') || $(this).data('fileupload');\n                if (data.context && data.dataType && data.dataType.substr(0, 6) === 'iframe') {\n                    // Iframe Transport does not support progress events.\n                    // In lack of an indeterminate progress bar, we set\n                    // the progress to 100%, showing the full animated bar:\n                    data.context.find('.progress').addClass(!$.support.transition && 'progress-animated').attr('aria-valuenow', 100).children().first().css('width', '100%');\n                }\n                return that._trigger('sent', e, data);\n            },\n            // Callback for successful uploads:\n            done: function done(e, data) {\n                if (e.isDefaultPrevented()) {\n                    return false;\n                }\n                var that = $(this).data('blueimp-fileupload') || $(this).data('fileupload'),\n                    getFilesFromResponse = data.getFilesFromResponse || that.options.getFilesFromResponse,\n                    files = getFilesFromResponse(data),\n                    template,\n                    deferred;\n                if (data.context) {\n                    data.context.each(function (index) {\n                        var file = files[index] || { error: 'Empty file upload result' };\n                        deferred = that._addFinishedDeferreds();\n                        that._transition($(this)).done(function () {\n                            var node = $(this);\n                            template = that._renderDownload([file]).replaceAll(node);\n                            that._forceReflow(template);\n                            that._transition(template).done(function () {\n                                data.context = $(this);\n                                that._trigger('completed', e, data);\n                                that._trigger('finished', e, data);\n                                deferred.resolve();\n                            });\n                        });\n                    });\n                } else {\n                    template = that._renderDownload(files)[that.options.prependFiles ? 'prependTo' : 'appendTo'](that.options.filesContainer);\n                    that._forceReflow(template);\n                    deferred = that._addFinishedDeferreds();\n                    that._transition(template).done(function () {\n                        data.context = $(this);\n                        that._trigger('completed', e, data);\n                        that._trigger('finished', e, data);\n                        deferred.resolve();\n                    });\n                }\n            },\n            // Callback for failed (abort or error) uploads:\n            fail: function fail(e, data) {\n                if (e.isDefaultPrevented()) {\n                    return false;\n                }\n                var that = $(this).data('blueimp-fileupload') || $(this).data('fileupload'),\n                    template,\n                    deferred;\n                if (data.context) {\n                    data.context.each(function (index) {\n                        if (data.errorThrown !== 'abort') {\n                            var file = data.files[index];\n                            file.error = file.error || data.errorThrown || data.i18n('unknownError');\n                            deferred = that._addFinishedDeferreds();\n                            that._transition($(this)).done(function () {\n                                var node = $(this);\n                                template = that._renderDownload([file]).replaceAll(node);\n                                that._forceReflow(template);\n                                that._transition(template).done(function () {\n                                    data.context = $(this);\n                                    that._trigger('failed', e, data);\n                                    that._trigger('finished', e, data);\n                                    deferred.resolve();\n                                });\n                            });\n                        } else {\n                            deferred = that._addFinishedDeferreds();\n                            that._transition($(this)).done(function () {\n                                $(this).remove();\n                                that._trigger('failed', e, data);\n                                that._trigger('finished', e, data);\n                                deferred.resolve();\n                            });\n                        }\n                    });\n                } else if (data.errorThrown !== 'abort') {\n                    data.context = that._renderUpload(data.files)[that.options.prependFiles ? 'prependTo' : 'appendTo'](that.options.filesContainer).data('data', data);\n                    that._forceReflow(data.context);\n                    deferred = that._addFinishedDeferreds();\n                    that._transition(data.context).done(function () {\n                        data.context = $(this);\n                        that._trigger('failed', e, data);\n                        that._trigger('finished', e, data);\n                        deferred.resolve();\n                    });\n                } else {\n                    that._trigger('failed', e, data);\n                    that._trigger('finished', e, data);\n                    that._addFinishedDeferreds().resolve();\n                }\n            },\n            // Callback for upload progress events:\n            progress: function progress(e, data) {\n                if (e.isDefaultPrevented()) {\n                    return false;\n                }\n                var progress = Math.floor(data.loaded / data.total * 100);\n                if (data.context) {\n                    data.context.each(function () {\n                        $(this).find('.progress').attr('aria-valuenow', progress).children().first().css('width', progress + '%');\n                    });\n                }\n            },\n            // Callback for global upload progress events:\n            progressall: function progressall(e, data) {\n                if (e.isDefaultPrevented()) {\n                    return false;\n                }\n                var $this = $(this),\n                    progress = Math.floor(data.loaded / data.total * 100),\n                    globalProgressNode = $this.find('.fileupload-progress'),\n                    extendedProgressNode = globalProgressNode.find('.progress-extended');\n                if (extendedProgressNode.length) {\n                    extendedProgressNode.html(($this.data('blueimp-fileupload') || $this.data('fileupload'))._renderExtendedProgress(data));\n                }\n                globalProgressNode.find('.progress').attr('aria-valuenow', progress).children().first().css('width', progress + '%');\n            },\n            // Callback for uploads start, equivalent to the global ajaxStart event:\n            start: function start(e) {\n                if (e.isDefaultPrevented()) {\n                    return false;\n                }\n                var that = $(this).data('blueimp-fileupload') || $(this).data('fileupload');\n                that._resetFinishedDeferreds();\n                that._transition($(this).find('.fileupload-progress')).done(function () {\n                    that._trigger('started', e);\n                });\n            },\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\n            stop: function stop(e) {\n                if (e.isDefaultPrevented()) {\n                    return false;\n                }\n                var that = $(this).data('blueimp-fileupload') || $(this).data('fileupload'),\n                    deferred = that._addFinishedDeferreds();\n                $.when.apply($, that._getFinishedDeferreds()).done(function () {\n                    that._trigger('stopped', e);\n                });\n                that._transition($(this).find('.fileupload-progress')).done(function () {\n                    $(this).find('.progress').attr('aria-valuenow', '0').children().first().css('width', '0%');\n                    $(this).find('.progress-extended').html('&nbsp;');\n                    deferred.resolve();\n                });\n            },\n            processstart: function processstart(e) {\n                if (e.isDefaultPrevented()) {\n                    return false;\n                }\n                $(this).addClass('fileupload-processing');\n            },\n            processstop: function processstop(e) {\n                if (e.isDefaultPrevented()) {\n                    return false;\n                }\n                $(this).removeClass('fileupload-processing');\n            },\n            // Callback for file deletion:\n            destroy: function destroy(e, data) {\n                if (e.isDefaultPrevented()) {\n                    return false;\n                }\n                var that = $(this).data('blueimp-fileupload') || $(this).data('fileupload'),\n                    removeNode = function removeNode() {\n                    that._transition(data.context).done(function () {\n                        $(this).remove();\n                        that._trigger('destroyed', e, data);\n                    });\n                };\n                if (data.url) {\n                    data.dataType = data.dataType || that.options.dataType;\n                    $.ajax(data).done(removeNode).fail(function () {\n                        that._trigger('destroyfailed', e, data);\n                    });\n                } else {\n                    removeNode();\n                }\n            }\n        },\n\n        _resetFinishedDeferreds: function _resetFinishedDeferreds() {\n            this._finishedUploads = [];\n        },\n\n        _addFinishedDeferreds: function _addFinishedDeferreds(deferred) {\n            if (!deferred) {\n                deferred = $.Deferred();\n            }\n            this._finishedUploads.push(deferred);\n            return deferred;\n        },\n\n        _getFinishedDeferreds: function _getFinishedDeferreds() {\n            return this._finishedUploads;\n        },\n\n        // Link handler, that allows to download files\n        // by drag & drop of the links to the desktop:\n        _enableDragToDesktop: function _enableDragToDesktop() {\n            var link = $(this),\n                url = link.prop('href'),\n                name = link.prop('download'),\n                type = 'application/octet-stream';\n            link.bind('dragstart', function (e) {\n                try {\n                    e.originalEvent.dataTransfer.setData('DownloadURL', [type, name, url].join(':'));\n                } catch (ignore) {}\n            });\n        },\n\n        _formatFileSize: function _formatFileSize(bytes) {\n            if (typeof bytes !== 'number') {\n                return '';\n            }\n            if (bytes >= 1000000000) {\n                return (bytes / 1000000000).toFixed(2) + ' GB';\n            }\n            if (bytes >= 1000000) {\n                return (bytes / 1000000).toFixed(2) + ' MB';\n            }\n            return (bytes / 1000).toFixed(2) + ' KB';\n        },\n\n        _formatBitrate: function _formatBitrate(bits) {\n            if (typeof bits !== 'number') {\n                return '';\n            }\n            if (bits >= 1000000000) {\n                return (bits / 1000000000).toFixed(2) + ' Gbit/s';\n            }\n            if (bits >= 1000000) {\n                return (bits / 1000000).toFixed(2) + ' Mbit/s';\n            }\n            if (bits >= 1000) {\n                return (bits / 1000).toFixed(2) + ' kbit/s';\n            }\n            return bits.toFixed(2) + ' bit/s';\n        },\n\n        _formatTime: function _formatTime(seconds) {\n            var date = new Date(seconds * 1000),\n                days = Math.floor(seconds / 86400);\n            days = days ? days + 'd ' : '';\n            return days + ('0' + date.getUTCHours()).slice(-2) + ':' + ('0' + date.getUTCMinutes()).slice(-2) + ':' + ('0' + date.getUTCSeconds()).slice(-2);\n        },\n\n        _formatPercentage: function _formatPercentage(floatValue) {\n            return (floatValue * 100).toFixed(2) + ' %';\n        },\n\n        _renderExtendedProgress: function _renderExtendedProgress(data) {\n            return this._formatBitrate(data.bitrate) + ' | ' + this._formatTime((data.total - data.loaded) * 8 / data.bitrate) + ' | ' + this._formatPercentage(data.loaded / data.total) + ' | ' + this._formatFileSize(data.loaded) + ' / ' + this._formatFileSize(data.total);\n        },\n\n        _renderTemplate: function _renderTemplate(func, files) {\n            if (!func) {\n                return $();\n            }\n            var result = func({\n                files: files,\n                formatFileSize: this._formatFileSize,\n                options: this.options\n            });\n            if (result instanceof $) {\n                return result;\n            }\n            return $(this.options.templatesContainer).html(result).children();\n        },\n\n        _renderPreviews: function _renderPreviews(data) {\n            data.context.find('.preview').each(function (index, elm) {\n                $(elm).append(data.files[index].preview);\n            });\n        },\n\n        _renderUpload: function _renderUpload(files) {\n            return this._renderTemplate(this.options.uploadTemplate, files);\n        },\n\n        _renderDownload: function _renderDownload(files) {\n            return this._renderTemplate(this.options.downloadTemplate, files).find('a[download]').each(this._enableDragToDesktop).end();\n        },\n\n        _startHandler: function _startHandler(e) {\n            e.preventDefault();\n            var button = $(e.currentTarget),\n                template = button.closest('.template-upload'),\n                data = template.data('data');\n            button.prop('disabled', true);\n            if (data && data.submit) {\n                data.submit();\n            }\n        },\n\n        _cancelHandler: function _cancelHandler(e) {\n            e.preventDefault();\n            var template = $(e.currentTarget).closest('.template-upload,.template-download'),\n                data = template.data('data') || {};\n            data.context = data.context || template;\n            if (data.abort) {\n                data.abort();\n            } else {\n                data.errorThrown = 'abort';\n                this._trigger('fail', e, data);\n            }\n        },\n\n        _deleteHandler: function _deleteHandler(e) {\n            e.preventDefault();\n            var button = $(e.currentTarget);\n            this._trigger('destroy', e, $.extend({\n                context: button.closest('.template-download'),\n                type: 'DELETE'\n            }, button.data()));\n        },\n\n        _forceReflow: function _forceReflow(node) {\n            return $.support.transition && node.length && node[0].offsetWidth;\n        },\n\n        _transition: function _transition(node) {\n            var dfd = $.Deferred();\n            if ($.support.transition && node.hasClass('fade') && node.is(':visible')) {\n                node.bind($.support.transition.end, function (e) {\n                    // Make sure we don't respond to other transitions events\n                    // in the container element, e.g. from button elements:\n                    if (e.target === node[0]) {\n                        node.unbind($.support.transition.end);\n                        dfd.resolveWith(node);\n                    }\n                }).toggleClass('in');\n            } else {\n                node.toggleClass('in');\n                dfd.resolveWith(node);\n            }\n            return dfd;\n        },\n\n        _initButtonBarEventHandlers: function _initButtonBarEventHandlers() {\n            var fileUploadButtonBar = this.element.find('.fileupload-buttonbar'),\n                filesList = this.options.filesContainer;\n            this._on(fileUploadButtonBar.find('.start'), {\n                click: function click(e) {\n                    e.preventDefault();\n                    filesList.find('.start').click();\n                }\n            });\n            this._on(fileUploadButtonBar.find('.cancel'), {\n                click: function click(e) {\n                    e.preventDefault();\n                    filesList.find('.cancel').click();\n                }\n            });\n            this._on(fileUploadButtonBar.find('.delete'), {\n                click: function click(e) {\n                    e.preventDefault();\n                    filesList.find('.toggle:checked').closest('.template-download').find('.delete').click();\n                    fileUploadButtonBar.find('.toggle').prop('checked', false);\n                }\n            });\n            this._on(fileUploadButtonBar.find('.toggle'), {\n                change: function change(e) {\n                    filesList.find('.toggle').prop('checked', $(e.currentTarget).is(':checked'));\n                }\n            });\n        },\n\n        _destroyButtonBarEventHandlers: function _destroyButtonBarEventHandlers() {\n            this._off(this.element.find('.fileupload-buttonbar').find('.start, .cancel, .delete'), 'click');\n            this._off(this.element.find('.fileupload-buttonbar .toggle'), 'change.');\n        },\n\n        _initEventHandlers: function _initEventHandlers() {\n            this._super();\n            this._on(this.options.filesContainer, {\n                'click .start': this._startHandler,\n                'click .cancel': this._cancelHandler,\n                'click .delete': this._deleteHandler\n            });\n            this._initButtonBarEventHandlers();\n        },\n\n        _destroyEventHandlers: function _destroyEventHandlers() {\n            this._destroyButtonBarEventHandlers();\n            this._off(this.options.filesContainer, 'click');\n            this._super();\n        },\n\n        _enableFileInputButton: function _enableFileInputButton() {\n            this.element.find('.fileinput-button input').prop('disabled', false).parent().removeClass('disabled');\n        },\n\n        _disableFileInputButton: function _disableFileInputButton() {\n            this.element.find('.fileinput-button input').prop('disabled', true).parent().addClass('disabled');\n        },\n\n        _initTemplates: function _initTemplates() {\n            var options = this.options;\n            options.templatesContainer = this.document[0].createElement(options.filesContainer.prop('nodeName'));\n            if (tmpl) {\n                if (options.uploadTemplateId) {\n                    options.uploadTemplate = tmpl(options.uploadTemplateId);\n                }\n                if (options.downloadTemplateId) {\n                    options.downloadTemplate = tmpl(options.downloadTemplateId);\n                }\n            }\n        },\n\n        _initFilesContainer: function _initFilesContainer() {\n            var options = this.options;\n            if (options.filesContainer === undefined) {\n                options.filesContainer = this.element.find('.files');\n            } else if (!(options.filesContainer instanceof $)) {\n                options.filesContainer = $(options.filesContainer);\n            }\n        },\n\n        _initSpecialOptions: function _initSpecialOptions() {\n            this._super();\n            this._initFilesContainer();\n            this._initTemplates();\n        },\n\n        _create: function _create() {\n            this._super();\n            this._resetFinishedDeferreds();\n            if (!$.support.fileInput) {\n                this._disableFileInputButton();\n            }\n        },\n\n        enable: function enable() {\n            var wasDisabled = false;\n            if (this.options.disabled) {\n                wasDisabled = true;\n            }\n            this._super();\n            if (wasDisabled) {\n                this.element.find('input, button').prop('disabled', false);\n                this._enableFileInputButton();\n            }\n        },\n\n        disable: function disable() {\n            if (!this.options.disabled) {\n                this.element.find('input, button').prop('disabled', true);\n                this._disableFileInputButton();\n            }\n            this._super();\n        }\n\n    });\n});\n\n},{}],60:[function(require,module,exports){\n'use strict';\n\n/*\n * jQuery File Upload Plugin\n * https://github.com/blueimp/jQuery-File-Upload\n *\n * Copyright 2010, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* jshint nomen:false */\n/* global define, require, window, document, location, Blob, FormData */\n\n;(function (factory) {\n    'use strict';\n    // if (typeof define === 'function' && define.amd) {\n    //     // Register as an anonymous AMD module:\n    //     define([\n    //         'jquery',\n    //         'jquery-ui/ui/widget'\n    //     ], factory);\n    // } else if (typeof exports === 'object') {\n    //     // Node/CommonJS:\n    //     factory(\n    //         require('jquery'),\n    //         require('./vendor/jquery.ui.widget')\n    //     );\n    // } else {\n    // Browser globals:\n\n    factory(window.jQuery);\n    // }\n})(function ($) {\n    'use strict';\n\n    // Detect file input support, based on\n    // http://viljamis.com/blog/2012/file-upload-support-on-mobile/\n\n    $.support.fileInput = !(new RegExp(\n    // Handle devices which give false positives for the feature detection:\n    '(Android (1\\\\.[0156]|2\\\\.[01]))' + '|(Windows Phone (OS 7|8\\\\.0))|(XBLWP)|(ZuneWP)|(WPDesktop)' + '|(w(eb)?OSBrowser)|(webOS)' + '|(Kindle/(1\\\\.0|2\\\\.[05]|3\\\\.0))').test(window.navigator.userAgent) ||\n    // Feature detection for all other devices:\n    $('<input type=\"file\">').prop('disabled'));\n\n    // The FileReader API is not actually used, but works as feature detection,\n    // as some Safari versions (5?) support XHR file uploads via the FormData API,\n    // but not non-multipart XHR file uploads.\n    // window.XMLHttpRequestUpload is not available on IE10, so we check for\n    // window.ProgressEvent instead to detect XHR2 file upload capability:\n    $.support.xhrFileUpload = !!(window.ProgressEvent && window.FileReader);\n    $.support.xhrFormDataFileUpload = !!window.FormData;\n\n    // Detect support for Blob slicing (required for chunked uploads):\n    $.support.blobSlice = window.Blob && (Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice);\n\n    // Helper function to create drag handlers for dragover/dragenter/dragleave:\n    function getDragHandler(type) {\n        var isDragOver = type === 'dragover';\n        return function (e) {\n            e.dataTransfer = e.originalEvent && e.originalEvent.dataTransfer;\n            var dataTransfer = e.dataTransfer;\n            if (dataTransfer && $.inArray('Files', dataTransfer.types) !== -1 && this._trigger(type, $.Event(type, { delegatedEvent: e })) !== false) {\n                e.preventDefault();\n                if (isDragOver) {\n                    dataTransfer.dropEffect = 'copy';\n                }\n            }\n        };\n    }\n\n    // The fileupload widget listens for change events on file input fields defined\n    // via fileInput setting and paste or drop events of the given dropZone.\n    // In addition to the default jQuery Widget methods, the fileupload widget\n    // exposes the \"add\" and \"send\" methods, to add or directly send files using\n    // the fileupload API.\n    // By default, files added via file input selection, paste, drag & drop or\n    // \"add\" method are uploaded immediately, but it is possible to override\n    // the \"add\" callback option to queue file uploads.\n    $.widget('blueimp.fileupload', {\n\n        options: {\n            // The drop target element(s), by the default the complete document.\n            // Set to null to disable drag & drop support:\n            dropZone: $(document),\n            // The paste target element(s), by the default undefined.\n            // Set to a DOM node or jQuery object to enable file pasting:\n            pasteZone: undefined,\n            // The file input field(s), that are listened to for change events.\n            // If undefined, it is set to the file input fields inside\n            // of the widget element on plugin initialization.\n            // Set to null to disable the change listener.\n            fileInput: undefined,\n            // By default, the file input field is replaced with a clone after\n            // each input field change event. This is required for iframe transport\n            // queues and allows change events to be fired for the same file\n            // selection, but can be disabled by setting the following option to false:\n            replaceFileInput: true,\n            // The parameter name for the file form data (the request argument name).\n            // If undefined or empty, the name property of the file input field is\n            // used, or \"files[]\" if the file input name property is also empty,\n            // can be a string or an array of strings:\n            paramName: undefined,\n            // By default, each file of a selection is uploaded using an individual\n            // request for XHR type uploads. Set to false to upload file\n            // selections in one request each:\n            singleFileUploads: true,\n            // To limit the number of files uploaded with one XHR request,\n            // set the following option to an integer greater than 0:\n            limitMultiFileUploads: undefined,\n            // The following option limits the number of files uploaded with one\n            // XHR request to keep the request size under or equal to the defined\n            // limit in bytes:\n            limitMultiFileUploadSize: undefined,\n            // Multipart file uploads add a number of bytes to each uploaded file,\n            // therefore the following option adds an overhead for each file used\n            // in the limitMultiFileUploadSize configuration:\n            limitMultiFileUploadSizeOverhead: 512,\n            // Set the following option to true to issue all file upload requests\n            // in a sequential order:\n            sequentialUploads: false,\n            // To limit the number of concurrent uploads,\n            // set the following option to an integer greater than 0:\n            limitConcurrentUploads: undefined,\n            // Set the following option to true to force iframe transport uploads:\n            forceIframeTransport: false,\n            // Set the following option to the location of a redirect url on the\n            // origin server, for cross-domain iframe transport uploads:\n            redirect: undefined,\n            // The parameter name for the redirect url, sent as part of the form\n            // data and set to 'redirect' if this option is empty:\n            redirectParamName: undefined,\n            // Set the following option to the location of a postMessage window,\n            // to enable postMessage transport uploads:\n            postMessage: undefined,\n            // By default, XHR file uploads are sent as multipart/form-data.\n            // The iframe transport is always using multipart/form-data.\n            // Set to false to enable non-multipart XHR uploads:\n            multipart: true,\n            // To upload large files in smaller chunks, set the following option\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\n            // or the browser does not support the required Blob API, files will\n            // be uploaded as a whole.\n            maxChunkSize: undefined,\n            // When a non-multipart upload or a chunked multipart upload has been\n            // aborted, this option can be used to resume the upload by setting\n            // it to the size of the already uploaded bytes. This option is most\n            // useful when modifying the options object inside of the \"add\" or\n            // \"send\" callbacks, as the options are cloned for each file upload.\n            uploadedBytes: undefined,\n            // By default, failed (abort or error) file uploads are removed from the\n            // global progress calculation. Set the following option to false to\n            // prevent recalculating the global progress data:\n            recalculateProgress: true,\n            // Interval in milliseconds to calculate and trigger progress events:\n            progressInterval: 100,\n            // Interval in milliseconds to calculate progress bitrate:\n            bitrateInterval: 500,\n            // By default, uploads are started automatically when adding files:\n            autoUpload: true,\n\n            // Error and info messages:\n            messages: {\n                uploadedBytes: 'Uploaded bytes exceed file size'\n            },\n\n            // Translation function, gets the message key to be translated\n            // and an object with context specific data as arguments:\n            i18n: function i18n(message, context) {\n                message = this.messages[message] || message.toString();\n                if (context) {\n                    $.each(context, function (key, value) {\n                        message = message.replace('{' + key + '}', value);\n                    });\n                }\n                return message;\n            },\n\n            // Additional form data to be sent along with the file uploads can be set\n            // using this option, which accepts an array of objects with name and\n            // value properties, a function returning such an array, a FormData\n            // object (for XHR file uploads), or a simple object.\n            // The form of the first fileInput is given as parameter to the function:\n            formData: function formData(form) {\n                return form.serializeArray();\n            },\n\n            // The add callback is invoked as soon as files are added to the fileupload\n            // widget (via file input selection, drag & drop, paste or add API call).\n            // If the singleFileUploads option is enabled, this callback will be\n            // called once for each file in the selection for XHR file uploads, else\n            // once for each file selection.\n            //\n            // The upload starts when the submit method is invoked on the data parameter.\n            // The data object contains a files property holding the added files\n            // and allows you to override plugin options as well as define ajax settings.\n            //\n            // Listeners for this callback can also be bound the following way:\n            // .bind('fileuploadadd', func);\n            //\n            // data.submit() returns a Promise object and allows to attach additional\n            // handlers using jQuery's Deferred callbacks:\n            // data.submit().done(func).fail(func).always(func);\n            add: function add(e, data) {\n                if (e.isDefaultPrevented()) {\n                    return false;\n                }\n                if (data.autoUpload || data.autoUpload !== false && $(this).fileupload('option', 'autoUpload')) {\n                    data.process().done(function () {\n                        data.submit();\n                    });\n                }\n            },\n\n            // Other callbacks:\n\n            // Callback for the submit event of each file upload:\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\n\n            // Callback for the start of each file upload request:\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\n\n            // Callback for successful uploads:\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\n\n            // Callback for failed (abort or error) uploads:\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\n\n            // Callback for completed (success, abort or error) requests:\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\n\n            // Callback for upload progress events:\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\n\n            // Callback for global upload progress events:\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\n\n            // Callback for uploads start, equivalent to the global ajaxStart event:\n            // start: function (e) {}, // .bind('fileuploadstart', func);\n\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\n\n            // Callback for change events of the fileInput(s):\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\n\n            // Callback for paste events to the pasteZone(s):\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\n\n            // Callback for drop events of the dropZone(s):\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\n\n            // Callback for dragover events of the dropZone(s):\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\n\n            // Callback for the start of each chunk upload request:\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\n\n            // Callback for successful chunk uploads:\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\n\n            // Callback for failed (abort or error) chunk uploads:\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\n\n            // Callback for completed (success, abort or error) chunk upload requests:\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\n\n            // The plugin options are used as settings object for the ajax calls.\n            // The following are jQuery ajax settings required for the file uploads:\n            processData: false,\n            contentType: false,\n            cache: false,\n            timeout: 0\n        },\n\n        // A list of options that require reinitializing event listeners and/or\n        // special initialization code:\n        _specialOptions: ['fileInput', 'dropZone', 'pasteZone', 'multipart', 'forceIframeTransport'],\n\n        _blobSlice: $.support.blobSlice && function () {\n            var slice = this.slice || this.webkitSlice || this.mozSlice;\n            return slice.apply(this, arguments);\n        },\n\n        _BitrateTimer: function _BitrateTimer() {\n            this.timestamp = Date.now ? Date.now() : new Date().getTime();\n            this.loaded = 0;\n            this.bitrate = 0;\n            this.getBitrate = function (now, loaded, interval) {\n                var timeDiff = now - this.timestamp;\n                if (!this.bitrate || !interval || timeDiff > interval) {\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\n                    this.loaded = loaded;\n                    this.timestamp = now;\n                }\n                return this.bitrate;\n            };\n        },\n\n        _isXHRUpload: function _isXHRUpload(options) {\n            return !options.forceIframeTransport && (!options.multipart && $.support.xhrFileUpload || $.support.xhrFormDataFileUpload);\n        },\n\n        _getFormData: function _getFormData(options) {\n            var formData;\n            if ($.type(options.formData) === 'function') {\n                return options.formData(options.form);\n            }\n            if ($.isArray(options.formData)) {\n                return options.formData;\n            }\n            if ($.type(options.formData) === 'object') {\n                formData = [];\n                $.each(options.formData, function (name, value) {\n                    formData.push({ name: name, value: value });\n                });\n                return formData;\n            }\n            return [];\n        },\n\n        _getTotal: function _getTotal(files) {\n            var total = 0;\n            $.each(files, function (index, file) {\n                total += file.size || 1;\n            });\n            return total;\n        },\n\n        _initProgressObject: function _initProgressObject(obj) {\n            var progress = {\n                loaded: 0,\n                total: 0,\n                bitrate: 0\n            };\n            if (obj._progress) {\n                $.extend(obj._progress, progress);\n            } else {\n                obj._progress = progress;\n            }\n        },\n\n        _initResponseObject: function _initResponseObject(obj) {\n            var prop;\n            if (obj._response) {\n                for (prop in obj._response) {\n                    if (obj._response.hasOwnProperty(prop)) {\n                        delete obj._response[prop];\n                    }\n                }\n            } else {\n                obj._response = {};\n            }\n        },\n\n        _onProgress: function _onProgress(e, data) {\n            if (e.lengthComputable) {\n                var now = Date.now ? Date.now() : new Date().getTime(),\n                    loaded;\n                if (data._time && data.progressInterval && now - data._time < data.progressInterval && e.loaded !== e.total) {\n                    return;\n                }\n                data._time = now;\n                loaded = Math.floor(e.loaded / e.total * (data.chunkSize || data._progress.total)) + (data.uploadedBytes || 0);\n                // Add the difference from the previously loaded state\n                // to the global loaded counter:\n                this._progress.loaded += loaded - data._progress.loaded;\n                this._progress.bitrate = this._bitrateTimer.getBitrate(now, this._progress.loaded, data.bitrateInterval);\n                data._progress.loaded = data.loaded = loaded;\n                data._progress.bitrate = data.bitrate = data._bitrateTimer.getBitrate(now, loaded, data.bitrateInterval);\n                // Trigger a custom progress event with a total data property set\n                // to the file size(s) of the current upload and a loaded data\n                // property calculated accordingly:\n                this._trigger('progress', $.Event('progress', { delegatedEvent: e }), data);\n                // Trigger a global progress event for all current file uploads,\n                // including ajax calls queued for sequential file uploads:\n                this._trigger('progressall', $.Event('progressall', { delegatedEvent: e }), this._progress);\n            }\n        },\n\n        _initProgressListener: function _initProgressListener(options) {\n            var that = this,\n                xhr = options.xhr ? options.xhr() : $.ajaxSettings.xhr();\n            // Accesss to the native XHR object is required to add event listeners\n            // for the upload progress event:\n            if (xhr.upload) {\n                $(xhr.upload).bind('progress', function (e) {\n                    var oe = e.originalEvent;\n                    // Make sure the progress event properties get copied over:\n                    e.lengthComputable = oe.lengthComputable;\n                    e.loaded = oe.loaded;\n                    e.total = oe.total;\n                    that._onProgress(e, options);\n                });\n                options.xhr = function () {\n                    return xhr;\n                };\n            }\n        },\n\n        _isInstanceOf: function _isInstanceOf(type, obj) {\n            // Cross-frame instanceof check\n            return Object.prototype.toString.call(obj) === '[object ' + type + ']';\n        },\n\n        _initXHRData: function _initXHRData(options) {\n            var that = this,\n                formData,\n                file = options.files[0],\n\n            // Ignore non-multipart setting if not supported:\n            multipart = options.multipart || !$.support.xhrFileUpload,\n                paramName = $.type(options.paramName) === 'array' ? options.paramName[0] : options.paramName;\n            options.headers = $.extend({}, options.headers);\n            if (options.contentRange) {\n                options.headers['Content-Range'] = options.contentRange;\n            }\n            if (!multipart || options.blob || !this._isInstanceOf('File', file)) {\n                options.headers['Content-Disposition'] = 'attachment; filename=\"' + encodeURI(file.name) + '\"';\n            }\n            if (!multipart) {\n                options.contentType = file.type || 'application/octet-stream';\n                options.data = options.blob || file;\n            } else if ($.support.xhrFormDataFileUpload) {\n                if (options.postMessage) {\n                    // window.postMessage does not allow sending FormData\n                    // objects, so we just add the File/Blob objects to\n                    // the formData array and let the postMessage window\n                    // create the FormData object out of this array:\n                    formData = this._getFormData(options);\n                    if (options.blob) {\n                        formData.push({\n                            name: paramName,\n                            value: options.blob\n                        });\n                    } else {\n                        $.each(options.files, function (index, file) {\n                            formData.push({\n                                name: $.type(options.paramName) === 'array' && options.paramName[index] || paramName,\n                                value: file\n                            });\n                        });\n                    }\n                } else {\n                    if (that._isInstanceOf('FormData', options.formData)) {\n                        formData = options.formData;\n                    } else {\n                        formData = new FormData();\n                        $.each(this._getFormData(options), function (index, field) {\n                            formData.append(field.name, field.value);\n                        });\n                    }\n                    if (options.blob) {\n                        formData.append(paramName, options.blob, file.name);\n                    } else {\n                        $.each(options.files, function (index, file) {\n                            // This check allows the tests to run with\n                            // dummy objects:\n                            if (that._isInstanceOf('File', file) || that._isInstanceOf('Blob', file)) {\n                                formData.append($.type(options.paramName) === 'array' && options.paramName[index] || paramName, file, file.uploadName || file.name);\n                            }\n                        });\n                    }\n                }\n                options.data = formData;\n            }\n            // Blob reference is not needed anymore, free memory:\n            options.blob = null;\n        },\n\n        _initIframeSettings: function _initIframeSettings(options) {\n            var targetHost = $('<a></a>').prop('href', options.url).prop('host');\n            // Setting the dataType to iframe enables the iframe transport:\n            options.dataType = 'iframe ' + (options.dataType || '');\n            // The iframe transport accepts a serialized array as form data:\n            options.formData = this._getFormData(options);\n            // Add redirect url to form data on cross-domain uploads:\n            if (options.redirect && targetHost && targetHost !== location.host) {\n                options.formData.push({\n                    name: options.redirectParamName || 'redirect',\n                    value: options.redirect\n                });\n            }\n        },\n\n        _initDataSettings: function _initDataSettings(options) {\n            if (this._isXHRUpload(options)) {\n                if (!this._chunkedUpload(options, true)) {\n                    if (!options.data) {\n                        this._initXHRData(options);\n                    }\n                    this._initProgressListener(options);\n                }\n                if (options.postMessage) {\n                    // Setting the dataType to postmessage enables the\n                    // postMessage transport:\n                    options.dataType = 'postmessage ' + (options.dataType || '');\n                }\n            } else {\n                this._initIframeSettings(options);\n            }\n        },\n\n        _getParamName: function _getParamName(options) {\n            var fileInput = $(options.fileInput),\n                paramName = options.paramName;\n            if (!paramName) {\n                paramName = [];\n                fileInput.each(function () {\n                    var input = $(this),\n                        name = input.prop('name') || 'files[]',\n                        i = (input.prop('files') || [1]).length;\n                    while (i) {\n                        paramName.push(name);\n                        i -= 1;\n                    }\n                });\n                if (!paramName.length) {\n                    paramName = [fileInput.prop('name') || 'files[]'];\n                }\n            } else if (!$.isArray(paramName)) {\n                paramName = [paramName];\n            }\n            return paramName;\n        },\n\n        _initFormSettings: function _initFormSettings(options) {\n            // Retrieve missing options from the input field and the\n            // associated form, if available:\n            if (!options.form || !options.form.length) {\n                options.form = $(options.fileInput.prop('form'));\n                // If the given file input doesn't have an associated form,\n                // use the default widget file input's form:\n                if (!options.form.length) {\n                    options.form = $(this.options.fileInput.prop('form'));\n                }\n            }\n            options.paramName = this._getParamName(options);\n            if (!options.url) {\n                options.url = options.form.prop('action') || location.href;\n            }\n            // The HTTP request method must be \"POST\" or \"PUT\":\n            options.type = (options.type || $.type(options.form.prop('method')) === 'string' && options.form.prop('method') || '').toUpperCase();\n            if (options.type !== 'POST' && options.type !== 'PUT' && options.type !== 'PATCH') {\n                options.type = 'POST';\n            }\n            if (!options.formAcceptCharset) {\n                options.formAcceptCharset = options.form.attr('accept-charset');\n            }\n        },\n\n        _getAJAXSettings: function _getAJAXSettings(data) {\n            var options = $.extend({}, this.options, data);\n            this._initFormSettings(options);\n            this._initDataSettings(options);\n            return options;\n        },\n\n        // jQuery 1.6 doesn't provide .state(),\n        // while jQuery 1.8+ removed .isRejected() and .isResolved():\n        _getDeferredState: function _getDeferredState(deferred) {\n            if (deferred.state) {\n                return deferred.state();\n            }\n            if (deferred.isResolved()) {\n                return 'resolved';\n            }\n            if (deferred.isRejected()) {\n                return 'rejected';\n            }\n            return 'pending';\n        },\n\n        // Maps jqXHR callbacks to the equivalent\n        // methods of the given Promise object:\n        _enhancePromise: function _enhancePromise(promise) {\n            promise.success = promise.done;\n            promise.error = promise.fail;\n            promise.complete = promise.always;\n            return promise;\n        },\n\n        // Creates and returns a Promise object enhanced with\n        // the jqXHR methods abort, success, error and complete:\n        _getXHRPromise: function _getXHRPromise(resolveOrReject, context, args) {\n            var dfd = $.Deferred(),\n                promise = dfd.promise();\n            context = context || this.options.context || promise;\n            if (resolveOrReject === true) {\n                dfd.resolveWith(context, args);\n            } else if (resolveOrReject === false) {\n                dfd.rejectWith(context, args);\n            }\n            promise.abort = dfd.promise;\n            return this._enhancePromise(promise);\n        },\n\n        // Adds convenience methods to the data callback argument:\n        _addConvenienceMethods: function _addConvenienceMethods(e, data) {\n            var that = this,\n                getPromise = function getPromise(args) {\n                return $.Deferred().resolveWith(that, args).promise();\n            };\n            data.process = function (resolveFunc, rejectFunc) {\n                if (resolveFunc || rejectFunc) {\n                    data._processQueue = this._processQueue = (this._processQueue || getPromise([this])).then(function () {\n                        if (data.errorThrown) {\n                            return $.Deferred().rejectWith(that, [data]).promise();\n                        }\n                        return getPromise(arguments);\n                    }).then(resolveFunc, rejectFunc);\n                }\n                return this._processQueue || getPromise([this]);\n            };\n            data.submit = function () {\n                if (this.state() !== 'pending') {\n                    data.jqXHR = this.jqXHR = that._trigger('submit', $.Event('submit', { delegatedEvent: e }), this) !== false && that._onSend(e, this);\n                }\n                return this.jqXHR || that._getXHRPromise();\n            };\n            data.abort = function () {\n                if (this.jqXHR) {\n                    return this.jqXHR.abort();\n                }\n                this.errorThrown = 'abort';\n                that._trigger('fail', null, this);\n                return that._getXHRPromise(false);\n            };\n            data.state = function () {\n                if (this.jqXHR) {\n                    return that._getDeferredState(this.jqXHR);\n                }\n                if (this._processQueue) {\n                    return that._getDeferredState(this._processQueue);\n                }\n            };\n            data.processing = function () {\n                return !this.jqXHR && this._processQueue && that._getDeferredState(this._processQueue) === 'pending';\n            };\n            data.progress = function () {\n                return this._progress;\n            };\n            data.response = function () {\n                return this._response;\n            };\n        },\n\n        // Parses the Range header from the server response\n        // and returns the uploaded bytes:\n        _getUploadedBytes: function _getUploadedBytes(jqXHR) {\n            var range = jqXHR.getResponseHeader('Range'),\n                parts = range && range.split('-'),\n                upperBytesPos = parts && parts.length > 1 && parseInt(parts[1], 10);\n            return upperBytesPos && upperBytesPos + 1;\n        },\n\n        // Uploads a file in multiple, sequential requests\n        // by splitting the file up in multiple blob chunks.\n        // If the second parameter is true, only tests if the file\n        // should be uploaded in chunks, but does not invoke any\n        // upload requests:\n        _chunkedUpload: function _chunkedUpload(options, testOnly) {\n            options.uploadedBytes = options.uploadedBytes || 0;\n            var that = this,\n                file = options.files[0],\n                fs = file.size,\n                ub = options.uploadedBytes,\n                mcs = options.maxChunkSize || fs,\n                slice = this._blobSlice,\n                dfd = $.Deferred(),\n                promise = dfd.promise(),\n                jqXHR,\n                _upload;\n            if (!(this._isXHRUpload(options) && slice && (ub || mcs < fs)) || options.data) {\n                return false;\n            }\n            if (testOnly) {\n                return true;\n            }\n            if (ub >= fs) {\n                file.error = options.i18n('uploadedBytes');\n                return this._getXHRPromise(false, options.context, [null, 'error', file.error]);\n            }\n            // The chunk upload method:\n            _upload = function upload() {\n                // Clone the options object for each chunk upload:\n                var o = $.extend({}, options),\n                    currentLoaded = o._progress.loaded;\n                o.blob = slice.call(file, ub, ub + mcs, file.type);\n                // Store the current chunk size, as the blob itself\n                // will be dereferenced after data processing:\n                o.chunkSize = o.blob.size;\n                // Expose the chunk bytes position range:\n                o.contentRange = 'bytes ' + ub + '-' + (ub + o.chunkSize - 1) + '/' + fs;\n                // Process the upload data (the blob and potential form data):\n                that._initXHRData(o);\n                // Add progress listeners for this chunk upload:\n                that._initProgressListener(o);\n                jqXHR = (that._trigger('chunksend', null, o) !== false && $.ajax(o) || that._getXHRPromise(false, o.context)).done(function (result, textStatus, jqXHR) {\n                    ub = that._getUploadedBytes(jqXHR) || ub + o.chunkSize;\n                    // Create a progress event if no final progress event\n                    // with loaded equaling total has been triggered\n                    // for this chunk:\n                    if (currentLoaded + o.chunkSize - o._progress.loaded) {\n                        that._onProgress($.Event('progress', {\n                            lengthComputable: true,\n                            loaded: ub - o.uploadedBytes,\n                            total: ub - o.uploadedBytes\n                        }), o);\n                    }\n                    options.uploadedBytes = o.uploadedBytes = ub;\n                    o.result = result;\n                    o.textStatus = textStatus;\n                    o.jqXHR = jqXHR;\n                    that._trigger('chunkdone', null, o);\n                    that._trigger('chunkalways', null, o);\n                    if (ub < fs) {\n                        // File upload not yet complete,\n                        // continue with the next chunk:\n                        _upload();\n                    } else {\n                        dfd.resolveWith(o.context, [result, textStatus, jqXHR]);\n                    }\n                }).fail(function (jqXHR, textStatus, errorThrown) {\n                    o.jqXHR = jqXHR;\n                    o.textStatus = textStatus;\n                    o.errorThrown = errorThrown;\n                    that._trigger('chunkfail', null, o);\n                    that._trigger('chunkalways', null, o);\n                    dfd.rejectWith(o.context, [jqXHR, textStatus, errorThrown]);\n                });\n            };\n            this._enhancePromise(promise);\n            promise.abort = function () {\n                return jqXHR.abort();\n            };\n            _upload();\n            return promise;\n        },\n\n        _beforeSend: function _beforeSend(e, data) {\n            if (this._active === 0) {\n                // the start callback is triggered when an upload starts\n                // and no other uploads are currently running,\n                // equivalent to the global ajaxStart event:\n                this._trigger('start');\n                // Set timer for global bitrate progress calculation:\n                this._bitrateTimer = new this._BitrateTimer();\n                // Reset the global progress values:\n                this._progress.loaded = this._progress.total = 0;\n                this._progress.bitrate = 0;\n            }\n            // Make sure the container objects for the .response() and\n            // .progress() methods on the data object are available\n            // and reset to their initial state:\n            this._initResponseObject(data);\n            this._initProgressObject(data);\n            data._progress.loaded = data.loaded = data.uploadedBytes || 0;\n            data._progress.total = data.total = this._getTotal(data.files) || 1;\n            data._progress.bitrate = data.bitrate = 0;\n            this._active += 1;\n            // Initialize the global progress values:\n            this._progress.loaded += data.loaded;\n            this._progress.total += data.total;\n        },\n\n        _onDone: function _onDone(result, textStatus, jqXHR, options) {\n            var total = options._progress.total,\n                response = options._response;\n            if (options._progress.loaded < total) {\n                // Create a progress event if no final progress event\n                // with loaded equaling total has been triggered:\n                this._onProgress($.Event('progress', {\n                    lengthComputable: true,\n                    loaded: total,\n                    total: total\n                }), options);\n            }\n            response.result = options.result = result;\n            response.textStatus = options.textStatus = textStatus;\n            response.jqXHR = options.jqXHR = jqXHR;\n            this._trigger('done', null, options);\n        },\n\n        _onFail: function _onFail(jqXHR, textStatus, errorThrown, options) {\n            var response = options._response;\n            if (options.recalculateProgress) {\n                // Remove the failed (error or abort) file upload from\n                // the global progress calculation:\n                this._progress.loaded -= options._progress.loaded;\n                this._progress.total -= options._progress.total;\n            }\n            response.jqXHR = options.jqXHR = jqXHR;\n            response.textStatus = options.textStatus = textStatus;\n            response.errorThrown = options.errorThrown = errorThrown;\n            this._trigger('fail', null, options);\n        },\n\n        _onAlways: function _onAlways(jqXHRorResult, textStatus, jqXHRorError, options) {\n            // jqXHRorResult, textStatus and jqXHRorError are added to the\n            // options object via done and fail callbacks\n            this._trigger('always', null, options);\n        },\n\n        _onSend: function _onSend(e, data) {\n            if (!data.submit) {\n                this._addConvenienceMethods(e, data);\n            }\n            var that = this,\n                jqXHR,\n                aborted,\n                slot,\n                pipe,\n                options = that._getAJAXSettings(data),\n                send = function send() {\n                that._sending += 1;\n                // Set timer for bitrate progress calculation:\n                options._bitrateTimer = new that._BitrateTimer();\n                jqXHR = jqXHR || ((aborted || that._trigger('send', $.Event('send', { delegatedEvent: e }), options) === false) && that._getXHRPromise(false, options.context, aborted) || that._chunkedUpload(options) || $.ajax(options)).done(function (result, textStatus, jqXHR) {\n                    that._onDone(result, textStatus, jqXHR, options);\n                }).fail(function (jqXHR, textStatus, errorThrown) {\n                    that._onFail(jqXHR, textStatus, errorThrown, options);\n                }).always(function (jqXHRorResult, textStatus, jqXHRorError) {\n                    that._onAlways(jqXHRorResult, textStatus, jqXHRorError, options);\n                    that._sending -= 1;\n                    that._active -= 1;\n                    if (options.limitConcurrentUploads && options.limitConcurrentUploads > that._sending) {\n                        // Start the next queued upload,\n                        // that has not been aborted:\n                        var nextSlot = that._slots.shift();\n                        while (nextSlot) {\n                            if (that._getDeferredState(nextSlot) === 'pending') {\n                                nextSlot.resolve();\n                                break;\n                            }\n                            nextSlot = that._slots.shift();\n                        }\n                    }\n                    if (that._active === 0) {\n                        // The stop callback is triggered when all uploads have\n                        // been completed, equivalent to the global ajaxStop event:\n                        that._trigger('stop');\n                    }\n                });\n                return jqXHR;\n            };\n            this._beforeSend(e, options);\n            if (this.options.sequentialUploads || this.options.limitConcurrentUploads && this.options.limitConcurrentUploads <= this._sending) {\n                if (this.options.limitConcurrentUploads > 1) {\n                    slot = $.Deferred();\n                    this._slots.push(slot);\n                    pipe = slot.then(send);\n                } else {\n                    this._sequence = this._sequence.then(send, send);\n                    pipe = this._sequence;\n                }\n                // Return the piped Promise object, enhanced with an abort method,\n                // which is delegated to the jqXHR object of the current upload,\n                // and jqXHR callbacks mapped to the equivalent Promise methods:\n                pipe.abort = function () {\n                    aborted = [undefined, 'abort', 'abort'];\n                    if (!jqXHR) {\n                        if (slot) {\n                            slot.rejectWith(options.context, aborted);\n                        }\n                        return send();\n                    }\n                    return jqXHR.abort();\n                };\n                return this._enhancePromise(pipe);\n            }\n            return send();\n        },\n\n        _onAdd: function _onAdd(e, data) {\n            var that = this,\n                result = true,\n                options = $.extend({}, this.options, data),\n                files = data.files,\n                filesLength = files.length,\n                limit = options.limitMultiFileUploads,\n                limitSize = options.limitMultiFileUploadSize,\n                overhead = options.limitMultiFileUploadSizeOverhead,\n                batchSize = 0,\n                paramName = this._getParamName(options),\n                paramNameSet,\n                paramNameSlice,\n                fileSet,\n                i,\n                j = 0;\n            if (!filesLength) {\n                return false;\n            }\n            if (limitSize && files[0].size === undefined) {\n                limitSize = undefined;\n            }\n            if (!(options.singleFileUploads || limit || limitSize) || !this._isXHRUpload(options)) {\n                fileSet = [files];\n                paramNameSet = [paramName];\n            } else if (!(options.singleFileUploads || limitSize) && limit) {\n                fileSet = [];\n                paramNameSet = [];\n                for (i = 0; i < filesLength; i += limit) {\n                    fileSet.push(files.slice(i, i + limit));\n                    paramNameSlice = paramName.slice(i, i + limit);\n                    if (!paramNameSlice.length) {\n                        paramNameSlice = paramName;\n                    }\n                    paramNameSet.push(paramNameSlice);\n                }\n            } else if (!options.singleFileUploads && limitSize) {\n                fileSet = [];\n                paramNameSet = [];\n                for (i = 0; i < filesLength; i = i + 1) {\n                    batchSize += files[i].size + overhead;\n                    if (i + 1 === filesLength || batchSize + files[i + 1].size + overhead > limitSize || limit && i + 1 - j >= limit) {\n                        fileSet.push(files.slice(j, i + 1));\n                        paramNameSlice = paramName.slice(j, i + 1);\n                        if (!paramNameSlice.length) {\n                            paramNameSlice = paramName;\n                        }\n                        paramNameSet.push(paramNameSlice);\n                        j = i + 1;\n                        batchSize = 0;\n                    }\n                }\n            } else {\n                paramNameSet = paramName;\n            }\n            data.originalFiles = files;\n            $.each(fileSet || files, function (index, element) {\n                var newData = $.extend({}, data);\n                newData.files = fileSet ? element : [element];\n                newData.paramName = paramNameSet[index];\n                that._initResponseObject(newData);\n                that._initProgressObject(newData);\n                that._addConvenienceMethods(e, newData);\n                result = that._trigger('add', $.Event('add', { delegatedEvent: e }), newData);\n                return result;\n            });\n            return result;\n        },\n\n        _replaceFileInput: function _replaceFileInput(data) {\n            var input = data.fileInput,\n                inputClone = input.clone(true),\n                restoreFocus = input.is(document.activeElement);\n            // Add a reference for the new cloned file input to the data argument:\n            data.fileInputClone = inputClone;\n            $('<form></form>').append(inputClone)[0].reset();\n            // Detaching allows to insert the fileInput on another form\n            // without loosing the file input value:\n            input.after(inputClone).detach();\n            // If the fileInput had focus before it was detached,\n            // restore focus to the inputClone.\n            if (restoreFocus) {\n                inputClone.focus();\n            }\n            // Avoid memory leaks with the detached file input:\n            $.cleanData(input.unbind('remove'));\n            // Replace the original file input element in the fileInput\n            // elements set with the clone, which has been copied including\n            // event handlers:\n            this.options.fileInput = this.options.fileInput.map(function (i, el) {\n                if (el === input[0]) {\n                    return inputClone[0];\n                }\n                return el;\n            });\n            // If the widget has been initialized on the file input itself,\n            // override this.element with the file input clone:\n            if (input[0] === this.element[0]) {\n                this.element = inputClone;\n            }\n        },\n\n        _handleFileTreeEntry: function _handleFileTreeEntry(entry, path) {\n            var that = this,\n                dfd = $.Deferred(),\n                entries = [],\n                dirReader,\n                errorHandler = function errorHandler(e) {\n                if (e && !e.entry) {\n                    e.entry = entry;\n                }\n                // Since $.when returns immediately if one\n                // Deferred is rejected, we use resolve instead.\n                // This allows valid files and invalid items\n                // to be returned together in one set:\n                dfd.resolve([e]);\n            },\n                successHandler = function successHandler(entries) {\n                that._handleFileTreeEntries(entries, path + entry.name + '/').done(function (files) {\n                    dfd.resolve(files);\n                }).fail(errorHandler);\n            },\n                readEntries = function readEntries() {\n                dirReader.readEntries(function (results) {\n                    if (!results.length) {\n                        successHandler(entries);\n                    } else {\n                        entries = entries.concat(results);\n                        readEntries();\n                    }\n                }, errorHandler);\n            };\n            path = path || '';\n            if (entry.isFile) {\n                if (entry._file) {\n                    // Workaround for Chrome bug #149735\n                    entry._file.relativePath = path;\n                    dfd.resolve(entry._file);\n                } else {\n                    entry.file(function (file) {\n                        file.relativePath = path;\n                        dfd.resolve(file);\n                    }, errorHandler);\n                }\n            } else if (entry.isDirectory) {\n                dirReader = entry.createReader();\n                readEntries();\n            } else {\n                // Return an empy list for file system items\n                // other than files or directories:\n                dfd.resolve([]);\n            }\n            return dfd.promise();\n        },\n\n        _handleFileTreeEntries: function _handleFileTreeEntries(entries, path) {\n            var that = this;\n            return $.when.apply($, $.map(entries, function (entry) {\n                return that._handleFileTreeEntry(entry, path);\n            })).then(function () {\n                return Array.prototype.concat.apply([], arguments);\n            });\n        },\n\n        _getDroppedFiles: function _getDroppedFiles(dataTransfer) {\n            dataTransfer = dataTransfer || {};\n            var items = dataTransfer.items;\n            if (items && items.length && (items[0].webkitGetAsEntry || items[0].getAsEntry)) {\n                return this._handleFileTreeEntries($.map(items, function (item) {\n                    var entry;\n                    if (item.webkitGetAsEntry) {\n                        entry = item.webkitGetAsEntry();\n                        if (entry) {\n                            // Workaround for Chrome bug #149735:\n                            entry._file = item.getAsFile();\n                        }\n                        return entry;\n                    }\n                    return item.getAsEntry();\n                }));\n            }\n            return $.Deferred().resolve($.makeArray(dataTransfer.files)).promise();\n        },\n\n        _getSingleFileInputFiles: function _getSingleFileInputFiles(fileInput) {\n            fileInput = $(fileInput);\n            var entries = fileInput.prop('webkitEntries') || fileInput.prop('entries'),\n                files,\n                value;\n            if (entries && entries.length) {\n                return this._handleFileTreeEntries(entries);\n            }\n            files = $.makeArray(fileInput.prop('files'));\n            if (!files.length) {\n                value = fileInput.prop('value');\n                if (!value) {\n                    return $.Deferred().resolve([]).promise();\n                }\n                // If the files property is not available, the browser does not\n                // support the File API and we add a pseudo File object with\n                // the input value as name with path information removed:\n                files = [{ name: value.replace(/^.*\\\\/, '') }];\n            } else if (files[0].name === undefined && files[0].fileName) {\n                // File normalization for Safari 4 and Firefox 3:\n                $.each(files, function (index, file) {\n                    file.name = file.fileName;\n                    file.size = file.fileSize;\n                });\n            }\n            return $.Deferred().resolve(files).promise();\n        },\n\n        _getFileInputFiles: function _getFileInputFiles(fileInput) {\n            if (!(fileInput instanceof $) || fileInput.length === 1) {\n                return this._getSingleFileInputFiles(fileInput);\n            }\n            return $.when.apply($, $.map(fileInput, this._getSingleFileInputFiles)).then(function () {\n                return Array.prototype.concat.apply([], arguments);\n            });\n        },\n\n        _onChange: function _onChange(e) {\n            var that = this,\n                data = {\n                fileInput: $(e.target),\n                form: $(e.target.form)\n            };\n            this._getFileInputFiles(data.fileInput).always(function (files) {\n                data.files = files;\n                if (that.options.replaceFileInput) {\n                    that._replaceFileInput(data);\n                }\n                if (that._trigger('change', $.Event('change', { delegatedEvent: e }), data) !== false) {\n                    that._onAdd(e, data);\n                }\n            });\n        },\n\n        _onPaste: function _onPaste(e) {\n            var items = e.originalEvent && e.originalEvent.clipboardData && e.originalEvent.clipboardData.items,\n                data = { files: [] };\n            if (items && items.length) {\n                $.each(items, function (index, item) {\n                    var file = item.getAsFile && item.getAsFile();\n                    if (file) {\n                        data.files.push(file);\n                    }\n                });\n                if (this._trigger('paste', $.Event('paste', { delegatedEvent: e }), data) !== false) {\n                    this._onAdd(e, data);\n                }\n            }\n        },\n\n        _onDrop: function _onDrop(e) {\n            e.dataTransfer = e.originalEvent && e.originalEvent.dataTransfer;\n            var that = this,\n                dataTransfer = e.dataTransfer,\n                data = {};\n            if (dataTransfer && dataTransfer.files && dataTransfer.files.length) {\n                e.preventDefault();\n                this._getDroppedFiles(dataTransfer).always(function (files) {\n                    data.files = files;\n                    if (that._trigger('drop', $.Event('drop', { delegatedEvent: e }), data) !== false) {\n                        that._onAdd(e, data);\n                    }\n                });\n            }\n        },\n\n        _onDragOver: getDragHandler('dragover'),\n\n        _onDragEnter: getDragHandler('dragenter'),\n\n        _onDragLeave: getDragHandler('dragleave'),\n\n        _initEventHandlers: function _initEventHandlers() {\n            if (this._isXHRUpload(this.options)) {\n                this._on(this.options.dropZone, {\n                    dragover: this._onDragOver,\n                    drop: this._onDrop,\n                    // event.preventDefault() on dragenter is required for IE10+:\n                    dragenter: this._onDragEnter,\n                    // dragleave is not required, but added for completeness:\n                    dragleave: this._onDragLeave\n                });\n                this._on(this.options.pasteZone, {\n                    paste: this._onPaste\n                });\n            }\n            if ($.support.fileInput) {\n                this._on(this.options.fileInput, {\n                    change: this._onChange\n                });\n            }\n        },\n\n        _destroyEventHandlers: function _destroyEventHandlers() {\n            this._off(this.options.dropZone, 'dragenter dragleave dragover drop');\n            this._off(this.options.pasteZone, 'paste');\n            this._off(this.options.fileInput, 'change');\n        },\n\n        _destroy: function _destroy() {\n            this._destroyEventHandlers();\n        },\n\n        _setOption: function _setOption(key, value) {\n            var reinit = $.inArray(key, this._specialOptions) !== -1;\n            if (reinit) {\n                this._destroyEventHandlers();\n            }\n            this._super(key, value);\n            if (reinit) {\n                this._initSpecialOptions();\n                this._initEventHandlers();\n            }\n        },\n\n        _initSpecialOptions: function _initSpecialOptions() {\n            var options = this.options;\n            if (options.fileInput === undefined) {\n                options.fileInput = this.element.is('input[type=\"file\"]') ? this.element : this.element.find('input[type=\"file\"]');\n            } else if (!(options.fileInput instanceof $)) {\n                options.fileInput = $(options.fileInput);\n            }\n            if (!(options.dropZone instanceof $)) {\n                options.dropZone = $(options.dropZone);\n            }\n            if (!(options.pasteZone instanceof $)) {\n                options.pasteZone = $(options.pasteZone);\n            }\n        },\n\n        _getRegExp: function _getRegExp(str) {\n            var parts = str.split('/'),\n                modifiers = parts.pop();\n            parts.shift();\n            return new RegExp(parts.join('/'), modifiers);\n        },\n\n        _isRegExpOption: function _isRegExpOption(key, value) {\n            return key !== 'url' && $.type(value) === 'string' && /^\\/.*\\/[igm]{0,3}$/.test(value);\n        },\n\n        _initDataAttributes: function _initDataAttributes() {\n            var that = this,\n                options = this.options,\n                data = this.element.data();\n            // Initialize options set via HTML5 data-attributes:\n            $.each(this.element[0].attributes, function (index, attr) {\n                var key = attr.name.toLowerCase(),\n                    value;\n                if (/^data-/.test(key)) {\n                    // Convert hyphen-ated key to camelCase:\n                    key = key.slice(5).replace(/-[a-z]/g, function (str) {\n                        return str.charAt(1).toUpperCase();\n                    });\n                    value = data[key];\n                    if (that._isRegExpOption(key, value)) {\n                        value = that._getRegExp(value);\n                    }\n                    options[key] = value;\n                }\n            });\n        },\n\n        _create: function _create() {\n            this._initDataAttributes();\n            this._initSpecialOptions();\n            this._slots = [];\n            this._sequence = this._getXHRPromise(true);\n            this._sending = this._active = 0;\n            this._initProgressObject(this);\n            this._initEventHandlers();\n        },\n\n        // This method is exposed to the widget API and allows to query\n        // the number of active uploads:\n        active: function active() {\n            return this._active;\n        },\n\n        // This method is exposed to the widget API and allows to query\n        // the widget upload progress.\n        // It returns an object with loaded, total and bitrate properties\n        // for the running uploads:\n        progress: function progress() {\n            return this._progress;\n        },\n\n        // This method is exposed to the widget API and allows adding files\n        // using the fileupload API. The data parameter accepts an object which\n        // must have a files property and can contain additional options:\n        // .fileupload('add', {files: filesList});\n        add: function add(data) {\n            var that = this;\n            if (!data || this.options.disabled) {\n                return;\n            }\n            if (data.fileInput && !data.files) {\n                this._getFileInputFiles(data.fileInput).always(function (files) {\n                    data.files = files;\n                    that._onAdd(null, data);\n                });\n            } else {\n                data.files = $.makeArray(data.files);\n                this._onAdd(null, data);\n            }\n        },\n\n        // This method is exposed to the widget API and allows sending files\n        // using the fileupload API. The data parameter accepts an object which\n        // must have a files or fileInput property and can contain additional options:\n        // .fileupload('send', {files: filesList});\n        // The method returns a Promise object for the file upload call.\n        send: function send(data) {\n            if (data && !this.options.disabled) {\n                if (data.fileInput && !data.files) {\n                    var that = this,\n                        dfd = $.Deferred(),\n                        promise = dfd.promise(),\n                        jqXHR,\n                        aborted;\n                    promise.abort = function () {\n                        aborted = true;\n                        if (jqXHR) {\n                            return jqXHR.abort();\n                        }\n                        dfd.reject(null, 'abort', 'abort');\n                        return promise;\n                    };\n                    this._getFileInputFiles(data.fileInput).always(function (files) {\n                        if (aborted) {\n                            return;\n                        }\n                        if (!files.length) {\n                            dfd.reject();\n                            return;\n                        }\n                        data.files = files;\n                        jqXHR = that._onSend(null, data);\n                        jqXHR.then(function (result, textStatus, jqXHR) {\n                            dfd.resolve(result, textStatus, jqXHR);\n                        }, function (jqXHR, textStatus, errorThrown) {\n                            dfd.reject(jqXHR, textStatus, errorThrown);\n                        });\n                    });\n                    return this._enhancePromise(promise);\n                }\n                data.files = $.makeArray(data.files);\n                if (data.files.length) {\n                    return this._onSend(null, data);\n                }\n            }\n            return this._getXHRPromise(false, data && data.context);\n        }\n\n    });\n});\n\n},{}],61:[function(require,module,exports){\n'use strict';\n\n/*\n * jQuery Iframe Transport Plugin\n * https://github.com/blueimp/jQuery-File-Upload\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, require, window, document, JSON */\n\n;(function (factory) {\n    'use strict';\n    // if (typeof define === 'function' && define.amd) {\n    //     // Register as an anonymous AMD module:\n    //     define(['jquery'], factory);\n    // } else if (typeof exports === 'object') {\n    //     // Node/CommonJS:\n    //     factory(require('jquery'));\n    // } else {\n    // Browser globals:\n\n    factory(window.jQuery);\n    // }\n})(function ($) {\n    'use strict';\n\n    // Helper variable to create unique names for the transport iframes:\n\n    var counter = 0,\n        jsonAPI = $,\n        jsonParse = 'parseJSON';\n\n    if ('JSON' in window && 'parse' in JSON) {\n        jsonAPI = JSON;\n        jsonParse = 'parse';\n    }\n\n    // The iframe transport accepts four additional options:\n    // options.fileInput: a jQuery collection of file input fields\n    // options.paramName: the parameter name for the file form data,\n    //  overrides the name property of the file input field(s),\n    //  can be a string or an array of strings.\n    // options.formData: an array of objects with name and value properties,\n    //  equivalent to the return data of .serializeArray(), e.g.:\n    //  [{name: 'a', value: 1}, {name: 'b', value: 2}]\n    // options.initialIframeSrc: the URL of the initial iframe src,\n    //  by default set to \"javascript:false;\"\n    $.ajaxTransport('iframe', function (options) {\n        if (options.async) {\n            // javascript:false as initial iframe src\n            // prevents warning popups on HTTPS in IE6:\n            /*jshint scripturl: true */\n            var initialIframeSrc = options.initialIframeSrc || 'javascript:false;',\n\n            /*jshint scripturl: false */\n            form,\n                iframe,\n                addParamChar;\n            return {\n                send: function send(_, completeCallback) {\n                    form = $('<form style=\"display:none;\"></form>');\n                    form.attr('accept-charset', options.formAcceptCharset);\n                    addParamChar = /\\?/.test(options.url) ? '&' : '?';\n                    // XDomainRequest only supports GET and POST:\n                    if (options.type === 'DELETE') {\n                        options.url = options.url + addParamChar + '_method=DELETE';\n                        options.type = 'POST';\n                    } else if (options.type === 'PUT') {\n                        options.url = options.url + addParamChar + '_method=PUT';\n                        options.type = 'POST';\n                    } else if (options.type === 'PATCH') {\n                        options.url = options.url + addParamChar + '_method=PATCH';\n                        options.type = 'POST';\n                    }\n                    // IE versions below IE8 cannot set the name property of\n                    // elements that have already been added to the DOM,\n                    // so we set the name along with the iframe HTML markup:\n                    counter += 1;\n                    iframe = $('<iframe src=\"' + initialIframeSrc + '\" name=\"iframe-transport-' + counter + '\"></iframe>').bind('load', function () {\n                        var fileInputClones,\n                            paramNames = $.isArray(options.paramName) ? options.paramName : [options.paramName];\n                        iframe.unbind('load').bind('load', function () {\n                            var response;\n                            // Wrap in a try/catch block to catch exceptions thrown\n                            // when trying to access cross-domain iframe contents:\n                            try {\n                                response = iframe.contents();\n                                // Google Chrome and Firefox do not throw an\n                                // exception when calling iframe.contents() on\n                                // cross-domain requests, so we unify the response:\n                                if (!response.length || !response[0].firstChild) {\n                                    throw new Error();\n                                }\n                            } catch (e) {\n                                response = undefined;\n                            }\n                            // The complete callback returns the\n                            // iframe content document as response object:\n                            completeCallback(200, 'success', { 'iframe': response });\n                            // Fix for IE endless progress bar activity bug\n                            // (happens on form submits to iframe targets):\n                            $('<iframe src=\"' + initialIframeSrc + '\"></iframe>').appendTo(form);\n                            window.setTimeout(function () {\n                                // Removing the form in a setTimeout call\n                                // allows Chrome's developer tools to display\n                                // the response result\n                                form.remove();\n                            }, 0);\n                        });\n                        form.prop('target', iframe.prop('name')).prop('action', options.url).prop('method', options.type);\n                        if (options.formData) {\n                            $.each(options.formData, function (index, field) {\n                                $('<input type=\"hidden\"/>').prop('name', field.name).val(field.value).appendTo(form);\n                            });\n                        }\n                        if (options.fileInput && options.fileInput.length && options.type === 'POST') {\n                            fileInputClones = options.fileInput.clone();\n                            // Insert a clone for each file input field:\n                            options.fileInput.after(function (index) {\n                                return fileInputClones[index];\n                            });\n                            if (options.paramName) {\n                                options.fileInput.each(function (index) {\n                                    $(this).prop('name', paramNames[index] || options.paramName);\n                                });\n                            }\n                            // Appending the file input fields to the hidden form\n                            // removes them from their original location:\n                            form.append(options.fileInput).prop('enctype', 'multipart/form-data')\n                            // enctype must be set as encoding for IE:\n                            .prop('encoding', 'multipart/form-data');\n                            // Remove the HTML5 form attribute from the input(s):\n                            options.fileInput.removeAttr('form');\n                        }\n                        form.submit();\n                        // Insert the file input fields at their original location\n                        // by replacing the clones with the originals:\n                        if (fileInputClones && fileInputClones.length) {\n                            options.fileInput.each(function (index, input) {\n                                var clone = $(fileInputClones[index]);\n                                // Restore the original name and form properties:\n                                $(input).prop('name', clone.prop('name')).attr('form', clone.attr('form'));\n                                clone.replaceWith(input);\n                            });\n                        }\n                    });\n                    form.append(iframe).appendTo(document.body);\n                },\n                abort: function abort() {\n                    if (iframe) {\n                        // javascript:false as iframe src aborts the request\n                        // and prevents warning popups on HTTPS in IE6.\n                        // concat is used to avoid the \"Script URL\" JSLint error:\n                        iframe.unbind('load').prop('src', initialIframeSrc);\n                    }\n                    if (form) {\n                        form.remove();\n                    }\n                }\n            };\n        }\n    });\n\n    // The iframe transport returns the iframe content document as response.\n    // The following adds converters from iframe to text, json, html, xml\n    // and script.\n    // Please note that the Content-Type for JSON responses has to be text/plain\n    // or text/html, if the browser doesn't include application/json in the\n    // Accept header, else IE will show a download dialog.\n    // The Content-Type for XML responses on the other hand has to be always\n    // application/xml or text/xml, so IE properly parses the XML response.\n    // See also\n    // https://github.com/blueimp/jQuery-File-Upload/wiki/Setup#content-type-negotiation\n    $.ajaxSetup({\n        converters: {\n            'iframe text': function iframeText(iframe) {\n                return iframe && $(iframe[0].body).text();\n            },\n            'iframe json': function iframeJson(iframe) {\n                return iframe && jsonAPI[jsonParse]($(iframe[0].body).text());\n            },\n            'iframe html': function iframeHtml(iframe) {\n                return iframe && $(iframe[0].body).html();\n            },\n            'iframe xml': function iframeXml(iframe) {\n                var xmlDoc = iframe && iframe[0];\n                return xmlDoc && $.isXMLDoc(xmlDoc) ? xmlDoc : $.parseXML(xmlDoc.XMLDocument && xmlDoc.XMLDocument.xml || $(xmlDoc.body).html());\n            },\n            'iframe script': function iframeScript(iframe) {\n                return iframe && $.globalEval($(iframe[0].body).text());\n            }\n        }\n    });\n});\n\n},{}],62:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n!function (t) {\n  \"use strict\";\n  var e = t.HTMLCanvasElement && t.HTMLCanvasElement.prototype,\n      o = t.Blob && function () {\n    try {\n      return Boolean(new Blob());\n    } catch (t) {\n      return !1;\n    }\n  }(),\n      n = o && t.Uint8Array && function () {\n    try {\n      return 100 === new Blob([new Uint8Array(100)]).size;\n    } catch (t) {\n      return !1;\n    }\n  }(),\n      r = t.BlobBuilder || t.WebKitBlobBuilder || t.MozBlobBuilder || t.MSBlobBuilder,\n      a = /^data:((.*?)(;charset=.*?)?)(;base64)?,/,\n      i = (o || r) && t.atob && t.ArrayBuffer && t.Uint8Array && function (t) {\n    var e, i, l, u, b, c, d, B, f;if (e = t.match(a), !e) throw new Error(\"invalid data URI\");for (i = e[2] ? e[1] : \"text/plain\" + (e[3] || \";charset=US-ASCII\"), l = !!e[4], u = t.slice(e[0].length), b = l ? atob(u) : decodeURIComponent(u), c = new ArrayBuffer(b.length), d = new Uint8Array(c), B = 0; B < b.length; B += 1) {\n      d[B] = b.charCodeAt(B);\n    }return o ? new Blob([n ? d : c], { type: i }) : (f = new r(), f.append(c), f.getBlob(i));\n  };t.HTMLCanvasElement && !e.toBlob && (e.mozGetAsFile ? e.toBlob = function (t, o, n) {\n    t(n && e.toDataURL && i ? i(this.toDataURL(o, n)) : this.mozGetAsFile(\"blob\", o));\n  } : e.toDataURL && i && (e.toBlob = function (t, e, o) {\n    t(i(this.toDataURL(e, o)));\n  })), \"function\" == typeof define && define.amd ? define(function () {\n    return i;\n  }) : \"object\" == (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) && module.exports ? module.exports = i : t.dataURLtoBlob = i;\n}(window);\n\n\n},{}],63:[function(require,module,exports){\n\"use strict\";\n\n/*! jQuery UI - v1.11.4+CommonJS - 2015-08-28\n * http://jqueryui.com\n * Includes: widget.js\n * Copyright 2015 jQuery Foundation and other contributors; Licensed MIT */\n\n(function (factory) {\n    // if ( typeof define === \"function\" && define.amd ) {\n    //\n    //     // AMD. Register as an anonymous module.\n    //     define([ \"jquery\" ], factory );\n    //\n    // } else if ( typeof exports === \"object\" ) {\n    //\n    //     // Node/CommonJS\n    //     factory( require( \"jquery\" ) );\n    //\n    // } else {\n\n    // Browser globals\n    factory(jQuery);\n    // }\n})(function ($) {\n    /*!\n     * jQuery UI Widget 1.11.4\n     * http://jqueryui.com\n     *\n     * Copyright jQuery Foundation and other contributors\n     * Released under the MIT license.\n     * http://jquery.org/license\n     *\n     * http://api.jqueryui.com/jQuery.widget/\n     */\n\n    var widget_uuid = 0,\n        widget_slice = Array.prototype.slice;\n\n    $.cleanData = function (orig) {\n        return function (elems) {\n            var events, elem, i;\n            for (i = 0; (elem = elems[i]) != null; i++) {\n                try {\n\n                    // Only trigger remove when necessary to save time\n                    events = $._data(elem, \"events\");\n                    if (events && events.remove) {\n                        $(elem).triggerHandler(\"remove\");\n                    }\n\n                    // http://bugs.jquery.com/ticket/8235\n                } catch (e) {}\n            }\n            orig(elems);\n        };\n    }($.cleanData);\n\n    $.widget = function (name, base, prototype) {\n        var fullName,\n            existingConstructor,\n            constructor,\n            basePrototype,\n\n        // proxiedPrototype allows the provided prototype to remain unmodified\n        // so that it can be used as a mixin for multiple widgets (#8876)\n        proxiedPrototype = {},\n            namespace = name.split(\".\")[0];\n\n        name = name.split(\".\")[1];\n        fullName = namespace + \"-\" + name;\n\n        if (!prototype) {\n            prototype = base;\n            base = $.Widget;\n        }\n\n        // create selector for plugin\n        $.expr[\":\"][fullName.toLowerCase()] = function (elem) {\n            return !!$.data(elem, fullName);\n        };\n\n        $[namespace] = $[namespace] || {};\n        existingConstructor = $[namespace][name];\n        constructor = $[namespace][name] = function (options, element) {\n            // allow instantiation without \"new\" keyword\n            if (!this._createWidget) {\n                return new constructor(options, element);\n            }\n\n            // allow instantiation without initializing for simple inheritance\n            // must use \"new\" keyword (the code above always passes args)\n            if (arguments.length) {\n                this._createWidget(options, element);\n            }\n        };\n        // extend with the existing constructor to carry over any static properties\n        $.extend(constructor, existingConstructor, {\n            version: prototype.version,\n            // copy the object used to create the prototype in case we need to\n            // redefine the widget later\n            _proto: $.extend({}, prototype),\n            // track widgets that inherit from this widget in case this widget is\n            // redefined after a widget inherits from it\n            _childConstructors: []\n        });\n\n        basePrototype = new base();\n        // we need to make the options hash a property directly on the new instance\n        // otherwise we'll modify the options hash on the prototype that we're\n        // inheriting from\n        basePrototype.options = $.widget.extend({}, basePrototype.options);\n        $.each(prototype, function (prop, value) {\n            if (!$.isFunction(value)) {\n                proxiedPrototype[prop] = value;\n                return;\n            }\n            proxiedPrototype[prop] = function () {\n                var _super = function _super() {\n                    return base.prototype[prop].apply(this, arguments);\n                },\n                    _superApply = function _superApply(args) {\n                    return base.prototype[prop].apply(this, args);\n                };\n                return function () {\n                    var __super = this._super,\n                        __superApply = this._superApply,\n                        returnValue;\n\n                    this._super = _super;\n                    this._superApply = _superApply;\n\n                    returnValue = value.apply(this, arguments);\n\n                    this._super = __super;\n                    this._superApply = __superApply;\n\n                    return returnValue;\n                };\n            }();\n        });\n        constructor.prototype = $.widget.extend(basePrototype, {\n            // TODO: remove support for widgetEventPrefix\n            // always use the name + a colon as the prefix, e.g., draggable:start\n            // don't prefix for widgets that aren't DOM-based\n            widgetEventPrefix: existingConstructor ? basePrototype.widgetEventPrefix || name : name\n        }, proxiedPrototype, {\n            constructor: constructor,\n            namespace: namespace,\n            widgetName: name,\n            widgetFullName: fullName\n        });\n\n        // If this widget is being redefined then we need to find all widgets that\n        // are inheriting from it and redefine all of them so that they inherit from\n        // the new version of this widget. We're essentially trying to replace one\n        // level in the prototype chain.\n        if (existingConstructor) {\n            $.each(existingConstructor._childConstructors, function (i, child) {\n                var childPrototype = child.prototype;\n\n                // redefine the child widget using the same prototype that was\n                // originally used, but inherit from the new version of the base\n                $.widget(childPrototype.namespace + \".\" + childPrototype.widgetName, constructor, child._proto);\n            });\n            // remove the list of existing child constructors from the old constructor\n            // so the old child constructors can be garbage collected\n            delete existingConstructor._childConstructors;\n        } else {\n            base._childConstructors.push(constructor);\n        }\n\n        $.widget.bridge(name, constructor);\n\n        return constructor;\n    };\n\n    $.widget.extend = function (target) {\n        var input = widget_slice.call(arguments, 1),\n            inputIndex = 0,\n            inputLength = input.length,\n            key,\n            value;\n        for (; inputIndex < inputLength; inputIndex++) {\n            for (key in input[inputIndex]) {\n                value = input[inputIndex][key];\n                if (input[inputIndex].hasOwnProperty(key) && value !== undefined) {\n                    // Clone objects\n                    if ($.isPlainObject(value)) {\n                        target[key] = $.isPlainObject(target[key]) ? $.widget.extend({}, target[key], value) :\n                        // Don't extend strings, arrays, etc. with objects\n                        $.widget.extend({}, value);\n                        // Copy everything else by reference\n                    } else {\n                        target[key] = value;\n                    }\n                }\n            }\n        }\n        return target;\n    };\n\n    $.widget.bridge = function (name, object) {\n        var fullName = object.prototype.widgetFullName || name;\n        $.fn[name] = function (options) {\n            var isMethodCall = typeof options === \"string\",\n                args = widget_slice.call(arguments, 1),\n                returnValue = this;\n\n            if (isMethodCall) {\n                this.each(function () {\n                    var methodValue,\n                        instance = $.data(this, fullName);\n                    if (options === \"instance\") {\n                        returnValue = instance;\n                        return false;\n                    }\n                    if (!instance) {\n                        return $.error(\"cannot call methods on \" + name + \" prior to initialization; \" + \"attempted to call method '\" + options + \"'\");\n                    }\n                    if (!$.isFunction(instance[options]) || options.charAt(0) === \"_\") {\n                        return $.error(\"no such method '\" + options + \"' for \" + name + \" widget instance\");\n                    }\n                    methodValue = instance[options].apply(instance, args);\n                    if (methodValue !== instance && methodValue !== undefined) {\n                        returnValue = methodValue && methodValue.jquery ? returnValue.pushStack(methodValue.get()) : methodValue;\n                        return false;\n                    }\n                });\n            } else {\n\n                // Allow multiple hashes to be passed on init\n                if (args.length) {\n                    options = $.widget.extend.apply(null, [options].concat(args));\n                }\n\n                this.each(function () {\n                    var instance = $.data(this, fullName);\n                    if (instance) {\n                        instance.option(options || {});\n                        if (instance._init) {\n                            instance._init();\n                        }\n                    } else {\n                        $.data(this, fullName, new object(options, this));\n                    }\n                });\n            }\n\n            return returnValue;\n        };\n    };\n\n    $.Widget = function () /* options, element */{};\n    $.Widget._childConstructors = [];\n\n    $.Widget.prototype = {\n        widgetName: \"widget\",\n        widgetEventPrefix: \"\",\n        defaultElement: \"<div>\",\n        options: {\n            disabled: false,\n\n            // callbacks\n            create: null\n        },\n        _createWidget: function _createWidget(options, element) {\n            element = $(element || this.defaultElement || this)[0];\n            this.element = $(element);\n            this.uuid = widget_uuid++;\n            this.eventNamespace = \".\" + this.widgetName + this.uuid;\n\n            this.bindings = $();\n            this.hoverable = $();\n            this.focusable = $();\n\n            if (element !== this) {\n                $.data(element, this.widgetFullName, this);\n                this._on(true, this.element, {\n                    remove: function remove(event) {\n                        if (event.target === element) {\n                            this.destroy();\n                        }\n                    }\n                });\n                this.document = $(element.style ?\n                // element within the document\n                element.ownerDocument :\n                // element is window or document\n                element.document || element);\n                this.window = $(this.document[0].defaultView || this.document[0].parentWindow);\n            }\n\n            this.options = $.widget.extend({}, this.options, this._getCreateOptions(), options);\n\n            this._create();\n            this._trigger(\"create\", null, this._getCreateEventData());\n            this._init();\n        },\n        _getCreateOptions: $.noop,\n        _getCreateEventData: $.noop,\n        _create: $.noop,\n        _init: $.noop,\n\n        destroy: function destroy() {\n            this._destroy();\n            // we can probably remove the unbind calls in 2.0\n            // all event bindings should go through this._on()\n            this.element.unbind(this.eventNamespace).removeData(this.widgetFullName)\n            // support: jquery <1.6.3\n            // http://bugs.jquery.com/ticket/9413\n            .removeData($.camelCase(this.widgetFullName));\n            this.widget().unbind(this.eventNamespace).removeAttr(\"aria-disabled\").removeClass(this.widgetFullName + \"-disabled \" + \"ui-state-disabled\");\n\n            // clean up events and states\n            this.bindings.unbind(this.eventNamespace);\n            this.hoverable.removeClass(\"ui-state-hover\");\n            this.focusable.removeClass(\"ui-state-focus\");\n        },\n        _destroy: $.noop,\n\n        widget: function widget() {\n            return this.element;\n        },\n\n        option: function option(key, value) {\n            var options = key,\n                parts,\n                curOption,\n                i;\n\n            if (arguments.length === 0) {\n                // don't return a reference to the internal hash\n                return $.widget.extend({}, this.options);\n            }\n\n            if (typeof key === \"string\") {\n                // handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\n                options = {};\n                parts = key.split(\".\");\n                key = parts.shift();\n                if (parts.length) {\n                    curOption = options[key] = $.widget.extend({}, this.options[key]);\n                    for (i = 0; i < parts.length - 1; i++) {\n                        curOption[parts[i]] = curOption[parts[i]] || {};\n                        curOption = curOption[parts[i]];\n                    }\n                    key = parts.pop();\n                    if (arguments.length === 1) {\n                        return curOption[key] === undefined ? null : curOption[key];\n                    }\n                    curOption[key] = value;\n                } else {\n                    if (arguments.length === 1) {\n                        return this.options[key] === undefined ? null : this.options[key];\n                    }\n                    options[key] = value;\n                }\n            }\n\n            this._setOptions(options);\n\n            return this;\n        },\n        _setOptions: function _setOptions(options) {\n            var key;\n\n            for (key in options) {\n                this._setOption(key, options[key]);\n            }\n\n            return this;\n        },\n        _setOption: function _setOption(key, value) {\n            this.options[key] = value;\n\n            if (key === \"disabled\") {\n                this.widget().toggleClass(this.widgetFullName + \"-disabled\", !!value);\n\n                // If the widget is becoming disabled, then nothing is interactive\n                if (value) {\n                    this.hoverable.removeClass(\"ui-state-hover\");\n                    this.focusable.removeClass(\"ui-state-focus\");\n                }\n            }\n\n            return this;\n        },\n\n        enable: function enable() {\n            return this._setOptions({ disabled: false });\n        },\n        disable: function disable() {\n            return this._setOptions({ disabled: true });\n        },\n\n        _on: function _on(suppressDisabledCheck, element, handlers) {\n            var delegateElement,\n                instance = this;\n\n            // no suppressDisabledCheck flag, shuffle arguments\n            if (typeof suppressDisabledCheck !== \"boolean\") {\n                handlers = element;\n                element = suppressDisabledCheck;\n                suppressDisabledCheck = false;\n            }\n\n            // no element argument, shuffle and use this.element\n            if (!handlers) {\n                handlers = element;\n                element = this.element;\n                delegateElement = this.widget();\n            } else {\n                element = delegateElement = $(element);\n                this.bindings = this.bindings.add(element);\n            }\n\n            $.each(handlers, function (event, handler) {\n                function handlerProxy() {\n                    // allow widgets to customize the disabled handling\n                    // - disabled as an array instead of boolean\n                    // - disabled class as method for disabling individual parts\n                    if (!suppressDisabledCheck && (instance.options.disabled === true || $(this).hasClass(\"ui-state-disabled\"))) {\n                        return;\n                    }\n                    return (typeof handler === \"string\" ? instance[handler] : handler).apply(instance, arguments);\n                }\n\n                // copy the guid so direct unbinding works\n                if (typeof handler !== \"string\") {\n                    handlerProxy.guid = handler.guid = handler.guid || handlerProxy.guid || $.guid++;\n                }\n\n                var match = event.match(/^([\\w:-]*)\\s*(.*)$/),\n                    eventName = match[1] + instance.eventNamespace,\n                    selector = match[2];\n                if (selector) {\n                    delegateElement.delegate(selector, eventName, handlerProxy);\n                } else {\n                    element.bind(eventName, handlerProxy);\n                }\n            });\n        },\n\n        _off: function _off(element, eventName) {\n            eventName = (eventName || \"\").split(\" \").join(this.eventNamespace + \" \") + this.eventNamespace;\n            element.unbind(eventName).undelegate(eventName);\n\n            // Clear the stack to avoid memory leaks (#10056)\n            this.bindings = $(this.bindings.not(element).get());\n            this.focusable = $(this.focusable.not(element).get());\n            this.hoverable = $(this.hoverable.not(element).get());\n        },\n\n        _delay: function _delay(handler, delay) {\n            function handlerProxy() {\n                return (typeof handler === \"string\" ? instance[handler] : handler).apply(instance, arguments);\n            }\n            var instance = this;\n            return setTimeout(handlerProxy, delay || 0);\n        },\n\n        _hoverable: function _hoverable(element) {\n            this.hoverable = this.hoverable.add(element);\n            this._on(element, {\n                mouseenter: function mouseenter(event) {\n                    $(event.currentTarget).addClass(\"ui-state-hover\");\n                },\n                mouseleave: function mouseleave(event) {\n                    $(event.currentTarget).removeClass(\"ui-state-hover\");\n                }\n            });\n        },\n\n        _focusable: function _focusable(element) {\n            this.focusable = this.focusable.add(element);\n            this._on(element, {\n                focusin: function focusin(event) {\n                    $(event.currentTarget).addClass(\"ui-state-focus\");\n                },\n                focusout: function focusout(event) {\n                    $(event.currentTarget).removeClass(\"ui-state-focus\");\n                }\n            });\n        },\n\n        _trigger: function _trigger(type, event, data) {\n            var prop,\n                orig,\n                callback = this.options[type];\n\n            data = data || {};\n            event = $.Event(event);\n            event.type = (type === this.widgetEventPrefix ? type : this.widgetEventPrefix + type).toLowerCase();\n            // the original event may come from any element\n            // so we need to reset the target on the new event\n            event.target = this.element[0];\n\n            // copy original event properties over to the new event\n            orig = event.originalEvent;\n            if (orig) {\n                for (prop in orig) {\n                    if (!(prop in event)) {\n                        event[prop] = orig[prop];\n                    }\n                }\n            }\n\n            this.element.trigger(event, data);\n            return !($.isFunction(callback) && callback.apply(this.element[0], [event].concat(data)) === false || event.isDefaultPrevented());\n        }\n    };\n\n    $.each({ show: \"fadeIn\", hide: \"fadeOut\" }, function (method, defaultEffect) {\n        $.Widget.prototype[\"_\" + method] = function (element, options, callback) {\n            if (typeof options === \"string\") {\n                options = { effect: options };\n            }\n            var hasOptions,\n                effectName = !options ? method : options === true || typeof options === \"number\" ? defaultEffect : options.effect || defaultEffect;\n            options = options || {};\n            if (typeof options === \"number\") {\n                options = { duration: options };\n            }\n            hasOptions = !$.isEmptyObject(options);\n            options.complete = callback;\n            if (options.delay) {\n                element.delay(options.delay);\n            }\n            if (hasOptions && $.effects && $.effects.effect[effectName]) {\n                element[method](options);\n            } else if (effectName !== method && element[effectName]) {\n                element[effectName](options.duration, options.easing, callback);\n            } else {\n                element.queue(function (next) {\n                    $(this)[method]();\n                    if (callback) {\n                        callback.call(element[0]);\n                    }\n                    next();\n                });\n            }\n        };\n    });\n\n    var widget = $.widget;\n});\n\n},{}],64:[function(require,module,exports){\n\"use strict\";\n\n!function (e) {\n    \"use strict\";\n\n    function t(e, i, a) {\n        var o,\n            r = document.createElement(\"img\");\n        if (r.onerror = function (o) {\n            return t.onerror(r, o, e, i, a);\n        }, r.onload = function (o) {\n            return t.onload(r, o, e, i, a);\n        }, t.isInstanceOf(\"Blob\", e) || t.isInstanceOf(\"File\", e)) o = r._objectURL = t.createObjectURL(e);else {\n            if (\"string\" != typeof e) return !1;\n            o = e, a && a.crossOrigin && (r.crossOrigin = a.crossOrigin);\n        }\n        return o ? (r.src = o, r) : t.readFile(e, function (e) {\n            var t = e.target;\n            t && t.result ? r.src = t.result : i && i(e);\n        });\n    }\n    function i(e, i) {\n        !e._objectURL || i && i.noRevoke || (t.revokeObjectURL(e._objectURL), delete e._objectURL);\n    }\n    var a = window.createObjectURL && window || window.URL && URL.revokeObjectURL && URL || window.webkitURL && webkitURL;\n    t.isInstanceOf = function (e, t) {\n        return Object.prototype.toString.call(t) === \"[object \" + e + \"]\";\n    }, t.transform = function (e, i, a, o, r) {\n        a(t.scale(e, i, r), r);\n    }, t.onerror = function (e, t, a, o, r) {\n        i(e, r), o && o.call(e, t);\n    }, t.onload = function (e, a, o, r, n) {\n        i(e, n), r && t.transform(e, n, r, o, {});\n    }, t.transformCoordinates = function () {}, t.getTransformedOptions = function (e, t) {\n        var i,\n            a,\n            o,\n            r,\n            n = t.aspectRatio;\n        if (!n) return t;\n        i = {};\n        for (a in t) {\n            t.hasOwnProperty(a) && (i[a] = t[a]);\n        }return i.crop = !0, o = e.naturalWidth || e.width, r = e.naturalHeight || e.height, o / r > n ? (i.maxWidth = r * n, i.maxHeight = r) : (i.maxWidth = o, i.maxHeight = o / n), i;\n    }, t.renderImageToCanvas = function (e, t, i, a, o, r, n, s, l, d) {\n        return e.getContext(\"2d\").drawImage(t, i, a, o, r, n, s, l, d), e;\n    }, t.hasCanvasOption = function (e) {\n        return e.canvas || e.crop || !!e.aspectRatio;\n    }, t.scale = function (e, i, a) {\n        function o() {\n            var e = Math.max((l || v) / v, (d || P) / P);\n            e > 1 && (v *= e, P *= e);\n        }\n        function r() {\n            var e = Math.min((n || v) / v, (s || P) / P);\n            e < 1 && (v *= e, P *= e);\n        }\n        i = i || {};\n        var n,\n            s,\n            l,\n            d,\n            u,\n            c,\n            f,\n            g,\n            h,\n            m,\n            p,\n            S = document.createElement(\"canvas\"),\n            b = e.getContext || t.hasCanvasOption(i) && S.getContext,\n            x = e.naturalWidth || e.width,\n            y = e.naturalHeight || e.height,\n            v = x,\n            P = y;\n        if (b && (i = t.getTransformedOptions(e, i, a), f = i.left || 0, g = i.top || 0, i.sourceWidth ? (u = i.sourceWidth, void 0 !== i.right && void 0 === i.left && (f = x - u - i.right)) : u = x - f - (i.right || 0), i.sourceHeight ? (c = i.sourceHeight, void 0 !== i.bottom && void 0 === i.top && (g = y - c - i.bottom)) : c = y - g - (i.bottom || 0), v = u, P = c), n = i.maxWidth, s = i.maxHeight, l = i.minWidth, d = i.minHeight, b && n && s && i.crop ? (v = n, P = s, p = u / c - n / s, p < 0 ? (c = s * u / n, void 0 === i.top && void 0 === i.bottom && (g = (y - c) / 2)) : p > 0 && (u = n * c / s, void 0 === i.left && void 0 === i.right && (f = (x - u) / 2))) : ((i.contain || i.cover) && (l = n = n || l, d = s = s || d), i.cover ? (r(), o()) : (o(), r())), b) {\n            if (h = i.pixelRatio, h > 1 && (S.style.width = v + \"px\", S.style.height = P + \"px\", v *= h, P *= h, S.getContext(\"2d\").scale(h, h)), m = i.downsamplingRatio, m > 0 && m < 1 && v < u && P < c) for (; u * m > v;) {\n                S.width = u * m, S.height = c * m, t.renderImageToCanvas(S, e, f, g, u, c, 0, 0, S.width, S.height), u = S.width, c = S.height, e = document.createElement(\"canvas\"), e.width = u, e.height = c, t.renderImageToCanvas(e, S, 0, 0, u, c, 0, 0, u, c);\n            }return S.width = v, S.height = P, t.transformCoordinates(S, i), t.renderImageToCanvas(S, e, f, g, u, c, 0, 0, v, P);\n        }\n        return e.width = v, e.height = P, e;\n    }, t.createObjectURL = function (e) {\n        return !!a && a.createObjectURL(e);\n    }, t.revokeObjectURL = function (e) {\n        return !!a && a.revokeObjectURL(e);\n    }, t.readFile = function (e, t, i) {\n        if (window.FileReader) {\n            var a = new FileReader();\n            if (a.onload = a.onerror = t, i = i || \"readAsDataURL\", a[i]) return a[i](e), a;\n        }\n        return !1;\n    }, e.loadImage = t;\n}(window), function (e) {\n    \"use strict\";\n\n    e(window.loadImage);\n}(function (e) {\n    \"use strict\";\n\n    var t = window.Blob && (Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice);\n    e.blobSlice = t && function () {\n        var e = this.slice || this.webkitSlice || this.mozSlice;\n        return e.apply(this, arguments);\n    }, e.metaDataParsers = {\n        jpeg: {\n            65505: []\n        }\n    }, e.parseMetaData = function (t, i, a, o) {\n        a = a || {}, o = o || {};\n        var r = this,\n            n = a.maxMetaDataSize || 262144,\n            s = !(window.DataView && t && t.size >= 12 && \"image/jpeg\" === t.type && e.blobSlice);\n        !s && e.readFile(e.blobSlice.call(t, 0, n), function (t) {\n            if (t.target.error) return console.log(t.target.error), void i(o);\n            var n,\n                s,\n                l,\n                d,\n                u = t.target.result,\n                c = new DataView(u),\n                f = 2,\n                g = c.byteLength - 4,\n                h = f;\n            if (65496 === c.getUint16(0)) {\n                for (; f < g && (n = c.getUint16(f), n >= 65504 && n <= 65519 || 65534 === n);) {\n                    if (s = c.getUint16(f + 2) + 2, f + s > c.byteLength) {\n                        console.log(\"Invalid meta data: Invalid segment size.\");\n                        break;\n                    }\n                    if (l = e.metaDataParsers.jpeg[n]) for (d = 0; d < l.length; d += 1) {\n                        l[d].call(r, c, f, s, o, a);\n                    }f += s, h = f;\n                }\n                !a.disableImageHead && h > 6 && (u.slice ? o.imageHead = u.slice(0, h) : o.imageHead = new Uint8Array(u).subarray(0, h));\n            } else console.log(\"Invalid JPEG file: Missing JPEG marker.\");\n            i(o);\n        }, \"readAsArrayBuffer\") || i(o);\n    }, e.hasMetaOption = function (e) {\n        return e.meta;\n    };\n    var i = e.transform;\n    e.transform = function (t, a, o, r, n) {\n        e.hasMetaOption(a || {}) ? e.parseMetaData(r, function (n) {\n            i.call(e, t, a, o, r, n);\n        }, a, n) : i.apply(e, arguments);\n    };\n}), function (e) {\n    \"use strict\";\n\n    e(window.loadImage);\n}(function (e) {\n    \"use strict\";\n\n    e.ExifMap = function () {\n        return this;\n    }, e.ExifMap.prototype.map = {\n        Orientation: 274\n    }, e.ExifMap.prototype.get = function (e) {\n        return this[e] || this[this.map[e]];\n    }, e.getExifThumbnail = function (e, t, i) {\n        var a, o, r;\n        if (!i || t + i > e.byteLength) return void console.log(\"Invalid Exif data: Invalid thumbnail data.\");\n        for (a = [], o = 0; o < i; o += 1) {\n            r = e.getUint8(t + o), a.push((r < 16 ? \"0\" : \"\") + r.toString(16));\n        }return \"data:image/jpeg,%\" + a.join(\"%\");\n    }, e.exifTagTypes = {\n        1: {\n            getValue: function getValue(e, t) {\n                return e.getUint8(t);\n            },\n            size: 1\n        },\n        2: {\n            getValue: function getValue(e, t) {\n                return String.fromCharCode(e.getUint8(t));\n            },\n            size: 1, ascii: !0\n        },\n        3: {\n            getValue: function getValue(e, t, i) {\n                return e.getUint16(t, i);\n            },\n            size: 2\n        },\n        4: {\n            getValue: function getValue(e, t, i) {\n                return e.getUint32(t, i);\n            },\n            size: 4\n        },\n        5: {\n            getValue: function getValue(e, t, i) {\n                return e.getUint32(t, i) / e.getUint32(t + 4, i);\n            },\n            size: 8\n        },\n        9: {\n            getValue: function getValue(e, t, i) {\n                return e.getInt32(t, i);\n            },\n            size: 4\n        },\n        10: {\n            getValue: function getValue(e, t, i) {\n                return e.getInt32(t, i) / e.getInt32(t + 4, i);\n            },\n            size: 8\n        }\n    }, e.exifTagTypes[7] = e.exifTagTypes[1], e.getExifValue = function (t, i, a, o, r, n) {\n        var s,\n            l,\n            d,\n            u,\n            c,\n            f,\n            g = e.exifTagTypes[o];\n        if (!g) return void console.log(\"Invalid Exif data: Invalid tag type.\");\n        if (s = g.size * r, l = s > 4 ? i + t.getUint32(a + 8, n) : a + 8, l + s > t.byteLength) return void console.log(\"Invalid Exif data: Invalid data offset.\");\n        if (1 === r) return g.getValue(t, l, n);\n        for (d = [], u = 0; u < r; u += 1) {\n            d[u] = g.getValue(t, l + u * g.size, n);\n        }if (g.ascii) {\n            for (c = \"\", u = 0; u < d.length && (f = d[u], \"\\0\" !== f); u += 1) {\n                c += f;\n            }return c;\n        }\n        return d;\n    }, e.parseExifTag = function (t, i, a, o, r) {\n        var n = t.getUint16(a, o);\n        r.exif[n] = e.getExifValue(t, i, a, t.getUint16(a + 2, o), t.getUint32(a + 4, o), o);\n    }, e.parseExifTags = function (e, t, i, a, o) {\n        var r, n, s;\n        if (i + 6 > e.byteLength) return void console.log(\"Invalid Exif data: Invalid directory offset.\");\n        if (r = e.getUint16(i, a), n = i + 2 + 12 * r, n + 4 > e.byteLength) return void console.log(\"Invalid Exif data: Invalid directory size.\");\n        for (s = 0; s < r; s += 1) {\n            this.parseExifTag(e, t, i + 2 + 12 * s, a, o);\n        }return e.getUint32(n, a);\n    }, e.parseExifData = function (t, i, a, o, r) {\n        if (!r.disableExif) {\n            var n,\n                s,\n                l,\n                d = i + 10;\n            if (1165519206 === t.getUint32(i + 4)) {\n                if (d + 8 > t.byteLength) return void console.log(\"Invalid Exif data: Invalid segment size.\");\n                if (0 !== t.getUint16(i + 8)) return void console.log(\"Invalid Exif data: Missing byte alignment offset.\");\n                switch (t.getUint16(d)) {\n                    case 18761:\n                        n = !0;\n                        break;\n                    case 19789:\n                        n = !1;\n                        break;\n                    default:\n                        return void console.log(\"Invalid Exif data: Invalid byte alignment marker.\");\n                }\n                if (42 !== t.getUint16(d + 2, n)) return void console.log(\"Invalid Exif data: Missing TIFF marker.\");\n                s = t.getUint32(d + 4, n), o.exif = new e.ExifMap(), s = e.parseExifTags(t, d, d + s, n, o), s && !r.disableExifThumbnail && (l = {\n                    exif: {}\n                }, s = e.parseExifTags(t, d, d + s, n, l), l.exif[513] && (o.exif.Thumbnail = e.getExifThumbnail(t, d + l.exif[513], l.exif[514]))), o.exif[34665] && !r.disableExifSub && e.parseExifTags(t, d, d + o.exif[34665], n, o), o.exif[34853] && !r.disableExifGps && e.parseExifTags(t, d, d + o.exif[34853], n, o);\n            }\n        }\n    }, e.metaDataParsers.jpeg[65505].push(e.parseExifData);\n}), function (e) {\n    \"use strict\";\n\n    e(window.loadImage);\n}(function (e) {\n    \"use strict\";\n\n    e.ExifMap.prototype.tags = {\n        256: \"ImageWidth\", 257: \"ImageHeight\", 34665: \"ExifIFDPointer\", 34853: \"GPSInfoIFDPointer\", 40965: \"InteroperabilityIFDPointer\", 258: \"BitsPerSample\", 259: \"Compression\", 262: \"PhotometricInterpretation\", 274: \"Orientation\", 277: \"SamplesPerPixel\", 284: \"PlanarConfiguration\", 530: \"YCbCrSubSampling\", 531: \"YCbCrPositioning\", 282: \"XResolution\", 283: \"YResolution\", 296: \"ResolutionUnit\", 273: \"StripOffsets\", 278: \"RowsPerStrip\", 279: \"StripByteCounts\", 513: \"JPEGInterchangeFormat\", 514: \"JPEGInterchangeFormatLength\", 301: \"TransferFunction\", 318: \"WhitePoint\", 319: \"PrimaryChromaticities\", 529: \"YCbCrCoefficients\", 532: \"ReferenceBlackWhite\", 306: \"DateTime\", 270: \"ImageDescription\", 271: \"Make\", 272: \"Model\", 305: \"Software\", 315: \"Artist\", 33432: \"Copyright\", 36864: \"ExifVersion\", 40960: \"FlashpixVersion\", 40961: \"ColorSpace\", 40962: \"PixelXDimension\", 40963: \"PixelYDimension\", 42240: \"Gamma\", 37121: \"ComponentsConfiguration\", 37122: \"CompressedBitsPerPixel\", 37500: \"MakerNote\", 37510: \"UserComment\", 40964: \"RelatedSoundFile\", 36867: \"DateTimeOriginal\", 36868: \"DateTimeDigitized\", 37520: \"SubSecTime\", 37521: \"SubSecTimeOriginal\", 37522: \"SubSecTimeDigitized\", 33434: \"ExposureTime\", 33437: \"FNumber\", 34850: \"ExposureProgram\", 34852: \"SpectralSensitivity\", 34855: \"PhotographicSensitivity\", 34856: \"OECF\", 34864: \"SensitivityType\", 34865: \"StandardOutputSensitivity\", 34866: \"RecommendedExposureIndex\", 34867: \"ISOSpeed\", 34868: \"ISOSpeedLatitudeyyy\", 34869: \"ISOSpeedLatitudezzz\", 37377: \"ShutterSpeedValue\", 37378: \"ApertureValue\", 37379: \"BrightnessValue\", 37380: \"ExposureBias\", 37381: \"MaxApertureValue\", 37382: \"SubjectDistance\", 37383: \"MeteringMode\", 37384: \"LightSource\", 37385: \"Flash\", 37396: \"SubjectArea\", 37386: \"FocalLength\", 41483: \"FlashEnergy\", 41484: \"SpatialFrequencyResponse\", 41486: \"FocalPlaneXResolution\", 41487: \"FocalPlaneYResolution\", 41488: \"FocalPlaneResolutionUnit\", 41492: \"SubjectLocation\", 41493: \"ExposureIndex\", 41495: \"SensingMethod\", 41728: \"FileSource\", 41729: \"SceneType\", 41730: \"CFAPattern\", 41985: \"CustomRendered\", 41986: \"ExposureMode\", 41987: \"WhiteBalance\", 41988: \"DigitalZoomRatio\", 41989: \"FocalLengthIn35mmFilm\", 41990: \"SceneCaptureType\", 41991: \"GainControl\", 41992: \"Contrast\", 41993: \"Saturation\", 41994: \"Sharpness\", 41995: \"DeviceSettingDescription\", 41996: \"SubjectDistanceRange\", 42016: \"ImageUniqueID\", 42032: \"CameraOwnerName\", 42033: \"BodySerialNumber\", 42034: \"LensSpecification\", 42035: \"LensMake\", 42036: \"LensModel\", 42037: \"LensSerialNumber\", 0: \"GPSVersionID\", 1: \"GPSLatitudeRef\", 2: \"GPSLatitude\", 3: \"GPSLongitudeRef\", 4: \"GPSLongitude\", 5: \"GPSAltitudeRef\", 6: \"GPSAltitude\", 7: \"GPSTimeStamp\", 8: \"GPSSatellites\", 9: \"GPSStatus\", 10: \"GPSMeasureMode\", 11: \"GPSDOP\", 12: \"GPSSpeedRef\", 13: \"GPSSpeed\", 14: \"GPSTrackRef\", 15: \"GPSTrack\", 16: \"GPSImgDirectionRef\", 17: \"GPSImgDirection\", 18: \"GPSMapDatum\", 19: \"GPSDestLatitudeRef\", 20: \"GPSDestLatitude\", 21: \"GPSDestLongitudeRef\", 22: \"GPSDestLongitude\", 23: \"GPSDestBearingRef\", 24: \"GPSDestBearing\", 25: \"GPSDestDistanceRef\", 26: \"GPSDestDistance\", 27: \"GPSProcessingMethod\", 28: \"GPSAreaInformation\", 29: \"GPSDateStamp\", 30: \"GPSDifferential\", 31: \"GPSHPositioningError\"\n    }, e.ExifMap.prototype.stringValues = {\n        ExposureProgram: {\n            0: \"Undefined\", 1: \"Manual\", 2: \"Normal program\", 3: \"Aperture priority\", 4: \"Shutter priority\", 5: \"Creative program\", 6: \"Action program\", 7: \"Portrait mode\", 8: \"Landscape mode\"\n        },\n        MeteringMode: {\n            0: \"Unknown\", 1: \"Average\", 2: \"CenterWeightedAverage\", 3: \"Spot\", 4: \"MultiSpot\", 5: \"Pattern\", 6: \"Partial\", 255: \"Other\"\n        },\n        LightSource: {\n            0: \"Unknown\", 1: \"Daylight\", 2: \"Fluorescent\", 3: \"Tungsten (incandescent light)\", 4: \"Flash\", 9: \"Fine weather\", 10: \"Cloudy weather\", 11: \"Shade\", 12: \"Daylight fluorescent (D 5700 - 7100K)\", 13: \"Day white fluorescent (N 4600 - 5400K)\", 14: \"Cool white fluorescent (W 3900 - 4500K)\", 15: \"White fluorescent (WW 3200 - 3700K)\", 17: \"Standard light A\", 18: \"Standard light B\", 19: \"Standard light C\", 20: \"D55\", 21: \"D65\", 22: \"D75\", 23: \"D50\", 24: \"ISO studio tungsten\", 255: \"Other\"\n        },\n        Flash: {\n            0: \"Flash did not fire\", 1: \"Flash fired\", 5: \"Strobe return light not detected\", 7: \"Strobe return light detected\", 9: \"Flash fired, compulsory flash mode\", 13: \"Flash fired, compulsory flash mode, return light not detected\", 15: \"Flash fired, compulsory flash mode, return light detected\", 16: \"Flash did not fire, compulsory flash mode\", 24: \"Flash did not fire, auto mode\", 25: \"Flash fired, auto mode\", 29: \"Flash fired, auto mode, return light not detected\", 31: \"Flash fired, auto mode, return light detected\", 32: \"No flash function\", 65: \"Flash fired, red-eye reduction mode\", 69: \"Flash fired, red-eye reduction mode, return light not detected\", 71: \"Flash fired, red-eye reduction mode, return light detected\", 73: \"Flash fired, compulsory flash mode, red-eye reduction mode\", 77: \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\", 79: \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\", 89: \"Flash fired, auto mode, red-eye reduction mode\", 93: \"Flash fired, auto mode, return light not detected, red-eye reduction mode\", 95: \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n        },\n        SensingMethod: {\n            1: \"Undefined\", 2: \"One-chip color area sensor\", 3: \"Two-chip color area sensor\", 4: \"Three-chip color area sensor\", 5: \"Color sequential area sensor\", 7: \"Trilinear sensor\", 8: \"Color sequential linear sensor\"\n        },\n        SceneCaptureType: {\n            0: \"Standard\", 1: \"Landscape\", 2: \"Portrait\", 3: \"Night scene\"\n        },\n        SceneType: {\n            1: \"Directly photographed\"\n        },\n        CustomRendered: {\n            0: \"Normal process\", 1: \"Custom process\"\n        },\n        WhiteBalance: {\n            0: \"Auto white balance\", 1: \"Manual white balance\"\n        },\n        GainControl: {\n            0: \"None\", 1: \"Low gain up\", 2: \"High gain up\", 3: \"Low gain down\", 4: \"High gain down\"\n        },\n        Contrast: {\n            0: \"Normal\", 1: \"Soft\", 2: \"Hard\"\n        },\n        Saturation: {\n            0: \"Normal\", 1: \"Low saturation\", 2: \"High saturation\"\n        },\n        Sharpness: {\n            0: \"Normal\", 1: \"Soft\", 2: \"Hard\"\n        },\n        SubjectDistanceRange: {\n            0: \"Unknown\", 1: \"Macro\", 2: \"Close view\", 3: \"Distant view\"\n        },\n        FileSource: {\n            3: \"DSC\"\n        },\n        ComponentsConfiguration: {\n            0: \"\", 1: \"Y\", 2: \"Cb\", 3: \"Cr\", 4: \"R\", 5: \"G\", 6: \"B\"\n        },\n        Orientation: {\n            1: \"top-left\", 2: \"top-right\", 3: \"bottom-right\", 4: \"bottom-left\", 5: \"left-top\", 6: \"right-top\", 7: \"right-bottom\", 8: \"left-bottom\"\n        }\n    }, e.ExifMap.prototype.getText = function (e) {\n        var t = this.get(e);\n        switch (e) {\n            case \"LightSource\":case \"Flash\":case \"MeteringMode\":case \"ExposureProgram\":case \"SensingMethod\":case \"SceneCaptureType\":case \"SceneType\":case \"CustomRendered\":case \"WhiteBalance\":case \"GainControl\":case \"Contrast\":case \"Saturation\":case \"Sharpness\":case \"SubjectDistanceRange\":case \"FileSource\":case \"Orientation\":\n                return this.stringValues[e][t];\n            case \"ExifVersion\":case \"FlashpixVersion\":\n                if (!t) return;\n                return String.fromCharCode(t[0], t[1], t[2], t[3]);\n            case \"ComponentsConfiguration\":\n                if (!t) return;\n                return this.stringValues[e][t[0]] + this.stringValues[e][t[1]] + this.stringValues[e][t[2]] + this.stringValues[e][t[3]];\n            case \"GPSVersionID\":\n                if (!t) return;\n                return t[0] + \".\" + t[1] + \".\" + t[2] + \".\" + t[3];\n        }\n        return String(t);\n    }, function (e) {\n        var t,\n            i = e.tags,\n            a = e.map;\n        for (t in i) {\n            i.hasOwnProperty(t) && (a[i[t]] = t);\n        }\n    }(e.ExifMap.prototype), e.ExifMap.prototype.getAll = function () {\n        var e,\n            t,\n            i = {};\n        for (e in this) {\n            this.hasOwnProperty(e) && (t = this.tags[e], t && (i[t] = this.getText(t)));\n        }return i;\n    };\n}), function (e) {\n    \"use strict\";\n\n    e(window.loadImage);\n}(function (e) {\n    \"use strict\";\n\n    var t = e.hasCanvasOption,\n        i = e.hasMetaOption,\n        a = e.transformCoordinates,\n        o = e.getTransformedOptions;\n    e.hasCanvasOption = function (i) {\n        return !!i.orientation || t.call(e, i);\n    }, e.hasMetaOption = function (t) {\n        return t.orientation === !0 || i.call(e, t);\n    }, e.transformCoordinates = function (t, i) {\n        a.call(e, t, i);\n        var o = t.getContext(\"2d\"),\n            r = t.width,\n            n = t.height,\n            s = t.style.width,\n            l = t.style.height,\n            d = i.orientation;\n        if (d && !(d > 8)) switch (d > 4 && (t.width = n, t.height = r, t.style.width = l, t.style.height = s), d) {\n            case 2:\n                o.translate(r, 0), o.scale(-1, 1);\n                break;\n            case 3:\n                o.translate(r, n), o.rotate(Math.PI);\n                break;\n            case 4:\n                o.translate(0, n), o.scale(1, -1);\n                break;\n            case 5:\n                o.rotate(.5 * Math.PI), o.scale(1, -1);\n                break;\n            case 6:\n                o.rotate(.5 * Math.PI), o.translate(0, -n);\n                break;\n            case 7:\n                o.rotate(.5 * Math.PI), o.translate(r, -n), o.scale(-1, 1);\n                break;\n            case 8:\n                o.rotate(-.5 * Math.PI), o.translate(-r, 0);\n        }\n    }, e.getTransformedOptions = function (t, i, a) {\n        var r,\n            n,\n            s = o.call(e, t, i),\n            l = s.orientation;\n        if (l === !0 && a && a.exif && (l = a.exif.get(\"Orientation\")), !l || l > 8 || 1 === l) return s;\n        r = {};\n        for (n in s) {\n            s.hasOwnProperty(n) && (r[n] = s[n]);\n        }switch (r.orientation = l, l) {\n            case 2:\n                r.left = s.right, r.right = s.left;\n                break;\n            case 3:\n                r.left = s.right, r.top = s.bottom, r.right = s.left, r.bottom = s.top;\n                break;\n            case 4:\n                r.top = s.bottom, r.bottom = s.top;\n                break;\n            case 5:\n                r.left = s.top, r.top = s.left, r.right = s.bottom, r.bottom = s.right;\n                break;\n            case 6:\n                r.left = s.top, r.top = s.right, r.right = s.bottom, r.bottom = s.left;\n                break;\n            case 7:\n                r.left = s.bottom, r.top = s.right, r.right = s.top, r.bottom = s.left;\n                break;\n            case 8:\n                r.left = s.bottom, r.top = s.left, r.right = s.top, r.bottom = s.right;\n        }\n        return r.orientation > 4 && (r.maxWidth = s.maxHeight, r.maxHeight = s.maxWidth, r.minWidth = s.minHeight, r.minHeight = s.minWidth, r.sourceWidth = s.sourceHeight, r.sourceHeight = s.sourceWidth), r;\n    };\n});\n\n\n},{}]},{},[52]);\n"],"file":"inventory-groupings-management.js"}